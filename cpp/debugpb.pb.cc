// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debugpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "debugpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace debugpb {

namespace {

const ::google::protobuf::Descriptor* GetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RaftLogRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RaftLogRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RaftLogResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RaftLogResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionSizeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionSizeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionSizeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionSizeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionSizeResponse_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionSizeResponse_Entry_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScanMvccRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScanMvccRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScanMvccResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScanMvccResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* InjectFailPointRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InjectFailPointRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* InjectFailPointResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InjectFailPointResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecoverFailPointRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecoverFailPointRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecoverFailPointResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecoverFailPointResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListFailPointsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListFailPointsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListFailPointsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListFailPointsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListFailPointsResponse_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ListFailPointsResponse_Entry_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMetricsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMetricsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMetricsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMetricsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionConsistencyCheckRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionConsistencyCheckRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionConsistencyCheckResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionConsistencyCheckResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyTikvConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyTikvConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModifyTikvConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModifyTikvConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Property_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Property_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRegionPropertiesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRegionPropertiesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRegionPropertiesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRegionPropertiesResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DB_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MODULE_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BottommostLevelCompaction_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_debugpb_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_debugpb_2eproto() {
  protobuf_AddDesc_debugpb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "debugpb.proto");
  GOOGLE_CHECK(file != NULL);
  GetRequest_descriptor_ = file->message_type(0);
  static const int GetRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, db_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, cf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, key_),
  };
  GetRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRequest_descriptor_,
      GetRequest::internal_default_instance(),
      GetRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _internal_metadata_));
  GetResponse_descriptor_ = file->message_type(1);
  static const int GetResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, value_),
  };
  GetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetResponse_descriptor_,
      GetResponse::internal_default_instance(),
      GetResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _internal_metadata_));
  RaftLogRequest_descriptor_ = file->message_type(2);
  static const int RaftLogRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftLogRequest, region_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftLogRequest, log_index_),
  };
  RaftLogRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RaftLogRequest_descriptor_,
      RaftLogRequest::internal_default_instance(),
      RaftLogRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RaftLogRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftLogRequest, _internal_metadata_));
  RaftLogResponse_descriptor_ = file->message_type(3);
  static const int RaftLogResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftLogResponse, entry_),
  };
  RaftLogResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RaftLogResponse_descriptor_,
      RaftLogResponse::internal_default_instance(),
      RaftLogResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RaftLogResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftLogResponse, _internal_metadata_));
  RegionInfoRequest_descriptor_ = file->message_type(4);
  static const int RegionInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfoRequest, region_id_),
  };
  RegionInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionInfoRequest_descriptor_,
      RegionInfoRequest::internal_default_instance(),
      RegionInfoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfoRequest, _internal_metadata_));
  RegionInfoResponse_descriptor_ = file->message_type(5);
  static const int RegionInfoResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfoResponse, raft_local_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfoResponse, raft_apply_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfoResponse, region_local_state_),
  };
  RegionInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionInfoResponse_descriptor_,
      RegionInfoResponse::internal_default_instance(),
      RegionInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfoResponse, _internal_metadata_));
  RegionSizeRequest_descriptor_ = file->message_type(6);
  static const int RegionSizeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeRequest, region_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeRequest, cfs_),
  };
  RegionSizeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionSizeRequest_descriptor_,
      RegionSizeRequest::internal_default_instance(),
      RegionSizeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionSizeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeRequest, _internal_metadata_));
  RegionSizeResponse_descriptor_ = file->message_type(7);
  static const int RegionSizeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeResponse, entries_),
  };
  RegionSizeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionSizeResponse_descriptor_,
      RegionSizeResponse::internal_default_instance(),
      RegionSizeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionSizeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeResponse, _internal_metadata_));
  RegionSizeResponse_Entry_descriptor_ = RegionSizeResponse_descriptor_->nested_type(0);
  static const int RegionSizeResponse_Entry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeResponse_Entry, cf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeResponse_Entry, size_),
  };
  RegionSizeResponse_Entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionSizeResponse_Entry_descriptor_,
      RegionSizeResponse_Entry::internal_default_instance(),
      RegionSizeResponse_Entry_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionSizeResponse_Entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSizeResponse_Entry, _internal_metadata_));
  ScanMvccRequest_descriptor_ = file->message_type(8);
  static const int ScanMvccRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccRequest, from_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccRequest, to_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccRequest, limit_),
  };
  ScanMvccRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScanMvccRequest_descriptor_,
      ScanMvccRequest::internal_default_instance(),
      ScanMvccRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScanMvccRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccRequest, _internal_metadata_));
  ScanMvccResponse_descriptor_ = file->message_type(9);
  static const int ScanMvccResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccResponse, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccResponse, info_),
  };
  ScanMvccResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScanMvccResponse_descriptor_,
      ScanMvccResponse::internal_default_instance(),
      ScanMvccResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScanMvccResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanMvccResponse, _internal_metadata_));
  CompactRequest_descriptor_ = file->message_type(10);
  static const int CompactRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, db_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, cf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, from_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, to_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, threads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, bottommost_level_compaction_),
  };
  CompactRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactRequest_descriptor_,
      CompactRequest::internal_default_instance(),
      CompactRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, _internal_metadata_));
  CompactResponse_descriptor_ = file->message_type(11);
  static const int CompactResponse_offsets_[1] = {
  };
  CompactResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactResponse_descriptor_,
      CompactResponse::internal_default_instance(),
      CompactResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactResponse, _internal_metadata_));
  InjectFailPointRequest_descriptor_ = file->message_type(12);
  static const int InjectFailPointRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InjectFailPointRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InjectFailPointRequest, actions_),
  };
  InjectFailPointRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InjectFailPointRequest_descriptor_,
      InjectFailPointRequest::internal_default_instance(),
      InjectFailPointRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(InjectFailPointRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InjectFailPointRequest, _internal_metadata_));
  InjectFailPointResponse_descriptor_ = file->message_type(13);
  static const int InjectFailPointResponse_offsets_[1] = {
  };
  InjectFailPointResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InjectFailPointResponse_descriptor_,
      InjectFailPointResponse::internal_default_instance(),
      InjectFailPointResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(InjectFailPointResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InjectFailPointResponse, _internal_metadata_));
  RecoverFailPointRequest_descriptor_ = file->message_type(14);
  static const int RecoverFailPointRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverFailPointRequest, name_),
  };
  RecoverFailPointRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecoverFailPointRequest_descriptor_,
      RecoverFailPointRequest::internal_default_instance(),
      RecoverFailPointRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RecoverFailPointRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverFailPointRequest, _internal_metadata_));
  RecoverFailPointResponse_descriptor_ = file->message_type(15);
  static const int RecoverFailPointResponse_offsets_[1] = {
  };
  RecoverFailPointResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecoverFailPointResponse_descriptor_,
      RecoverFailPointResponse::internal_default_instance(),
      RecoverFailPointResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RecoverFailPointResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecoverFailPointResponse, _internal_metadata_));
  ListFailPointsRequest_descriptor_ = file->message_type(16);
  static const int ListFailPointsRequest_offsets_[1] = {
  };
  ListFailPointsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListFailPointsRequest_descriptor_,
      ListFailPointsRequest::internal_default_instance(),
      ListFailPointsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListFailPointsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFailPointsRequest, _internal_metadata_));
  ListFailPointsResponse_descriptor_ = file->message_type(17);
  static const int ListFailPointsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFailPointsResponse, entries_),
  };
  ListFailPointsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListFailPointsResponse_descriptor_,
      ListFailPointsResponse::internal_default_instance(),
      ListFailPointsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListFailPointsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFailPointsResponse, _internal_metadata_));
  ListFailPointsResponse_Entry_descriptor_ = ListFailPointsResponse_descriptor_->nested_type(0);
  static const int ListFailPointsResponse_Entry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFailPointsResponse_Entry, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFailPointsResponse_Entry, actions_),
  };
  ListFailPointsResponse_Entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ListFailPointsResponse_Entry_descriptor_,
      ListFailPointsResponse_Entry::internal_default_instance(),
      ListFailPointsResponse_Entry_offsets_,
      -1,
      -1,
      -1,
      sizeof(ListFailPointsResponse_Entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListFailPointsResponse_Entry, _internal_metadata_));
  GetMetricsRequest_descriptor_ = file->message_type(18);
  static const int GetMetricsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsRequest, all_),
  };
  GetMetricsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMetricsRequest_descriptor_,
      GetMetricsRequest::internal_default_instance(),
      GetMetricsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetMetricsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsRequest, _internal_metadata_));
  GetMetricsResponse_descriptor_ = file->message_type(19);
  static const int GetMetricsResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsResponse, prometheus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsResponse, rocksdb_kv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsResponse, rocksdb_raft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsResponse, jemalloc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsResponse, store_id_),
  };
  GetMetricsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetMetricsResponse_descriptor_,
      GetMetricsResponse::internal_default_instance(),
      GetMetricsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetMetricsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMetricsResponse, _internal_metadata_));
  RegionConsistencyCheckRequest_descriptor_ = file->message_type(20);
  static const int RegionConsistencyCheckRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionConsistencyCheckRequest, region_id_),
  };
  RegionConsistencyCheckRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionConsistencyCheckRequest_descriptor_,
      RegionConsistencyCheckRequest::internal_default_instance(),
      RegionConsistencyCheckRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionConsistencyCheckRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionConsistencyCheckRequest, _internal_metadata_));
  RegionConsistencyCheckResponse_descriptor_ = file->message_type(21);
  static const int RegionConsistencyCheckResponse_offsets_[1] = {
  };
  RegionConsistencyCheckResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionConsistencyCheckResponse_descriptor_,
      RegionConsistencyCheckResponse::internal_default_instance(),
      RegionConsistencyCheckResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegionConsistencyCheckResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionConsistencyCheckResponse, _internal_metadata_));
  ModifyTikvConfigRequest_descriptor_ = file->message_type(22);
  static const int ModifyTikvConfigRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyTikvConfigRequest, module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyTikvConfigRequest, config_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyTikvConfigRequest, config_value_),
  };
  ModifyTikvConfigRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModifyTikvConfigRequest_descriptor_,
      ModifyTikvConfigRequest::internal_default_instance(),
      ModifyTikvConfigRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModifyTikvConfigRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyTikvConfigRequest, _internal_metadata_));
  ModifyTikvConfigResponse_descriptor_ = file->message_type(23);
  static const int ModifyTikvConfigResponse_offsets_[1] = {
  };
  ModifyTikvConfigResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModifyTikvConfigResponse_descriptor_,
      ModifyTikvConfigResponse::internal_default_instance(),
      ModifyTikvConfigResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ModifyTikvConfigResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyTikvConfigResponse, _internal_metadata_));
  Property_descriptor_ = file->message_type(24);
  static const int Property_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, value_),
  };
  Property_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Property_descriptor_,
      Property::internal_default_instance(),
      Property_offsets_,
      -1,
      -1,
      -1,
      sizeof(Property),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Property, _internal_metadata_));
  GetRegionPropertiesRequest_descriptor_ = file->message_type(25);
  static const int GetRegionPropertiesRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionPropertiesRequest, region_id_),
  };
  GetRegionPropertiesRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRegionPropertiesRequest_descriptor_,
      GetRegionPropertiesRequest::internal_default_instance(),
      GetRegionPropertiesRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetRegionPropertiesRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionPropertiesRequest, _internal_metadata_));
  GetRegionPropertiesResponse_descriptor_ = file->message_type(26);
  static const int GetRegionPropertiesResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionPropertiesResponse, props_),
  };
  GetRegionPropertiesResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRegionPropertiesResponse_descriptor_,
      GetRegionPropertiesResponse::internal_default_instance(),
      GetRegionPropertiesResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetRegionPropertiesResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionPropertiesResponse, _internal_metadata_));
  DB_descriptor_ = file->enum_type(0);
  MODULE_descriptor_ = file->enum_type(1);
  BottommostLevelCompaction_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_debugpb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRequest_descriptor_, GetRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetResponse_descriptor_, GetResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RaftLogRequest_descriptor_, RaftLogRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RaftLogResponse_descriptor_, RaftLogResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionInfoRequest_descriptor_, RegionInfoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionInfoResponse_descriptor_, RegionInfoResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionSizeRequest_descriptor_, RegionSizeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionSizeResponse_descriptor_, RegionSizeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionSizeResponse_Entry_descriptor_, RegionSizeResponse_Entry::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScanMvccRequest_descriptor_, ScanMvccRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScanMvccResponse_descriptor_, ScanMvccResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactRequest_descriptor_, CompactRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactResponse_descriptor_, CompactResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InjectFailPointRequest_descriptor_, InjectFailPointRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InjectFailPointResponse_descriptor_, InjectFailPointResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecoverFailPointRequest_descriptor_, RecoverFailPointRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecoverFailPointResponse_descriptor_, RecoverFailPointResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListFailPointsRequest_descriptor_, ListFailPointsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListFailPointsResponse_descriptor_, ListFailPointsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListFailPointsResponse_Entry_descriptor_, ListFailPointsResponse_Entry::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMetricsRequest_descriptor_, GetMetricsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMetricsResponse_descriptor_, GetMetricsResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionConsistencyCheckRequest_descriptor_, RegionConsistencyCheckRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionConsistencyCheckResponse_descriptor_, RegionConsistencyCheckResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModifyTikvConfigRequest_descriptor_, ModifyTikvConfigRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModifyTikvConfigResponse_descriptor_, ModifyTikvConfigResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Property_descriptor_, Property::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRegionPropertiesRequest_descriptor_, GetRegionPropertiesRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRegionPropertiesResponse_descriptor_, GetRegionPropertiesResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_debugpb_2eproto() {
  GetRequest_default_instance_.Shutdown();
  delete GetRequest_reflection_;
  GetResponse_default_instance_.Shutdown();
  delete GetResponse_reflection_;
  RaftLogRequest_default_instance_.Shutdown();
  delete RaftLogRequest_reflection_;
  RaftLogResponse_default_instance_.Shutdown();
  delete RaftLogResponse_reflection_;
  RegionInfoRequest_default_instance_.Shutdown();
  delete RegionInfoRequest_reflection_;
  RegionInfoResponse_default_instance_.Shutdown();
  delete RegionInfoResponse_reflection_;
  RegionSizeRequest_default_instance_.Shutdown();
  delete RegionSizeRequest_reflection_;
  RegionSizeResponse_default_instance_.Shutdown();
  delete RegionSizeResponse_reflection_;
  RegionSizeResponse_Entry_default_instance_.Shutdown();
  delete RegionSizeResponse_Entry_reflection_;
  ScanMvccRequest_default_instance_.Shutdown();
  delete ScanMvccRequest_reflection_;
  ScanMvccResponse_default_instance_.Shutdown();
  delete ScanMvccResponse_reflection_;
  CompactRequest_default_instance_.Shutdown();
  delete CompactRequest_reflection_;
  CompactResponse_default_instance_.Shutdown();
  delete CompactResponse_reflection_;
  InjectFailPointRequest_default_instance_.Shutdown();
  delete InjectFailPointRequest_reflection_;
  InjectFailPointResponse_default_instance_.Shutdown();
  delete InjectFailPointResponse_reflection_;
  RecoverFailPointRequest_default_instance_.Shutdown();
  delete RecoverFailPointRequest_reflection_;
  RecoverFailPointResponse_default_instance_.Shutdown();
  delete RecoverFailPointResponse_reflection_;
  ListFailPointsRequest_default_instance_.Shutdown();
  delete ListFailPointsRequest_reflection_;
  ListFailPointsResponse_default_instance_.Shutdown();
  delete ListFailPointsResponse_reflection_;
  ListFailPointsResponse_Entry_default_instance_.Shutdown();
  delete ListFailPointsResponse_Entry_reflection_;
  GetMetricsRequest_default_instance_.Shutdown();
  delete GetMetricsRequest_reflection_;
  GetMetricsResponse_default_instance_.Shutdown();
  delete GetMetricsResponse_reflection_;
  RegionConsistencyCheckRequest_default_instance_.Shutdown();
  delete RegionConsistencyCheckRequest_reflection_;
  RegionConsistencyCheckResponse_default_instance_.Shutdown();
  delete RegionConsistencyCheckResponse_reflection_;
  ModifyTikvConfigRequest_default_instance_.Shutdown();
  delete ModifyTikvConfigRequest_reflection_;
  ModifyTikvConfigResponse_default_instance_.Shutdown();
  delete ModifyTikvConfigResponse_reflection_;
  Property_default_instance_.Shutdown();
  delete Property_reflection_;
  GetRegionPropertiesRequest_default_instance_.Shutdown();
  delete GetRegionPropertiesRequest_reflection_;
  GetRegionPropertiesResponse_default_instance_.Shutdown();
  delete GetRegionPropertiesResponse_reflection_;
}

void protobuf_InitDefaults_debugpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::eraftpb::protobuf_InitDefaults_eraftpb_2eproto();
  ::kvrpcpb::protobuf_InitDefaults_kvrpcpb_2eproto();
  ::raft_serverpb::protobuf_InitDefaults_raft_5fserverpb_2eproto();
  ::gogoproto::protobuf_InitDefaults_gogoproto_2fgogo_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  GetRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetResponse_default_instance_.DefaultConstruct();
  RaftLogRequest_default_instance_.DefaultConstruct();
  RaftLogResponse_default_instance_.DefaultConstruct();
  RegionInfoRequest_default_instance_.DefaultConstruct();
  RegionInfoResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RegionSizeRequest_default_instance_.DefaultConstruct();
  RegionSizeResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RegionSizeResponse_Entry_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ScanMvccRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ScanMvccResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CompactRequest_default_instance_.DefaultConstruct();
  CompactResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InjectFailPointRequest_default_instance_.DefaultConstruct();
  InjectFailPointResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RecoverFailPointRequest_default_instance_.DefaultConstruct();
  RecoverFailPointResponse_default_instance_.DefaultConstruct();
  ListFailPointsRequest_default_instance_.DefaultConstruct();
  ListFailPointsResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ListFailPointsResponse_Entry_default_instance_.DefaultConstruct();
  GetMetricsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetMetricsResponse_default_instance_.DefaultConstruct();
  RegionConsistencyCheckRequest_default_instance_.DefaultConstruct();
  RegionConsistencyCheckResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ModifyTikvConfigRequest_default_instance_.DefaultConstruct();
  ModifyTikvConfigResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Property_default_instance_.DefaultConstruct();
  GetRegionPropertiesRequest_default_instance_.DefaultConstruct();
  GetRegionPropertiesResponse_default_instance_.DefaultConstruct();
  GetRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RaftLogRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RaftLogResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionInfoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionSizeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionSizeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionSizeResponse_Entry_default_instance_.get_mutable()->InitAsDefaultInstance();
  ScanMvccRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ScanMvccResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CompactRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CompactResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  InjectFailPointRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  InjectFailPointResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RecoverFailPointRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RecoverFailPointResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListFailPointsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListFailPointsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ListFailPointsResponse_Entry_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetMetricsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetMetricsResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionConsistencyCheckRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionConsistencyCheckResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ModifyTikvConfigRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ModifyTikvConfigResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  Property_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetRegionPropertiesRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetRegionPropertiesResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_debugpb_2eproto_once_);
void protobuf_InitDefaults_debugpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_debugpb_2eproto_once_,
                 &protobuf_InitDefaults_debugpb_2eproto_impl);
}
void protobuf_AddDesc_debugpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_debugpb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rdebugpb.proto\022\007debugpb\032\reraftpb.proto\032"
    "\rkvrpcpb.proto\032\023raft_serverpb.proto\032\024gog"
    "oproto/gogo.proto\">\n\nGetRequest\022\027\n\002db\030\001 "
    "\001(\0162\013.debugpb.DB\022\n\n\002cf\030\002 \001(\t\022\013\n\003key\030\003 \001("
    "\014\"\034\n\013GetResponse\022\r\n\005value\030\001 \001(\014\"6\n\016RaftL"
    "ogRequest\022\021\n\tregion_id\030\001 \001(\004\022\021\n\tlog_inde"
    "x\030\002 \001(\004\"0\n\017RaftLogResponse\022\035\n\005entry\030\001 \001("
    "\0132\016.eraftpb.Entry\"&\n\021RegionInfoRequest\022\021"
    "\n\tregion_id\030\001 \001(\004\"\303\001\n\022RegionInfoResponse"
    "\0227\n\020raft_local_state\030\001 \001(\0132\035.raft_server"
    "pb.RaftLocalState\0227\n\020raft_apply_state\030\002 "
    "\001(\0132\035.raft_serverpb.RaftApplyState\022;\n\022re"
    "gion_local_state\030\003 \001(\0132\037.raft_serverpb.R"
    "egionLocalState\"3\n\021RegionSizeRequest\022\021\n\t"
    "region_id\030\001 \001(\004\022\013\n\003cfs\030\002 \003(\t\"k\n\022RegionSi"
    "zeResponse\0222\n\007entries\030\001 \003(\0132!.debugpb.Re"
    "gionSizeResponse.Entry\032!\n\005Entry\022\n\n\002cf\030\001 "
    "\001(\t\022\014\n\004size\030\002 \001(\004\"B\n\017ScanMvccRequest\022\020\n\010"
    "from_key\030\001 \001(\014\022\016\n\006to_key\030\002 \001(\014\022\r\n\005limit\030"
    "\003 \001(\004\"@\n\020ScanMvccResponse\022\013\n\003key\030\001 \001(\014\022\037"
    "\n\004info\030\002 \001(\0132\021.kvrpcpb.MvccInfo\"\261\001\n\016Comp"
    "actRequest\022\027\n\002db\030\001 \001(\0162\013.debugpb.DB\022\n\n\002c"
    "f\030\002 \001(\t\022\020\n\010from_key\030\003 \001(\014\022\016\n\006to_key\030\004 \001("
    "\014\022\017\n\007threads\030\005 \001(\r\022G\n\033bottommost_level_c"
    "ompaction\030\006 \001(\0162\".debugpb.BottommostLeve"
    "lCompaction\"\021\n\017CompactResponse\"7\n\026Inject"
    "FailPointRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007action"
    "s\030\002 \001(\t\"\031\n\027InjectFailPointResponse\"\'\n\027Re"
    "coverFailPointRequest\022\014\n\004name\030\001 \001(\t\"\032\n\030R"
    "ecoverFailPointResponse\"\027\n\025ListFailPoint"
    "sRequest\"x\n\026ListFailPointsResponse\0226\n\007en"
    "tries\030\001 \003(\0132%.debugpb.ListFailPointsResp"
    "onse.Entry\032&\n\005Entry\022\014\n\004name\030\001 \001(\t\022\017\n\007act"
    "ions\030\002 \001(\t\" \n\021GetMetricsRequest\022\013\n\003all\030\001"
    " \001(\010\"v\n\022GetMetricsResponse\022\022\n\nprometheus"
    "\030\001 \001(\t\022\022\n\nrocksdb_kv\030\002 \001(\t\022\024\n\014rocksdb_ra"
    "ft\030\003 \001(\t\022\020\n\010jemalloc\030\004 \001(\t\022\020\n\010store_id\030\005"
    " \001(\004\"2\n\035RegionConsistencyCheckRequest\022\021\n"
    "\tregion_id\030\001 \001(\004\" \n\036RegionConsistencyChe"
    "ckResponse\"e\n\027ModifyTikvConfigRequest\022\037\n"
    "\006module\030\001 \001(\0162\017.debugpb.MODULE\022\023\n\013config"
    "_name\030\002 \001(\t\022\024\n\014config_value\030\003 \001(\t\"\032\n\030Mod"
    "ifyTikvConfigResponse\"\'\n\010Property\022\014\n\004nam"
    "e\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"/\n\032GetRegionPrope"
    "rtiesRequest\022\021\n\tregion_id\030\001 \001(\004\"\?\n\033GetRe"
    "gionPropertiesResponse\022 \n\005props\030\001 \003(\0132\021."
    "debugpb.Property*#\n\002DB\022\013\n\007INVALID\020\000\022\006\n\002K"
    "V\020\001\022\010\n\004RAFT\020\002*\220\001\n\006MODULE\022\n\n\006UNUSED\020\000\022\010\n\004"
    "KVDB\020\001\022\n\n\006RAFTDB\020\002\022\014\n\010READPOOL\020\003\022\n\n\006SERV"
    "ER\020\004\022\013\n\007STORAGE\020\005\022\006\n\002PD\020\006\022\n\n\006METRIC\020\007\022\017\n"
    "\013COPROCESSOR\020\010\022\014\n\010SECURITY\020\t\022\n\n\006IMPORT\020\n"
    "*L\n\031BottommostLevelCompaction\022\010\n\004Skip\020\000\022"
    "\t\n\005Force\020\001\022\032\n\026IfHaveCompactionFilter\020\0022\217"
    "\010\n\005Debug\0222\n\003Get\022\023.debugpb.GetRequest\032\024.d"
    "ebugpb.GetResponse\"\000\022>\n\007RaftLog\022\027.debugp"
    "b.RaftLogRequest\032\030.debugpb.RaftLogRespon"
    "se\"\000\022G\n\nRegionInfo\022\032.debugpb.RegionInfoR"
    "equest\032\033.debugpb.RegionInfoResponse\"\000\022G\n"
    "\nRegionSize\022\032.debugpb.RegionSizeRequest\032"
    "\033.debugpb.RegionSizeResponse\"\000\022C\n\010ScanMv"
    "cc\022\030.debugpb.ScanMvccRequest\032\031.debugpb.S"
    "canMvccResponse\"\0000\001\022>\n\007Compact\022\027.debugpb"
    ".CompactRequest\032\030.debugpb.CompactRespons"
    "e\"\000\022V\n\017InjectFailPoint\022\037.debugpb.InjectF"
    "ailPointRequest\032 .debugpb.InjectFailPoin"
    "tResponse\"\000\022Y\n\020RecoverFailPoint\022 .debugp"
    "b.RecoverFailPointRequest\032!.debugpb.Reco"
    "verFailPointResponse\"\000\022S\n\016ListFailPoints"
    "\022\036.debugpb.ListFailPointsRequest\032\037.debug"
    "pb.ListFailPointsResponse\"\000\022G\n\nGetMetric"
    "s\022\032.debugpb.GetMetricsRequest\032\033.debugpb."
    "GetMetricsResponse\"\000\022k\n\026CheckRegionConsi"
    "stency\022&.debugpb.RegionConsistencyCheckR"
    "equest\032\'.debugpb.RegionConsistencyCheckR"
    "esponse\"\000\022Y\n\020ModifyTikvConfig\022 .debugpb."
    "ModifyTikvConfigRequest\032!.debugpb.Modify"
    "TikvConfigResponse\"\000\022b\n\023GetRegionPropert"
    "ies\022#.debugpb.GetRegionPropertiesRequest"
    "\032$.debugpb.GetRegionPropertiesResponse\"\000"
    "B&\n\030com.pingcap.tikv.kvproto\340\342\036\001\310\342\036\001\320\342\036\001"
    "b\006proto3", 3208);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "debugpb.proto", &protobuf_RegisterTypes);
  ::eraftpb::protobuf_AddDesc_eraftpb_2eproto();
  ::kvrpcpb::protobuf_AddDesc_kvrpcpb_2eproto();
  ::raft_serverpb::protobuf_AddDesc_raft_5fserverpb_2eproto();
  ::gogoproto::protobuf_AddDesc_gogoproto_2fgogo_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_debugpb_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_debugpb_2eproto_once_);
void protobuf_AddDesc_debugpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_debugpb_2eproto_once_,
                 &protobuf_AddDesc_debugpb_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_debugpb_2eproto {
  StaticDescriptorInitializer_debugpb_2eproto() {
    protobuf_AddDesc_debugpb_2eproto();
  }
} static_descriptor_initializer_debugpb_2eproto_;
const ::google::protobuf::EnumDescriptor* DB_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DB_descriptor_;
}
bool DB_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MODULE_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MODULE_descriptor_;
}
bool MODULE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BottommostLevelCompaction_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BottommostLevelCompaction_descriptor_;
}
bool BottommostLevelCompaction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kDbFieldNumber;
const int GetRequest::kCfFieldNumber;
const int GetRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetRequest)
}

void GetRequest::InitAsDefaultInstance() {
}

GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetRequest)
}

void GetRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_ = 0;
  _cached_size_ = 0;
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:debugpb.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRequest_descriptor_;
}

const GetRequest& GetRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRequest> GetRequest_default_instance_;

GetRequest* GetRequest::New(::google::protobuf::Arena* arena) const {
  GetRequest* n = new GetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetRequest)
  db_ = 0;
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .debugpb.DB db = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_db(static_cast< ::debugpb::DB >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cf;
        break;
      }

      // optional string cf = 2;
      case 2: {
        if (tag == 18) {
         parse_cf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), this->cf().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetRequest.cf"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_key;
        break;
      }

      // optional bytes key = 3;
      case 3: {
        if (tag == 26) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetRequest)
  // optional .debugpb.DB db = 1;
  if (this->db() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->db(), output);
  }

  // optional string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), this->cf().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cf(), output);
  }

  // optional bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetRequest)
  // optional .debugpb.DB db = 1;
  if (this->db() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->db(), target);
  }

  // optional string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), this->cf().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cf(), target);
  }

  // optional bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetRequest)
  size_t total_size = 0;

  // optional .debugpb.DB db = 1;
  if (this->db() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->db());
  }

  // optional string cf = 2;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // optional bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRequest::UnsafeMergeFrom(const GetRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.db() != 0) {
    set_db(from.db());
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRequest::IsInitialized() const {

  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  std::swap(db_, other->db_);
  cf_.Swap(&other->cf_);
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRequest_descriptor_;
  metadata.reflection = GetRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// optional .debugpb.DB db = 1;
void GetRequest::clear_db() {
  db_ = 0;
}
::debugpb::DB GetRequest::db() const {
  // @@protoc_insertion_point(field_get:debugpb.GetRequest.db)
  return static_cast< ::debugpb::DB >(db_);
}
void GetRequest::set_db(::debugpb::DB value) {
  
  db_ = value;
  // @@protoc_insertion_point(field_set:debugpb.GetRequest.db)
}

// optional string cf = 2;
void GetRequest::clear_cf() {
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetRequest::cf() const {
  // @@protoc_insertion_point(field_get:debugpb.GetRequest.cf)
  return cf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRequest::set_cf(const ::std::string& value) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetRequest.cf)
}
void GetRequest::set_cf(const char* value) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetRequest.cf)
}
void GetRequest::set_cf(const char* value, size_t size) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetRequest.cf)
}
::std::string* GetRequest::mutable_cf() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetRequest.cf)
  return cf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRequest::release_cf() {
  // @@protoc_insertion_point(field_release:debugpb.GetRequest.cf)
  
  return cf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRequest::set_allocated_cf(::std::string* cf) {
  if (cf != NULL) {
    
  } else {
    
  }
  cf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cf);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetRequest.cf)
}

// optional bytes key = 3;
void GetRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetRequest::key() const {
  // @@protoc_insertion_point(field_get:debugpb.GetRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetRequest.key)
}
void GetRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetRequest.key)
}
void GetRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetRequest.key)
}
::std::string* GetRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRequest::release_key() {
  // @@protoc_insertion_point(field_release:debugpb.GetRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetRequest.key)
}

inline const GetRequest* GetRequest::internal_default_instance() {
  return &GetRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetResponse)
}

void GetResponse::InitAsDefaultInstance() {
}

GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetResponse)
}

void GetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:debugpb.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetResponse_descriptor_;
}

const GetResponse& GetResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetResponse> GetResponse_default_instance_;

GetResponse* GetResponse::New(::google::protobuf::Arena* arena) const {
  GetResponse* n = new GetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetResponse)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetResponse)
  // optional bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetResponse)
  // optional bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetResponse)
  size_t total_size = 0;

  // optional bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetResponse::UnsafeMergeFrom(const GetResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetResponse::IsInitialized() const {

  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetResponse_descriptor_;
  metadata.reflection = GetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResponse

// optional bytes value = 1;
void GetResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResponse::value() const {
  // @@protoc_insertion_point(field_get:debugpb.GetResponse.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetResponse.value)
}
void GetResponse::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetResponse.value)
}
void GetResponse::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetResponse.value)
}
::std::string* GetResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResponse::release_value() {
  // @@protoc_insertion_point(field_release:debugpb.GetResponse.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetResponse.value)
}

inline const GetResponse* GetResponse::internal_default_instance() {
  return &GetResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaftLogRequest::kRegionIdFieldNumber;
const int RaftLogRequest::kLogIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaftLogRequest::RaftLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RaftLogRequest)
}

void RaftLogRequest::InitAsDefaultInstance() {
}

RaftLogRequest::RaftLogRequest(const RaftLogRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RaftLogRequest)
}

void RaftLogRequest::SharedCtor() {
  ::memset(&region_id_, 0, reinterpret_cast<char*>(&log_index_) -
    reinterpret_cast<char*>(&region_id_) + sizeof(log_index_));
  _cached_size_ = 0;
}

RaftLogRequest::~RaftLogRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RaftLogRequest)
  SharedDtor();
}

void RaftLogRequest::SharedDtor() {
}

void RaftLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RaftLogRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RaftLogRequest_descriptor_;
}

const RaftLogRequest& RaftLogRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RaftLogRequest> RaftLogRequest_default_instance_;

RaftLogRequest* RaftLogRequest::New(::google::protobuf::Arena* arena) const {
  RaftLogRequest* n = new RaftLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RaftLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RaftLogRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RaftLogRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RaftLogRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(region_id_, log_index_);

#undef ZR_HELPER_
#undef ZR_

}

bool RaftLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RaftLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 region_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_log_index;
        break;
      }

      // optional uint64 log_index = 2;
      case 2: {
        if (tag == 16) {
         parse_log_index:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RaftLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RaftLogRequest)
  return false;
#undef DO_
}

void RaftLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RaftLogRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // optional uint64 log_index = 2;
  if (this->log_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->log_index(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RaftLogRequest)
}

::google::protobuf::uint8* RaftLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RaftLogRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // optional uint64 log_index = 2;
  if (this->log_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->log_index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RaftLogRequest)
  return target;
}

size_t RaftLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RaftLogRequest)
  size_t total_size = 0;

  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  // optional uint64 log_index = 2;
  if (this->log_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RaftLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RaftLogRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RaftLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaftLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RaftLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RaftLogRequest)
    UnsafeMergeFrom(*source);
  }
}

void RaftLogRequest::MergeFrom(const RaftLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RaftLogRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RaftLogRequest::UnsafeMergeFrom(const RaftLogRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.log_index() != 0) {
    set_log_index(from.log_index());
  }
}

void RaftLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RaftLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaftLogRequest::CopyFrom(const RaftLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RaftLogRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RaftLogRequest::IsInitialized() const {

  return true;
}

void RaftLogRequest::Swap(RaftLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaftLogRequest::InternalSwap(RaftLogRequest* other) {
  std::swap(region_id_, other->region_id_);
  std::swap(log_index_, other->log_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RaftLogRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RaftLogRequest_descriptor_;
  metadata.reflection = RaftLogRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RaftLogRequest

// optional uint64 region_id = 1;
void RaftLogRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RaftLogRequest::region_id() const {
  // @@protoc_insertion_point(field_get:debugpb.RaftLogRequest.region_id)
  return region_id_;
}
void RaftLogRequest::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:debugpb.RaftLogRequest.region_id)
}

// optional uint64 log_index = 2;
void RaftLogRequest::clear_log_index() {
  log_index_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RaftLogRequest::log_index() const {
  // @@protoc_insertion_point(field_get:debugpb.RaftLogRequest.log_index)
  return log_index_;
}
void RaftLogRequest::set_log_index(::google::protobuf::uint64 value) {
  
  log_index_ = value;
  // @@protoc_insertion_point(field_set:debugpb.RaftLogRequest.log_index)
}

inline const RaftLogRequest* RaftLogRequest::internal_default_instance() {
  return &RaftLogRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaftLogResponse::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaftLogResponse::RaftLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RaftLogResponse)
}

void RaftLogResponse::InitAsDefaultInstance() {
  entry_ = const_cast< ::eraftpb::Entry*>(
      ::eraftpb::Entry::internal_default_instance());
}

RaftLogResponse::RaftLogResponse(const RaftLogResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RaftLogResponse)
}

void RaftLogResponse::SharedCtor() {
  entry_ = NULL;
  _cached_size_ = 0;
}

RaftLogResponse::~RaftLogResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RaftLogResponse)
  SharedDtor();
}

void RaftLogResponse::SharedDtor() {
  if (this != &RaftLogResponse_default_instance_.get()) {
    delete entry_;
  }
}

void RaftLogResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RaftLogResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RaftLogResponse_descriptor_;
}

const RaftLogResponse& RaftLogResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RaftLogResponse> RaftLogResponse_default_instance_;

RaftLogResponse* RaftLogResponse::New(::google::protobuf::Arena* arena) const {
  RaftLogResponse* n = new RaftLogResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RaftLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RaftLogResponse)
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) delete entry_;
  entry_ = NULL;
}

bool RaftLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RaftLogResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eraftpb.Entry entry = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RaftLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RaftLogResponse)
  return false;
#undef DO_
}

void RaftLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RaftLogResponse)
  // optional .eraftpb.Entry entry = 1;
  if (this->has_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entry_, output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RaftLogResponse)
}

::google::protobuf::uint8* RaftLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RaftLogResponse)
  // optional .eraftpb.Entry entry = 1;
  if (this->has_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->entry_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RaftLogResponse)
  return target;
}

size_t RaftLogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RaftLogResponse)
  size_t total_size = 0;

  // optional .eraftpb.Entry entry = 1;
  if (this->has_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RaftLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RaftLogResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RaftLogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaftLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RaftLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RaftLogResponse)
    UnsafeMergeFrom(*source);
  }
}

void RaftLogResponse::MergeFrom(const RaftLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RaftLogResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RaftLogResponse::UnsafeMergeFrom(const RaftLogResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_entry()) {
    mutable_entry()->::eraftpb::Entry::MergeFrom(from.entry());
  }
}

void RaftLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RaftLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaftLogResponse::CopyFrom(const RaftLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RaftLogResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RaftLogResponse::IsInitialized() const {

  return true;
}

void RaftLogResponse::Swap(RaftLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaftLogResponse::InternalSwap(RaftLogResponse* other) {
  std::swap(entry_, other->entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RaftLogResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RaftLogResponse_descriptor_;
  metadata.reflection = RaftLogResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RaftLogResponse

// optional .eraftpb.Entry entry = 1;
bool RaftLogResponse::has_entry() const {
  return this != internal_default_instance() && entry_ != NULL;
}
void RaftLogResponse::clear_entry() {
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) delete entry_;
  entry_ = NULL;
}
const ::eraftpb::Entry& RaftLogResponse::entry() const {
  // @@protoc_insertion_point(field_get:debugpb.RaftLogResponse.entry)
  return entry_ != NULL ? *entry_
                         : *::eraftpb::Entry::internal_default_instance();
}
::eraftpb::Entry* RaftLogResponse::mutable_entry() {
  
  if (entry_ == NULL) {
    entry_ = new ::eraftpb::Entry;
  }
  // @@protoc_insertion_point(field_mutable:debugpb.RaftLogResponse.entry)
  return entry_;
}
::eraftpb::Entry* RaftLogResponse::release_entry() {
  // @@protoc_insertion_point(field_release:debugpb.RaftLogResponse.entry)
  
  ::eraftpb::Entry* temp = entry_;
  entry_ = NULL;
  return temp;
}
void RaftLogResponse::set_allocated_entry(::eraftpb::Entry* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:debugpb.RaftLogResponse.entry)
}

inline const RaftLogResponse* RaftLogResponse::internal_default_instance() {
  return &RaftLogResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfoRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfoRequest::RegionInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionInfoRequest)
}

void RegionInfoRequest::InitAsDefaultInstance() {
}

RegionInfoRequest::RegionInfoRequest(const RegionInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionInfoRequest)
}

void RegionInfoRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RegionInfoRequest::~RegionInfoRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RegionInfoRequest)
  SharedDtor();
}

void RegionInfoRequest::SharedDtor() {
}

void RegionInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionInfoRequest_descriptor_;
}

const RegionInfoRequest& RegionInfoRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionInfoRequest> RegionInfoRequest_default_instance_;

RegionInfoRequest* RegionInfoRequest::New(::google::protobuf::Arena* arena) const {
  RegionInfoRequest* n = new RegionInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionInfoRequest)
  region_id_ = GOOGLE_ULONGLONG(0);
}

bool RegionInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 region_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionInfoRequest)
  return false;
#undef DO_
}

void RegionInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionInfoRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RegionInfoRequest)
}

::google::protobuf::uint8* RegionInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionInfoRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionInfoRequest)
  return target;
}

size_t RegionInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionInfoRequest)
  size_t total_size = 0;

  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionInfoRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegionInfoRequest::MergeFrom(const RegionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionInfoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionInfoRequest::UnsafeMergeFrom(const RegionInfoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfoRequest::CopyFrom(const RegionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionInfoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionInfoRequest::IsInitialized() const {

  return true;
}

void RegionInfoRequest::Swap(RegionInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfoRequest::InternalSwap(RegionInfoRequest* other) {
  std::swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionInfoRequest_descriptor_;
  metadata.reflection = RegionInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionInfoRequest

// optional uint64 region_id = 1;
void RegionInfoRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RegionInfoRequest::region_id() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionInfoRequest.region_id)
  return region_id_;
}
void RegionInfoRequest::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:debugpb.RegionInfoRequest.region_id)
}

inline const RegionInfoRequest* RegionInfoRequest::internal_default_instance() {
  return &RegionInfoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfoResponse::kRaftLocalStateFieldNumber;
const int RegionInfoResponse::kRaftApplyStateFieldNumber;
const int RegionInfoResponse::kRegionLocalStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfoResponse::RegionInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionInfoResponse)
}

void RegionInfoResponse::InitAsDefaultInstance() {
  raft_local_state_ = const_cast< ::raft_serverpb::RaftLocalState*>(
      ::raft_serverpb::RaftLocalState::internal_default_instance());
  raft_apply_state_ = const_cast< ::raft_serverpb::RaftApplyState*>(
      ::raft_serverpb::RaftApplyState::internal_default_instance());
  region_local_state_ = const_cast< ::raft_serverpb::RegionLocalState*>(
      ::raft_serverpb::RegionLocalState::internal_default_instance());
}

RegionInfoResponse::RegionInfoResponse(const RegionInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionInfoResponse)
}

void RegionInfoResponse::SharedCtor() {
  raft_local_state_ = NULL;
  raft_apply_state_ = NULL;
  region_local_state_ = NULL;
  _cached_size_ = 0;
}

RegionInfoResponse::~RegionInfoResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RegionInfoResponse)
  SharedDtor();
}

void RegionInfoResponse::SharedDtor() {
  if (this != &RegionInfoResponse_default_instance_.get()) {
    delete raft_local_state_;
    delete raft_apply_state_;
    delete region_local_state_;
  }
}

void RegionInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionInfoResponse_descriptor_;
}

const RegionInfoResponse& RegionInfoResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionInfoResponse> RegionInfoResponse_default_instance_;

RegionInfoResponse* RegionInfoResponse::New(::google::protobuf::Arena* arena) const {
  RegionInfoResponse* n = new RegionInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionInfoResponse)
  if (GetArenaNoVirtual() == NULL && raft_local_state_ != NULL) delete raft_local_state_;
  raft_local_state_ = NULL;
  if (GetArenaNoVirtual() == NULL && raft_apply_state_ != NULL) delete raft_apply_state_;
  raft_apply_state_ = NULL;
  if (GetArenaNoVirtual() == NULL && region_local_state_ != NULL) delete region_local_state_;
  region_local_state_ = NULL;
}

bool RegionInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .raft_serverpb.RaftLocalState raft_local_state = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raft_local_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_raft_apply_state;
        break;
      }

      // optional .raft_serverpb.RaftApplyState raft_apply_state = 2;
      case 2: {
        if (tag == 18) {
         parse_raft_apply_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raft_apply_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_region_local_state;
        break;
      }

      // optional .raft_serverpb.RegionLocalState region_local_state = 3;
      case 3: {
        if (tag == 26) {
         parse_region_local_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region_local_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionInfoResponse)
  return false;
#undef DO_
}

void RegionInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionInfoResponse)
  // optional .raft_serverpb.RaftLocalState raft_local_state = 1;
  if (this->has_raft_local_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->raft_local_state_, output);
  }

  // optional .raft_serverpb.RaftApplyState raft_apply_state = 2;
  if (this->has_raft_apply_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->raft_apply_state_, output);
  }

  // optional .raft_serverpb.RegionLocalState region_local_state = 3;
  if (this->has_region_local_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->region_local_state_, output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RegionInfoResponse)
}

::google::protobuf::uint8* RegionInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionInfoResponse)
  // optional .raft_serverpb.RaftLocalState raft_local_state = 1;
  if (this->has_raft_local_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->raft_local_state_, false, target);
  }

  // optional .raft_serverpb.RaftApplyState raft_apply_state = 2;
  if (this->has_raft_apply_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->raft_apply_state_, false, target);
  }

  // optional .raft_serverpb.RegionLocalState region_local_state = 3;
  if (this->has_region_local_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->region_local_state_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionInfoResponse)
  return target;
}

size_t RegionInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionInfoResponse)
  size_t total_size = 0;

  // optional .raft_serverpb.RaftLocalState raft_local_state = 1;
  if (this->has_raft_local_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->raft_local_state_);
  }

  // optional .raft_serverpb.RaftApplyState raft_apply_state = 2;
  if (this->has_raft_apply_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->raft_apply_state_);
  }

  // optional .raft_serverpb.RegionLocalState region_local_state = 3;
  if (this->has_region_local_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->region_local_state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegionInfoResponse::MergeFrom(const RegionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionInfoResponse::UnsafeMergeFrom(const RegionInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_raft_local_state()) {
    mutable_raft_local_state()->::raft_serverpb::RaftLocalState::MergeFrom(from.raft_local_state());
  }
  if (from.has_raft_apply_state()) {
    mutable_raft_apply_state()->::raft_serverpb::RaftApplyState::MergeFrom(from.raft_apply_state());
  }
  if (from.has_region_local_state()) {
    mutable_region_local_state()->::raft_serverpb::RegionLocalState::MergeFrom(from.region_local_state());
  }
}

void RegionInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfoResponse::CopyFrom(const RegionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionInfoResponse::IsInitialized() const {

  return true;
}

void RegionInfoResponse::Swap(RegionInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfoResponse::InternalSwap(RegionInfoResponse* other) {
  std::swap(raft_local_state_, other->raft_local_state_);
  std::swap(raft_apply_state_, other->raft_apply_state_);
  std::swap(region_local_state_, other->region_local_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionInfoResponse_descriptor_;
  metadata.reflection = RegionInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionInfoResponse

// optional .raft_serverpb.RaftLocalState raft_local_state = 1;
bool RegionInfoResponse::has_raft_local_state() const {
  return this != internal_default_instance() && raft_local_state_ != NULL;
}
void RegionInfoResponse::clear_raft_local_state() {
  if (GetArenaNoVirtual() == NULL && raft_local_state_ != NULL) delete raft_local_state_;
  raft_local_state_ = NULL;
}
const ::raft_serverpb::RaftLocalState& RegionInfoResponse::raft_local_state() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionInfoResponse.raft_local_state)
  return raft_local_state_ != NULL ? *raft_local_state_
                         : *::raft_serverpb::RaftLocalState::internal_default_instance();
}
::raft_serverpb::RaftLocalState* RegionInfoResponse::mutable_raft_local_state() {
  
  if (raft_local_state_ == NULL) {
    raft_local_state_ = new ::raft_serverpb::RaftLocalState;
  }
  // @@protoc_insertion_point(field_mutable:debugpb.RegionInfoResponse.raft_local_state)
  return raft_local_state_;
}
::raft_serverpb::RaftLocalState* RegionInfoResponse::release_raft_local_state() {
  // @@protoc_insertion_point(field_release:debugpb.RegionInfoResponse.raft_local_state)
  
  ::raft_serverpb::RaftLocalState* temp = raft_local_state_;
  raft_local_state_ = NULL;
  return temp;
}
void RegionInfoResponse::set_allocated_raft_local_state(::raft_serverpb::RaftLocalState* raft_local_state) {
  delete raft_local_state_;
  raft_local_state_ = raft_local_state;
  if (raft_local_state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:debugpb.RegionInfoResponse.raft_local_state)
}

// optional .raft_serverpb.RaftApplyState raft_apply_state = 2;
bool RegionInfoResponse::has_raft_apply_state() const {
  return this != internal_default_instance() && raft_apply_state_ != NULL;
}
void RegionInfoResponse::clear_raft_apply_state() {
  if (GetArenaNoVirtual() == NULL && raft_apply_state_ != NULL) delete raft_apply_state_;
  raft_apply_state_ = NULL;
}
const ::raft_serverpb::RaftApplyState& RegionInfoResponse::raft_apply_state() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionInfoResponse.raft_apply_state)
  return raft_apply_state_ != NULL ? *raft_apply_state_
                         : *::raft_serverpb::RaftApplyState::internal_default_instance();
}
::raft_serverpb::RaftApplyState* RegionInfoResponse::mutable_raft_apply_state() {
  
  if (raft_apply_state_ == NULL) {
    raft_apply_state_ = new ::raft_serverpb::RaftApplyState;
  }
  // @@protoc_insertion_point(field_mutable:debugpb.RegionInfoResponse.raft_apply_state)
  return raft_apply_state_;
}
::raft_serverpb::RaftApplyState* RegionInfoResponse::release_raft_apply_state() {
  // @@protoc_insertion_point(field_release:debugpb.RegionInfoResponse.raft_apply_state)
  
  ::raft_serverpb::RaftApplyState* temp = raft_apply_state_;
  raft_apply_state_ = NULL;
  return temp;
}
void RegionInfoResponse::set_allocated_raft_apply_state(::raft_serverpb::RaftApplyState* raft_apply_state) {
  delete raft_apply_state_;
  raft_apply_state_ = raft_apply_state;
  if (raft_apply_state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:debugpb.RegionInfoResponse.raft_apply_state)
}

// optional .raft_serverpb.RegionLocalState region_local_state = 3;
bool RegionInfoResponse::has_region_local_state() const {
  return this != internal_default_instance() && region_local_state_ != NULL;
}
void RegionInfoResponse::clear_region_local_state() {
  if (GetArenaNoVirtual() == NULL && region_local_state_ != NULL) delete region_local_state_;
  region_local_state_ = NULL;
}
const ::raft_serverpb::RegionLocalState& RegionInfoResponse::region_local_state() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionInfoResponse.region_local_state)
  return region_local_state_ != NULL ? *region_local_state_
                         : *::raft_serverpb::RegionLocalState::internal_default_instance();
}
::raft_serverpb::RegionLocalState* RegionInfoResponse::mutable_region_local_state() {
  
  if (region_local_state_ == NULL) {
    region_local_state_ = new ::raft_serverpb::RegionLocalState;
  }
  // @@protoc_insertion_point(field_mutable:debugpb.RegionInfoResponse.region_local_state)
  return region_local_state_;
}
::raft_serverpb::RegionLocalState* RegionInfoResponse::release_region_local_state() {
  // @@protoc_insertion_point(field_release:debugpb.RegionInfoResponse.region_local_state)
  
  ::raft_serverpb::RegionLocalState* temp = region_local_state_;
  region_local_state_ = NULL;
  return temp;
}
void RegionInfoResponse::set_allocated_region_local_state(::raft_serverpb::RegionLocalState* region_local_state) {
  delete region_local_state_;
  region_local_state_ = region_local_state;
  if (region_local_state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:debugpb.RegionInfoResponse.region_local_state)
}

inline const RegionInfoResponse* RegionInfoResponse::internal_default_instance() {
  return &RegionInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSizeRequest::kRegionIdFieldNumber;
const int RegionSizeRequest::kCfsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSizeRequest::RegionSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionSizeRequest)
}

void RegionSizeRequest::InitAsDefaultInstance() {
}

RegionSizeRequest::RegionSizeRequest(const RegionSizeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionSizeRequest)
}

void RegionSizeRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RegionSizeRequest::~RegionSizeRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RegionSizeRequest)
  SharedDtor();
}

void RegionSizeRequest::SharedDtor() {
}

void RegionSizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSizeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionSizeRequest_descriptor_;
}

const RegionSizeRequest& RegionSizeRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionSizeRequest> RegionSizeRequest_default_instance_;

RegionSizeRequest* RegionSizeRequest::New(::google::protobuf::Arena* arena) const {
  RegionSizeRequest* n = new RegionSizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionSizeRequest)
  region_id_ = GOOGLE_ULONGLONG(0);
  cfs_.Clear();
}

bool RegionSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionSizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 region_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfs;
        break;
      }

      // repeated string cfs = 2;
      case 2: {
        if (tag == 18) {
         parse_cfs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cfs(this->cfs_size() - 1).data(),
            this->cfs(this->cfs_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.RegionSizeRequest.cfs"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cfs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionSizeRequest)
  return false;
#undef DO_
}

void RegionSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionSizeRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // repeated string cfs = 2;
  for (int i = 0; i < this->cfs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfs(i).data(), this->cfs(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeRequest.cfs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RegionSizeRequest)
}

::google::protobuf::uint8* RegionSizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionSizeRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // repeated string cfs = 2;
  for (int i = 0; i < this->cfs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfs(i).data(), this->cfs(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeRequest.cfs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfs(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionSizeRequest)
  return target;
}

size_t RegionSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionSizeRequest)
  size_t total_size = 0;

  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  // repeated string cfs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cfs_size());
  for (int i = 0; i < this->cfs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionSizeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionSizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionSizeRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegionSizeRequest::MergeFrom(const RegionSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionSizeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionSizeRequest::UnsafeMergeFrom(const RegionSizeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  cfs_.UnsafeMergeFrom(from.cfs_);
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSizeRequest::CopyFrom(const RegionSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionSizeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionSizeRequest::IsInitialized() const {

  return true;
}

void RegionSizeRequest::Swap(RegionSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSizeRequest::InternalSwap(RegionSizeRequest* other) {
  std::swap(region_id_, other->region_id_);
  cfs_.UnsafeArenaSwap(&other->cfs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSizeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionSizeRequest_descriptor_;
  metadata.reflection = RegionSizeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSizeRequest

// optional uint64 region_id = 1;
void RegionSizeRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RegionSizeRequest::region_id() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionSizeRequest.region_id)
  return region_id_;
}
void RegionSizeRequest::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:debugpb.RegionSizeRequest.region_id)
}

// repeated string cfs = 2;
int RegionSizeRequest::cfs_size() const {
  return cfs_.size();
}
void RegionSizeRequest::clear_cfs() {
  cfs_.Clear();
}
const ::std::string& RegionSizeRequest::cfs(int index) const {
  // @@protoc_insertion_point(field_get:debugpb.RegionSizeRequest.cfs)
  return cfs_.Get(index);
}
::std::string* RegionSizeRequest::mutable_cfs(int index) {
  // @@protoc_insertion_point(field_mutable:debugpb.RegionSizeRequest.cfs)
  return cfs_.Mutable(index);
}
void RegionSizeRequest::set_cfs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:debugpb.RegionSizeRequest.cfs)
  cfs_.Mutable(index)->assign(value);
}
void RegionSizeRequest::set_cfs(int index, const char* value) {
  cfs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:debugpb.RegionSizeRequest.cfs)
}
void RegionSizeRequest::set_cfs(int index, const char* value, size_t size) {
  cfs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:debugpb.RegionSizeRequest.cfs)
}
::std::string* RegionSizeRequest::add_cfs() {
  // @@protoc_insertion_point(field_add_mutable:debugpb.RegionSizeRequest.cfs)
  return cfs_.Add();
}
void RegionSizeRequest::add_cfs(const ::std::string& value) {
  cfs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:debugpb.RegionSizeRequest.cfs)
}
void RegionSizeRequest::add_cfs(const char* value) {
  cfs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:debugpb.RegionSizeRequest.cfs)
}
void RegionSizeRequest::add_cfs(const char* value, size_t size) {
  cfs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:debugpb.RegionSizeRequest.cfs)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RegionSizeRequest::cfs() const {
  // @@protoc_insertion_point(field_list:debugpb.RegionSizeRequest.cfs)
  return cfs_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RegionSizeRequest::mutable_cfs() {
  // @@protoc_insertion_point(field_mutable_list:debugpb.RegionSizeRequest.cfs)
  return &cfs_;
}

inline const RegionSizeRequest* RegionSizeRequest::internal_default_instance() {
  return &RegionSizeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSizeResponse_Entry::kCfFieldNumber;
const int RegionSizeResponse_Entry::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSizeResponse_Entry::RegionSizeResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionSizeResponse.Entry)
}

void RegionSizeResponse_Entry::InitAsDefaultInstance() {
}

RegionSizeResponse_Entry::RegionSizeResponse_Entry(const RegionSizeResponse_Entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionSizeResponse.Entry)
}

void RegionSizeResponse_Entry::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RegionSizeResponse_Entry::~RegionSizeResponse_Entry() {
  // @@protoc_insertion_point(destructor:debugpb.RegionSizeResponse.Entry)
  SharedDtor();
}

void RegionSizeResponse_Entry::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegionSizeResponse_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSizeResponse_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionSizeResponse_Entry_descriptor_;
}

const RegionSizeResponse_Entry& RegionSizeResponse_Entry::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionSizeResponse_Entry> RegionSizeResponse_Entry_default_instance_;

RegionSizeResponse_Entry* RegionSizeResponse_Entry::New(::google::protobuf::Arena* arena) const {
  RegionSizeResponse_Entry* n = new RegionSizeResponse_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSizeResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionSizeResponse.Entry)
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
}

bool RegionSizeResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionSizeResponse.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cf = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), this->cf().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.RegionSizeResponse.Entry.cf"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint64 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionSizeResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionSizeResponse.Entry)
  return false;
#undef DO_
}

void RegionSizeResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionSizeResponse.Entry)
  // optional string cf = 1;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), this->cf().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeResponse.Entry.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cf(), output);
  }

  // optional uint64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RegionSizeResponse.Entry)
}

::google::protobuf::uint8* RegionSizeResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionSizeResponse.Entry)
  // optional string cf = 1;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), this->cf().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeResponse.Entry.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cf(), target);
  }

  // optional uint64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionSizeResponse.Entry)
  return target;
}

size_t RegionSizeResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionSizeResponse.Entry)
  size_t total_size = 0;

  // optional string cf = 1;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // optional uint64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSizeResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionSizeResponse.Entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionSizeResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSizeResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionSizeResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionSizeResponse.Entry)
    UnsafeMergeFrom(*source);
  }
}

void RegionSizeResponse_Entry::MergeFrom(const RegionSizeResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionSizeResponse.Entry)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionSizeResponse_Entry::UnsafeMergeFrom(const RegionSizeResponse_Entry& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void RegionSizeResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionSizeResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSizeResponse_Entry::CopyFrom(const RegionSizeResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionSizeResponse.Entry)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionSizeResponse_Entry::IsInitialized() const {

  return true;
}

void RegionSizeResponse_Entry::Swap(RegionSizeResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSizeResponse_Entry::InternalSwap(RegionSizeResponse_Entry* other) {
  cf_.Swap(&other->cf_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSizeResponse_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionSizeResponse_Entry_descriptor_;
  metadata.reflection = RegionSizeResponse_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSizeResponse::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSizeResponse::RegionSizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionSizeResponse)
}

void RegionSizeResponse::InitAsDefaultInstance() {
}

RegionSizeResponse::RegionSizeResponse(const RegionSizeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionSizeResponse)
}

void RegionSizeResponse::SharedCtor() {
  _cached_size_ = 0;
}

RegionSizeResponse::~RegionSizeResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RegionSizeResponse)
  SharedDtor();
}

void RegionSizeResponse::SharedDtor() {
}

void RegionSizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSizeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionSizeResponse_descriptor_;
}

const RegionSizeResponse& RegionSizeResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionSizeResponse> RegionSizeResponse_default_instance_;

RegionSizeResponse* RegionSizeResponse::New(::google::protobuf::Arena* arena) const {
  RegionSizeResponse* n = new RegionSizeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionSizeResponse)
  entries_.Clear();
}

bool RegionSizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionSizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionSizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionSizeResponse)
  return false;
#undef DO_
}

void RegionSizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionSizeResponse)
  // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RegionSizeResponse)
}

::google::protobuf::uint8* RegionSizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionSizeResponse)
  // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionSizeResponse)
  return target;
}

size_t RegionSizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionSizeResponse)
  size_t total_size = 0;

  // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionSizeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionSizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionSizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionSizeResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegionSizeResponse::MergeFrom(const RegionSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionSizeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionSizeResponse::UnsafeMergeFrom(const RegionSizeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  entries_.MergeFrom(from.entries_);
}

void RegionSizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSizeResponse::CopyFrom(const RegionSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionSizeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionSizeResponse::IsInitialized() const {

  return true;
}

void RegionSizeResponse::Swap(RegionSizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSizeResponse::InternalSwap(RegionSizeResponse* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSizeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionSizeResponse_descriptor_;
  metadata.reflection = RegionSizeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSizeResponse_Entry

// optional string cf = 1;
void RegionSizeResponse_Entry::clear_cf() {
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionSizeResponse_Entry::cf() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionSizeResponse.Entry.cf)
  return cf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionSizeResponse_Entry::set_cf(const ::std::string& value) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.RegionSizeResponse.Entry.cf)
}
void RegionSizeResponse_Entry::set_cf(const char* value) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.RegionSizeResponse.Entry.cf)
}
void RegionSizeResponse_Entry::set_cf(const char* value, size_t size) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.RegionSizeResponse.Entry.cf)
}
::std::string* RegionSizeResponse_Entry::mutable_cf() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.RegionSizeResponse.Entry.cf)
  return cf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionSizeResponse_Entry::release_cf() {
  // @@protoc_insertion_point(field_release:debugpb.RegionSizeResponse.Entry.cf)
  
  return cf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionSizeResponse_Entry::set_allocated_cf(::std::string* cf) {
  if (cf != NULL) {
    
  } else {
    
  }
  cf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cf);
  // @@protoc_insertion_point(field_set_allocated:debugpb.RegionSizeResponse.Entry.cf)
}

// optional uint64 size = 2;
void RegionSizeResponse_Entry::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RegionSizeResponse_Entry::size() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionSizeResponse.Entry.size)
  return size_;
}
void RegionSizeResponse_Entry::set_size(::google::protobuf::uint64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:debugpb.RegionSizeResponse.Entry.size)
}

inline const RegionSizeResponse_Entry* RegionSizeResponse_Entry::internal_default_instance() {
  return &RegionSizeResponse_Entry_default_instance_.get();
}
// -------------------------------------------------------------------

// RegionSizeResponse

// repeated .debugpb.RegionSizeResponse.Entry entries = 1;
int RegionSizeResponse::entries_size() const {
  return entries_.size();
}
void RegionSizeResponse::clear_entries() {
  entries_.Clear();
}
const ::debugpb::RegionSizeResponse_Entry& RegionSizeResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:debugpb.RegionSizeResponse.entries)
  return entries_.Get(index);
}
::debugpb::RegionSizeResponse_Entry* RegionSizeResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:debugpb.RegionSizeResponse.entries)
  return entries_.Mutable(index);
}
::debugpb::RegionSizeResponse_Entry* RegionSizeResponse::add_entries() {
  // @@protoc_insertion_point(field_add:debugpb.RegionSizeResponse.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::debugpb::RegionSizeResponse_Entry >*
RegionSizeResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:debugpb.RegionSizeResponse.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::debugpb::RegionSizeResponse_Entry >&
RegionSizeResponse::entries() const {
  // @@protoc_insertion_point(field_list:debugpb.RegionSizeResponse.entries)
  return entries_;
}

inline const RegionSizeResponse* RegionSizeResponse::internal_default_instance() {
  return &RegionSizeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanMvccRequest::kFromKeyFieldNumber;
const int ScanMvccRequest::kToKeyFieldNumber;
const int ScanMvccRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanMvccRequest::ScanMvccRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ScanMvccRequest)
}

void ScanMvccRequest::InitAsDefaultInstance() {
}

ScanMvccRequest::ScanMvccRequest(const ScanMvccRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ScanMvccRequest)
}

void ScanMvccRequest::SharedCtor() {
  from_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ScanMvccRequest::~ScanMvccRequest() {
  // @@protoc_insertion_point(destructor:debugpb.ScanMvccRequest)
  SharedDtor();
}

void ScanMvccRequest::SharedDtor() {
  from_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScanMvccRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScanMvccRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScanMvccRequest_descriptor_;
}

const ScanMvccRequest& ScanMvccRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ScanMvccRequest> ScanMvccRequest_default_instance_;

ScanMvccRequest* ScanMvccRequest::New(::google::protobuf::Arena* arena) const {
  ScanMvccRequest* n = new ScanMvccRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScanMvccRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ScanMvccRequest)
  from_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_ = GOOGLE_ULONGLONG(0);
}

bool ScanMvccRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ScanMvccRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes from_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_to_key;
        break;
      }

      // optional bytes to_key = 2;
      case 2: {
        if (tag == 18) {
         parse_to_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_limit;
        break;
      }

      // optional uint64 limit = 3;
      case 3: {
        if (tag == 24) {
         parse_limit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ScanMvccRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ScanMvccRequest)
  return false;
#undef DO_
}

void ScanMvccRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ScanMvccRequest)
  // optional bytes from_key = 1;
  if (this->from_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->from_key(), output);
  }

  // optional bytes to_key = 2;
  if (this->to_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to_key(), output);
  }

  // optional uint64 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.ScanMvccRequest)
}

::google::protobuf::uint8* ScanMvccRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ScanMvccRequest)
  // optional bytes from_key = 1;
  if (this->from_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->from_key(), target);
  }

  // optional bytes to_key = 2;
  if (this->to_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to_key(), target);
  }

  // optional uint64 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ScanMvccRequest)
  return target;
}

size_t ScanMvccRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ScanMvccRequest)
  size_t total_size = 0;

  // optional bytes from_key = 1;
  if (this->from_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->from_key());
  }

  // optional bytes to_key = 2;
  if (this->to_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_key());
  }

  // optional uint64 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScanMvccRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ScanMvccRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ScanMvccRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanMvccRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ScanMvccRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ScanMvccRequest)
    UnsafeMergeFrom(*source);
  }
}

void ScanMvccRequest::MergeFrom(const ScanMvccRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ScanMvccRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ScanMvccRequest::UnsafeMergeFrom(const ScanMvccRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.from_key().size() > 0) {

    from_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_key_);
  }
  if (from.to_key().size() > 0) {

    to_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_key_);
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void ScanMvccRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ScanMvccRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanMvccRequest::CopyFrom(const ScanMvccRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ScanMvccRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ScanMvccRequest::IsInitialized() const {

  return true;
}

void ScanMvccRequest::Swap(ScanMvccRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanMvccRequest::InternalSwap(ScanMvccRequest* other) {
  from_key_.Swap(&other->from_key_);
  to_key_.Swap(&other->to_key_);
  std::swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScanMvccRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScanMvccRequest_descriptor_;
  metadata.reflection = ScanMvccRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScanMvccRequest

// optional bytes from_key = 1;
void ScanMvccRequest::clear_from_key() {
  from_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ScanMvccRequest::from_key() const {
  // @@protoc_insertion_point(field_get:debugpb.ScanMvccRequest.from_key)
  return from_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanMvccRequest::set_from_key(const ::std::string& value) {
  
  from_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ScanMvccRequest.from_key)
}
void ScanMvccRequest::set_from_key(const char* value) {
  
  from_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ScanMvccRequest.from_key)
}
void ScanMvccRequest::set_from_key(const void* value, size_t size) {
  
  from_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ScanMvccRequest.from_key)
}
::std::string* ScanMvccRequest::mutable_from_key() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ScanMvccRequest.from_key)
  return from_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScanMvccRequest::release_from_key() {
  // @@protoc_insertion_point(field_release:debugpb.ScanMvccRequest.from_key)
  
  return from_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanMvccRequest::set_allocated_from_key(::std::string* from_key) {
  if (from_key != NULL) {
    
  } else {
    
  }
  from_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_key);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ScanMvccRequest.from_key)
}

// optional bytes to_key = 2;
void ScanMvccRequest::clear_to_key() {
  to_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ScanMvccRequest::to_key() const {
  // @@protoc_insertion_point(field_get:debugpb.ScanMvccRequest.to_key)
  return to_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanMvccRequest::set_to_key(const ::std::string& value) {
  
  to_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ScanMvccRequest.to_key)
}
void ScanMvccRequest::set_to_key(const char* value) {
  
  to_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ScanMvccRequest.to_key)
}
void ScanMvccRequest::set_to_key(const void* value, size_t size) {
  
  to_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ScanMvccRequest.to_key)
}
::std::string* ScanMvccRequest::mutable_to_key() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ScanMvccRequest.to_key)
  return to_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScanMvccRequest::release_to_key() {
  // @@protoc_insertion_point(field_release:debugpb.ScanMvccRequest.to_key)
  
  return to_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanMvccRequest::set_allocated_to_key(::std::string* to_key) {
  if (to_key != NULL) {
    
  } else {
    
  }
  to_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_key);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ScanMvccRequest.to_key)
}

// optional uint64 limit = 3;
void ScanMvccRequest::clear_limit() {
  limit_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ScanMvccRequest::limit() const {
  // @@protoc_insertion_point(field_get:debugpb.ScanMvccRequest.limit)
  return limit_;
}
void ScanMvccRequest::set_limit(::google::protobuf::uint64 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:debugpb.ScanMvccRequest.limit)
}

inline const ScanMvccRequest* ScanMvccRequest::internal_default_instance() {
  return &ScanMvccRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanMvccResponse::kKeyFieldNumber;
const int ScanMvccResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanMvccResponse::ScanMvccResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ScanMvccResponse)
}

void ScanMvccResponse::InitAsDefaultInstance() {
  info_ = const_cast< ::kvrpcpb::MvccInfo*>(
      ::kvrpcpb::MvccInfo::internal_default_instance());
}

ScanMvccResponse::ScanMvccResponse(const ScanMvccResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ScanMvccResponse)
}

void ScanMvccResponse::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
  _cached_size_ = 0;
}

ScanMvccResponse::~ScanMvccResponse() {
  // @@protoc_insertion_point(destructor:debugpb.ScanMvccResponse)
  SharedDtor();
}

void ScanMvccResponse::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ScanMvccResponse_default_instance_.get()) {
    delete info_;
  }
}

void ScanMvccResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScanMvccResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScanMvccResponse_descriptor_;
}

const ScanMvccResponse& ScanMvccResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ScanMvccResponse> ScanMvccResponse_default_instance_;

ScanMvccResponse* ScanMvccResponse::New(::google::protobuf::Arena* arena) const {
  ScanMvccResponse* n = new ScanMvccResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScanMvccResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ScanMvccResponse)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool ScanMvccResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ScanMvccResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // optional .kvrpcpb.MvccInfo info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ScanMvccResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ScanMvccResponse)
  return false;
#undef DO_
}

void ScanMvccResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ScanMvccResponse)
  // optional bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional .kvrpcpb.MvccInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.ScanMvccResponse)
}

::google::protobuf::uint8* ScanMvccResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ScanMvccResponse)
  // optional bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional .kvrpcpb.MvccInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ScanMvccResponse)
  return target;
}

size_t ScanMvccResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ScanMvccResponse)
  size_t total_size = 0;

  // optional bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // optional .kvrpcpb.MvccInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScanMvccResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ScanMvccResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ScanMvccResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanMvccResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ScanMvccResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ScanMvccResponse)
    UnsafeMergeFrom(*source);
  }
}

void ScanMvccResponse::MergeFrom(const ScanMvccResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ScanMvccResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ScanMvccResponse::UnsafeMergeFrom(const ScanMvccResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_info()) {
    mutable_info()->::kvrpcpb::MvccInfo::MergeFrom(from.info());
  }
}

void ScanMvccResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ScanMvccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanMvccResponse::CopyFrom(const ScanMvccResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ScanMvccResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ScanMvccResponse::IsInitialized() const {

  return true;
}

void ScanMvccResponse::Swap(ScanMvccResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanMvccResponse::InternalSwap(ScanMvccResponse* other) {
  key_.Swap(&other->key_);
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScanMvccResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScanMvccResponse_descriptor_;
  metadata.reflection = ScanMvccResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScanMvccResponse

// optional bytes key = 1;
void ScanMvccResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ScanMvccResponse::key() const {
  // @@protoc_insertion_point(field_get:debugpb.ScanMvccResponse.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanMvccResponse::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ScanMvccResponse.key)
}
void ScanMvccResponse::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ScanMvccResponse.key)
}
void ScanMvccResponse::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ScanMvccResponse.key)
}
::std::string* ScanMvccResponse::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ScanMvccResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScanMvccResponse::release_key() {
  // @@protoc_insertion_point(field_release:debugpb.ScanMvccResponse.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanMvccResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ScanMvccResponse.key)
}

// optional .kvrpcpb.MvccInfo info = 2;
bool ScanMvccResponse::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void ScanMvccResponse::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::kvrpcpb::MvccInfo& ScanMvccResponse::info() const {
  // @@protoc_insertion_point(field_get:debugpb.ScanMvccResponse.info)
  return info_ != NULL ? *info_
                         : *::kvrpcpb::MvccInfo::internal_default_instance();
}
::kvrpcpb::MvccInfo* ScanMvccResponse::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::kvrpcpb::MvccInfo;
  }
  // @@protoc_insertion_point(field_mutable:debugpb.ScanMvccResponse.info)
  return info_;
}
::kvrpcpb::MvccInfo* ScanMvccResponse::release_info() {
  // @@protoc_insertion_point(field_release:debugpb.ScanMvccResponse.info)
  
  ::kvrpcpb::MvccInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void ScanMvccResponse::set_allocated_info(::kvrpcpb::MvccInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:debugpb.ScanMvccResponse.info)
}

inline const ScanMvccResponse* ScanMvccResponse::internal_default_instance() {
  return &ScanMvccResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactRequest::kDbFieldNumber;
const int CompactRequest::kCfFieldNumber;
const int CompactRequest::kFromKeyFieldNumber;
const int CompactRequest::kToKeyFieldNumber;
const int CompactRequest::kThreadsFieldNumber;
const int CompactRequest::kBottommostLevelCompactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactRequest::CompactRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.CompactRequest)
}

void CompactRequest::InitAsDefaultInstance() {
}

CompactRequest::CompactRequest(const CompactRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.CompactRequest)
}

void CompactRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&db_, 0, reinterpret_cast<char*>(&bottommost_level_compaction_) -
    reinterpret_cast<char*>(&db_) + sizeof(bottommost_level_compaction_));
  _cached_size_ = 0;
}

CompactRequest::~CompactRequest() {
  // @@protoc_insertion_point(destructor:debugpb.CompactRequest)
  SharedDtor();
}

void CompactRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompactRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactRequest_descriptor_;
}

const CompactRequest& CompactRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CompactRequest> CompactRequest_default_instance_;

CompactRequest* CompactRequest::New(::google::protobuf::Arena* arena) const {
  CompactRequest* n = new CompactRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.CompactRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CompactRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CompactRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(db_, bottommost_level_compaction_);
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CompactRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.CompactRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .debugpb.DB db = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_db(static_cast< ::debugpb::DB >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cf;
        break;
      }

      // optional string cf = 2;
      case 2: {
        if (tag == 18) {
         parse_cf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), this->cf().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.CompactRequest.cf"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_from_key;
        break;
      }

      // optional bytes from_key = 3;
      case 3: {
        if (tag == 26) {
         parse_from_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_to_key;
        break;
      }

      // optional bytes to_key = 4;
      case 4: {
        if (tag == 34) {
         parse_to_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_threads;
        break;
      }

      // optional uint32 threads = 5;
      case 5: {
        if (tag == 40) {
         parse_threads:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_bottommost_level_compaction;
        break;
      }

      // optional .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
      case 6: {
        if (tag == 48) {
         parse_bottommost_level_compaction:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bottommost_level_compaction(static_cast< ::debugpb::BottommostLevelCompaction >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.CompactRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.CompactRequest)
  return false;
#undef DO_
}

void CompactRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.CompactRequest)
  // optional .debugpb.DB db = 1;
  if (this->db() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->db(), output);
  }

  // optional string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), this->cf().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.CompactRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cf(), output);
  }

  // optional bytes from_key = 3;
  if (this->from_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->from_key(), output);
  }

  // optional bytes to_key = 4;
  if (this->to_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->to_key(), output);
  }

  // optional uint32 threads = 5;
  if (this->threads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->threads(), output);
  }

  // optional .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
  if (this->bottommost_level_compaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->bottommost_level_compaction(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.CompactRequest)
}

::google::protobuf::uint8* CompactRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.CompactRequest)
  // optional .debugpb.DB db = 1;
  if (this->db() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->db(), target);
  }

  // optional string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), this->cf().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.CompactRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cf(), target);
  }

  // optional bytes from_key = 3;
  if (this->from_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->from_key(), target);
  }

  // optional bytes to_key = 4;
  if (this->to_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->to_key(), target);
  }

  // optional uint32 threads = 5;
  if (this->threads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->threads(), target);
  }

  // optional .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
  if (this->bottommost_level_compaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->bottommost_level_compaction(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.CompactRequest)
  return target;
}

size_t CompactRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.CompactRequest)
  size_t total_size = 0;

  // optional .debugpb.DB db = 1;
  if (this->db() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->db());
  }

  // optional string cf = 2;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // optional bytes from_key = 3;
  if (this->from_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->from_key());
  }

  // optional bytes to_key = 4;
  if (this->to_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_key());
  }

  // optional uint32 threads = 5;
  if (this->threads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->threads());
  }

  // optional .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
  if (this->bottommost_level_compaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bottommost_level_compaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.CompactRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CompactRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.CompactRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.CompactRequest)
    UnsafeMergeFrom(*source);
  }
}

void CompactRequest::MergeFrom(const CompactRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.CompactRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CompactRequest::UnsafeMergeFrom(const CompactRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.db() != 0) {
    set_db(from.db());
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.from_key().size() > 0) {

    from_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_key_);
  }
  if (from.to_key().size() > 0) {

    to_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_key_);
  }
  if (from.threads() != 0) {
    set_threads(from.threads());
  }
  if (from.bottommost_level_compaction() != 0) {
    set_bottommost_level_compaction(from.bottommost_level_compaction());
  }
}

void CompactRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.CompactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactRequest::CopyFrom(const CompactRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.CompactRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CompactRequest::IsInitialized() const {

  return true;
}

void CompactRequest::Swap(CompactRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactRequest::InternalSwap(CompactRequest* other) {
  std::swap(db_, other->db_);
  cf_.Swap(&other->cf_);
  from_key_.Swap(&other->from_key_);
  to_key_.Swap(&other->to_key_);
  std::swap(threads_, other->threads_);
  std::swap(bottommost_level_compaction_, other->bottommost_level_compaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactRequest_descriptor_;
  metadata.reflection = CompactRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactRequest

// optional .debugpb.DB db = 1;
void CompactRequest::clear_db() {
  db_ = 0;
}
::debugpb::DB CompactRequest::db() const {
  // @@protoc_insertion_point(field_get:debugpb.CompactRequest.db)
  return static_cast< ::debugpb::DB >(db_);
}
void CompactRequest::set_db(::debugpb::DB value) {
  
  db_ = value;
  // @@protoc_insertion_point(field_set:debugpb.CompactRequest.db)
}

// optional string cf = 2;
void CompactRequest::clear_cf() {
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CompactRequest::cf() const {
  // @@protoc_insertion_point(field_get:debugpb.CompactRequest.cf)
  return cf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactRequest::set_cf(const ::std::string& value) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.CompactRequest.cf)
}
void CompactRequest::set_cf(const char* value) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.CompactRequest.cf)
}
void CompactRequest::set_cf(const char* value, size_t size) {
  
  cf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.CompactRequest.cf)
}
::std::string* CompactRequest::mutable_cf() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.CompactRequest.cf)
  return cf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CompactRequest::release_cf() {
  // @@protoc_insertion_point(field_release:debugpb.CompactRequest.cf)
  
  return cf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactRequest::set_allocated_cf(::std::string* cf) {
  if (cf != NULL) {
    
  } else {
    
  }
  cf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cf);
  // @@protoc_insertion_point(field_set_allocated:debugpb.CompactRequest.cf)
}

// optional bytes from_key = 3;
void CompactRequest::clear_from_key() {
  from_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CompactRequest::from_key() const {
  // @@protoc_insertion_point(field_get:debugpb.CompactRequest.from_key)
  return from_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactRequest::set_from_key(const ::std::string& value) {
  
  from_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.CompactRequest.from_key)
}
void CompactRequest::set_from_key(const char* value) {
  
  from_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.CompactRequest.from_key)
}
void CompactRequest::set_from_key(const void* value, size_t size) {
  
  from_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.CompactRequest.from_key)
}
::std::string* CompactRequest::mutable_from_key() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.CompactRequest.from_key)
  return from_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CompactRequest::release_from_key() {
  // @@protoc_insertion_point(field_release:debugpb.CompactRequest.from_key)
  
  return from_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactRequest::set_allocated_from_key(::std::string* from_key) {
  if (from_key != NULL) {
    
  } else {
    
  }
  from_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_key);
  // @@protoc_insertion_point(field_set_allocated:debugpb.CompactRequest.from_key)
}

// optional bytes to_key = 4;
void CompactRequest::clear_to_key() {
  to_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CompactRequest::to_key() const {
  // @@protoc_insertion_point(field_get:debugpb.CompactRequest.to_key)
  return to_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactRequest::set_to_key(const ::std::string& value) {
  
  to_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.CompactRequest.to_key)
}
void CompactRequest::set_to_key(const char* value) {
  
  to_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.CompactRequest.to_key)
}
void CompactRequest::set_to_key(const void* value, size_t size) {
  
  to_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.CompactRequest.to_key)
}
::std::string* CompactRequest::mutable_to_key() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.CompactRequest.to_key)
  return to_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CompactRequest::release_to_key() {
  // @@protoc_insertion_point(field_release:debugpb.CompactRequest.to_key)
  
  return to_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactRequest::set_allocated_to_key(::std::string* to_key) {
  if (to_key != NULL) {
    
  } else {
    
  }
  to_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_key);
  // @@protoc_insertion_point(field_set_allocated:debugpb.CompactRequest.to_key)
}

// optional uint32 threads = 5;
void CompactRequest::clear_threads() {
  threads_ = 0u;
}
::google::protobuf::uint32 CompactRequest::threads() const {
  // @@protoc_insertion_point(field_get:debugpb.CompactRequest.threads)
  return threads_;
}
void CompactRequest::set_threads(::google::protobuf::uint32 value) {
  
  threads_ = value;
  // @@protoc_insertion_point(field_set:debugpb.CompactRequest.threads)
}

// optional .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
void CompactRequest::clear_bottommost_level_compaction() {
  bottommost_level_compaction_ = 0;
}
::debugpb::BottommostLevelCompaction CompactRequest::bottommost_level_compaction() const {
  // @@protoc_insertion_point(field_get:debugpb.CompactRequest.bottommost_level_compaction)
  return static_cast< ::debugpb::BottommostLevelCompaction >(bottommost_level_compaction_);
}
void CompactRequest::set_bottommost_level_compaction(::debugpb::BottommostLevelCompaction value) {
  
  bottommost_level_compaction_ = value;
  // @@protoc_insertion_point(field_set:debugpb.CompactRequest.bottommost_level_compaction)
}

inline const CompactRequest* CompactRequest::internal_default_instance() {
  return &CompactRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactResponse::CompactResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.CompactResponse)
}

void CompactResponse::InitAsDefaultInstance() {
}

CompactResponse::CompactResponse(const CompactResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.CompactResponse)
}

void CompactResponse::SharedCtor() {
  _cached_size_ = 0;
}

CompactResponse::~CompactResponse() {
  // @@protoc_insertion_point(destructor:debugpb.CompactResponse)
  SharedDtor();
}

void CompactResponse::SharedDtor() {
}

void CompactResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactResponse_descriptor_;
}

const CompactResponse& CompactResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CompactResponse> CompactResponse_default_instance_;

CompactResponse* CompactResponse::New(::google::protobuf::Arena* arena) const {
  CompactResponse* n = new CompactResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.CompactResponse)
}

bool CompactResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.CompactResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.CompactResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.CompactResponse)
  return false;
#undef DO_
}

void CompactResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.CompactResponse)
  // @@protoc_insertion_point(serialize_end:debugpb.CompactResponse)
}

::google::protobuf::uint8* CompactResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.CompactResponse)
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.CompactResponse)
  return target;
}

size_t CompactResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.CompactResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.CompactResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CompactResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.CompactResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.CompactResponse)
    UnsafeMergeFrom(*source);
  }
}

void CompactResponse::MergeFrom(const CompactResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.CompactResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CompactResponse::UnsafeMergeFrom(const CompactResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void CompactResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.CompactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactResponse::CopyFrom(const CompactResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.CompactResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CompactResponse::IsInitialized() const {

  return true;
}

void CompactResponse::Swap(CompactResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactResponse::InternalSwap(CompactResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactResponse_descriptor_;
  metadata.reflection = CompactResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactResponse

inline const CompactResponse* CompactResponse::internal_default_instance() {
  return &CompactResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InjectFailPointRequest::kNameFieldNumber;
const int InjectFailPointRequest::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InjectFailPointRequest::InjectFailPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.InjectFailPointRequest)
}

void InjectFailPointRequest::InitAsDefaultInstance() {
}

InjectFailPointRequest::InjectFailPointRequest(const InjectFailPointRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.InjectFailPointRequest)
}

void InjectFailPointRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InjectFailPointRequest::~InjectFailPointRequest() {
  // @@protoc_insertion_point(destructor:debugpb.InjectFailPointRequest)
  SharedDtor();
}

void InjectFailPointRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InjectFailPointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InjectFailPointRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InjectFailPointRequest_descriptor_;
}

const InjectFailPointRequest& InjectFailPointRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InjectFailPointRequest> InjectFailPointRequest_default_instance_;

InjectFailPointRequest* InjectFailPointRequest::New(::google::protobuf::Arena* arena) const {
  InjectFailPointRequest* n = new InjectFailPointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InjectFailPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.InjectFailPointRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InjectFailPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.InjectFailPointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.InjectFailPointRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_actions;
        break;
      }

      // optional string actions = 2;
      case 2: {
        if (tag == 18) {
         parse_actions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actions().data(), this->actions().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.InjectFailPointRequest.actions"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.InjectFailPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.InjectFailPointRequest)
  return false;
#undef DO_
}

void InjectFailPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.InjectFailPointRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), this->actions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.actions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actions(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.InjectFailPointRequest)
}

::google::protobuf::uint8* InjectFailPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.InjectFailPointRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), this->actions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.actions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actions(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.InjectFailPointRequest)
  return target;
}

size_t InjectFailPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.InjectFailPointRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string actions = 2;
  if (this->actions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InjectFailPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.InjectFailPointRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InjectFailPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InjectFailPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.InjectFailPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.InjectFailPointRequest)
    UnsafeMergeFrom(*source);
  }
}

void InjectFailPointRequest::MergeFrom(const InjectFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.InjectFailPointRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InjectFailPointRequest::UnsafeMergeFrom(const InjectFailPointRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.actions().size() > 0) {

    actions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actions_);
  }
}

void InjectFailPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.InjectFailPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InjectFailPointRequest::CopyFrom(const InjectFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.InjectFailPointRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InjectFailPointRequest::IsInitialized() const {

  return true;
}

void InjectFailPointRequest::Swap(InjectFailPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InjectFailPointRequest::InternalSwap(InjectFailPointRequest* other) {
  name_.Swap(&other->name_);
  actions_.Swap(&other->actions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InjectFailPointRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InjectFailPointRequest_descriptor_;
  metadata.reflection = InjectFailPointRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InjectFailPointRequest

// optional string name = 1;
void InjectFailPointRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InjectFailPointRequest::name() const {
  // @@protoc_insertion_point(field_get:debugpb.InjectFailPointRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InjectFailPointRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.InjectFailPointRequest.name)
}
void InjectFailPointRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.InjectFailPointRequest.name)
}
void InjectFailPointRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.InjectFailPointRequest.name)
}
::std::string* InjectFailPointRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.InjectFailPointRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InjectFailPointRequest::release_name() {
  // @@protoc_insertion_point(field_release:debugpb.InjectFailPointRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InjectFailPointRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:debugpb.InjectFailPointRequest.name)
}

// optional string actions = 2;
void InjectFailPointRequest::clear_actions() {
  actions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InjectFailPointRequest::actions() const {
  // @@protoc_insertion_point(field_get:debugpb.InjectFailPointRequest.actions)
  return actions_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InjectFailPointRequest::set_actions(const ::std::string& value) {
  
  actions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.InjectFailPointRequest.actions)
}
void InjectFailPointRequest::set_actions(const char* value) {
  
  actions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.InjectFailPointRequest.actions)
}
void InjectFailPointRequest::set_actions(const char* value, size_t size) {
  
  actions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.InjectFailPointRequest.actions)
}
::std::string* InjectFailPointRequest::mutable_actions() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.InjectFailPointRequest.actions)
  return actions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InjectFailPointRequest::release_actions() {
  // @@protoc_insertion_point(field_release:debugpb.InjectFailPointRequest.actions)
  
  return actions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InjectFailPointRequest::set_allocated_actions(::std::string* actions) {
  if (actions != NULL) {
    
  } else {
    
  }
  actions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actions);
  // @@protoc_insertion_point(field_set_allocated:debugpb.InjectFailPointRequest.actions)
}

inline const InjectFailPointRequest* InjectFailPointRequest::internal_default_instance() {
  return &InjectFailPointRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InjectFailPointResponse::InjectFailPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.InjectFailPointResponse)
}

void InjectFailPointResponse::InitAsDefaultInstance() {
}

InjectFailPointResponse::InjectFailPointResponse(const InjectFailPointResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.InjectFailPointResponse)
}

void InjectFailPointResponse::SharedCtor() {
  _cached_size_ = 0;
}

InjectFailPointResponse::~InjectFailPointResponse() {
  // @@protoc_insertion_point(destructor:debugpb.InjectFailPointResponse)
  SharedDtor();
}

void InjectFailPointResponse::SharedDtor() {
}

void InjectFailPointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InjectFailPointResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InjectFailPointResponse_descriptor_;
}

const InjectFailPointResponse& InjectFailPointResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InjectFailPointResponse> InjectFailPointResponse_default_instance_;

InjectFailPointResponse* InjectFailPointResponse::New(::google::protobuf::Arena* arena) const {
  InjectFailPointResponse* n = new InjectFailPointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InjectFailPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.InjectFailPointResponse)
}

bool InjectFailPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.InjectFailPointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.InjectFailPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.InjectFailPointResponse)
  return false;
#undef DO_
}

void InjectFailPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.InjectFailPointResponse)
  // @@protoc_insertion_point(serialize_end:debugpb.InjectFailPointResponse)
}

::google::protobuf::uint8* InjectFailPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.InjectFailPointResponse)
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.InjectFailPointResponse)
  return target;
}

size_t InjectFailPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.InjectFailPointResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InjectFailPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.InjectFailPointResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InjectFailPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InjectFailPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.InjectFailPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.InjectFailPointResponse)
    UnsafeMergeFrom(*source);
  }
}

void InjectFailPointResponse::MergeFrom(const InjectFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.InjectFailPointResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InjectFailPointResponse::UnsafeMergeFrom(const InjectFailPointResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void InjectFailPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.InjectFailPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InjectFailPointResponse::CopyFrom(const InjectFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.InjectFailPointResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InjectFailPointResponse::IsInitialized() const {

  return true;
}

void InjectFailPointResponse::Swap(InjectFailPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InjectFailPointResponse::InternalSwap(InjectFailPointResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InjectFailPointResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InjectFailPointResponse_descriptor_;
  metadata.reflection = InjectFailPointResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InjectFailPointResponse

inline const InjectFailPointResponse* InjectFailPointResponse::internal_default_instance() {
  return &InjectFailPointResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoverFailPointRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverFailPointRequest::RecoverFailPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RecoverFailPointRequest)
}

void RecoverFailPointRequest::InitAsDefaultInstance() {
}

RecoverFailPointRequest::RecoverFailPointRequest(const RecoverFailPointRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RecoverFailPointRequest)
}

void RecoverFailPointRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RecoverFailPointRequest::~RecoverFailPointRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RecoverFailPointRequest)
  SharedDtor();
}

void RecoverFailPointRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecoverFailPointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverFailPointRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecoverFailPointRequest_descriptor_;
}

const RecoverFailPointRequest& RecoverFailPointRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RecoverFailPointRequest> RecoverFailPointRequest_default_instance_;

RecoverFailPointRequest* RecoverFailPointRequest::New(::google::protobuf::Arena* arena) const {
  RecoverFailPointRequest* n = new RecoverFailPointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecoverFailPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RecoverFailPointRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RecoverFailPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RecoverFailPointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.RecoverFailPointRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RecoverFailPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RecoverFailPointRequest)
  return false;
#undef DO_
}

void RecoverFailPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RecoverFailPointRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RecoverFailPointRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RecoverFailPointRequest)
}

::google::protobuf::uint8* RecoverFailPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RecoverFailPointRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RecoverFailPointRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RecoverFailPointRequest)
  return target;
}

size_t RecoverFailPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RecoverFailPointRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverFailPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RecoverFailPointRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RecoverFailPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverFailPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RecoverFailPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RecoverFailPointRequest)
    UnsafeMergeFrom(*source);
  }
}

void RecoverFailPointRequest::MergeFrom(const RecoverFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RecoverFailPointRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RecoverFailPointRequest::UnsafeMergeFrom(const RecoverFailPointRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RecoverFailPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RecoverFailPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverFailPointRequest::CopyFrom(const RecoverFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RecoverFailPointRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RecoverFailPointRequest::IsInitialized() const {

  return true;
}

void RecoverFailPointRequest::Swap(RecoverFailPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverFailPointRequest::InternalSwap(RecoverFailPointRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecoverFailPointRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecoverFailPointRequest_descriptor_;
  metadata.reflection = RecoverFailPointRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecoverFailPointRequest

// optional string name = 1;
void RecoverFailPointRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RecoverFailPointRequest::name() const {
  // @@protoc_insertion_point(field_get:debugpb.RecoverFailPointRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecoverFailPointRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.RecoverFailPointRequest.name)
}
void RecoverFailPointRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.RecoverFailPointRequest.name)
}
void RecoverFailPointRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.RecoverFailPointRequest.name)
}
::std::string* RecoverFailPointRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.RecoverFailPointRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RecoverFailPointRequest::release_name() {
  // @@protoc_insertion_point(field_release:debugpb.RecoverFailPointRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RecoverFailPointRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:debugpb.RecoverFailPointRequest.name)
}

inline const RecoverFailPointRequest* RecoverFailPointRequest::internal_default_instance() {
  return &RecoverFailPointRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverFailPointResponse::RecoverFailPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RecoverFailPointResponse)
}

void RecoverFailPointResponse::InitAsDefaultInstance() {
}

RecoverFailPointResponse::RecoverFailPointResponse(const RecoverFailPointResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RecoverFailPointResponse)
}

void RecoverFailPointResponse::SharedCtor() {
  _cached_size_ = 0;
}

RecoverFailPointResponse::~RecoverFailPointResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RecoverFailPointResponse)
  SharedDtor();
}

void RecoverFailPointResponse::SharedDtor() {
}

void RecoverFailPointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecoverFailPointResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecoverFailPointResponse_descriptor_;
}

const RecoverFailPointResponse& RecoverFailPointResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RecoverFailPointResponse> RecoverFailPointResponse_default_instance_;

RecoverFailPointResponse* RecoverFailPointResponse::New(::google::protobuf::Arena* arena) const {
  RecoverFailPointResponse* n = new RecoverFailPointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecoverFailPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RecoverFailPointResponse)
}

bool RecoverFailPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RecoverFailPointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RecoverFailPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RecoverFailPointResponse)
  return false;
#undef DO_
}

void RecoverFailPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RecoverFailPointResponse)
  // @@protoc_insertion_point(serialize_end:debugpb.RecoverFailPointResponse)
}

::google::protobuf::uint8* RecoverFailPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RecoverFailPointResponse)
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RecoverFailPointResponse)
  return target;
}

size_t RecoverFailPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RecoverFailPointResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecoverFailPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RecoverFailPointResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RecoverFailPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverFailPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RecoverFailPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RecoverFailPointResponse)
    UnsafeMergeFrom(*source);
  }
}

void RecoverFailPointResponse::MergeFrom(const RecoverFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RecoverFailPointResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RecoverFailPointResponse::UnsafeMergeFrom(const RecoverFailPointResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void RecoverFailPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RecoverFailPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverFailPointResponse::CopyFrom(const RecoverFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RecoverFailPointResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RecoverFailPointResponse::IsInitialized() const {

  return true;
}

void RecoverFailPointResponse::Swap(RecoverFailPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverFailPointResponse::InternalSwap(RecoverFailPointResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecoverFailPointResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecoverFailPointResponse_descriptor_;
  metadata.reflection = RecoverFailPointResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecoverFailPointResponse

inline const RecoverFailPointResponse* RecoverFailPointResponse::internal_default_instance() {
  return &RecoverFailPointResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFailPointsRequest::ListFailPointsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ListFailPointsRequest)
}

void ListFailPointsRequest::InitAsDefaultInstance() {
}

ListFailPointsRequest::ListFailPointsRequest(const ListFailPointsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ListFailPointsRequest)
}

void ListFailPointsRequest::SharedCtor() {
  _cached_size_ = 0;
}

ListFailPointsRequest::~ListFailPointsRequest() {
  // @@protoc_insertion_point(destructor:debugpb.ListFailPointsRequest)
  SharedDtor();
}

void ListFailPointsRequest::SharedDtor() {
}

void ListFailPointsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFailPointsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListFailPointsRequest_descriptor_;
}

const ListFailPointsRequest& ListFailPointsRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListFailPointsRequest> ListFailPointsRequest_default_instance_;

ListFailPointsRequest* ListFailPointsRequest::New(::google::protobuf::Arena* arena) const {
  ListFailPointsRequest* n = new ListFailPointsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFailPointsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ListFailPointsRequest)
}

bool ListFailPointsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ListFailPointsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ListFailPointsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ListFailPointsRequest)
  return false;
#undef DO_
}

void ListFailPointsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ListFailPointsRequest)
  // @@protoc_insertion_point(serialize_end:debugpb.ListFailPointsRequest)
}

::google::protobuf::uint8* ListFailPointsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ListFailPointsRequest)
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ListFailPointsRequest)
  return target;
}

size_t ListFailPointsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ListFailPointsRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFailPointsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ListFailPointsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListFailPointsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFailPointsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ListFailPointsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ListFailPointsRequest)
    UnsafeMergeFrom(*source);
  }
}

void ListFailPointsRequest::MergeFrom(const ListFailPointsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ListFailPointsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListFailPointsRequest::UnsafeMergeFrom(const ListFailPointsRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void ListFailPointsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ListFailPointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFailPointsRequest::CopyFrom(const ListFailPointsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ListFailPointsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListFailPointsRequest::IsInitialized() const {

  return true;
}

void ListFailPointsRequest::Swap(ListFailPointsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFailPointsRequest::InternalSwap(ListFailPointsRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFailPointsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListFailPointsRequest_descriptor_;
  metadata.reflection = ListFailPointsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListFailPointsRequest

inline const ListFailPointsRequest* ListFailPointsRequest::internal_default_instance() {
  return &ListFailPointsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFailPointsResponse_Entry::kNameFieldNumber;
const int ListFailPointsResponse_Entry::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFailPointsResponse_Entry::ListFailPointsResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ListFailPointsResponse.Entry)
}

void ListFailPointsResponse_Entry::InitAsDefaultInstance() {
}

ListFailPointsResponse_Entry::ListFailPointsResponse_Entry(const ListFailPointsResponse_Entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ListFailPointsResponse.Entry)
}

void ListFailPointsResponse_Entry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListFailPointsResponse_Entry::~ListFailPointsResponse_Entry() {
  // @@protoc_insertion_point(destructor:debugpb.ListFailPointsResponse.Entry)
  SharedDtor();
}

void ListFailPointsResponse_Entry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFailPointsResponse_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFailPointsResponse_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListFailPointsResponse_Entry_descriptor_;
}

const ListFailPointsResponse_Entry& ListFailPointsResponse_Entry::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListFailPointsResponse_Entry> ListFailPointsResponse_Entry_default_instance_;

ListFailPointsResponse_Entry* ListFailPointsResponse_Entry::New(::google::protobuf::Arena* arena) const {
  ListFailPointsResponse_Entry* n = new ListFailPointsResponse_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFailPointsResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ListFailPointsResponse.Entry)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListFailPointsResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ListFailPointsResponse.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ListFailPointsResponse.Entry.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_actions;
        break;
      }

      // optional string actions = 2;
      case 2: {
        if (tag == 18) {
         parse_actions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actions().data(), this->actions().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ListFailPointsResponse.Entry.actions"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ListFailPointsResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ListFailPointsResponse.Entry)
  return false;
#undef DO_
}

void ListFailPointsResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ListFailPointsResponse.Entry)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), this->actions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.actions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actions(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.ListFailPointsResponse.Entry)
}

::google::protobuf::uint8* ListFailPointsResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ListFailPointsResponse.Entry)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), this->actions().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.actions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actions(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ListFailPointsResponse.Entry)
  return target;
}

size_t ListFailPointsResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ListFailPointsResponse.Entry)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string actions = 2;
  if (this->actions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFailPointsResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ListFailPointsResponse.Entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListFailPointsResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFailPointsResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ListFailPointsResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ListFailPointsResponse.Entry)
    UnsafeMergeFrom(*source);
  }
}

void ListFailPointsResponse_Entry::MergeFrom(const ListFailPointsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ListFailPointsResponse.Entry)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListFailPointsResponse_Entry::UnsafeMergeFrom(const ListFailPointsResponse_Entry& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.actions().size() > 0) {

    actions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actions_);
  }
}

void ListFailPointsResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ListFailPointsResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFailPointsResponse_Entry::CopyFrom(const ListFailPointsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ListFailPointsResponse.Entry)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListFailPointsResponse_Entry::IsInitialized() const {

  return true;
}

void ListFailPointsResponse_Entry::Swap(ListFailPointsResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFailPointsResponse_Entry::InternalSwap(ListFailPointsResponse_Entry* other) {
  name_.Swap(&other->name_);
  actions_.Swap(&other->actions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFailPointsResponse_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListFailPointsResponse_Entry_descriptor_;
  metadata.reflection = ListFailPointsResponse_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFailPointsResponse::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFailPointsResponse::ListFailPointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ListFailPointsResponse)
}

void ListFailPointsResponse::InitAsDefaultInstance() {
}

ListFailPointsResponse::ListFailPointsResponse(const ListFailPointsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ListFailPointsResponse)
}

void ListFailPointsResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListFailPointsResponse::~ListFailPointsResponse() {
  // @@protoc_insertion_point(destructor:debugpb.ListFailPointsResponse)
  SharedDtor();
}

void ListFailPointsResponse::SharedDtor() {
}

void ListFailPointsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListFailPointsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListFailPointsResponse_descriptor_;
}

const ListFailPointsResponse& ListFailPointsResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ListFailPointsResponse> ListFailPointsResponse_default_instance_;

ListFailPointsResponse* ListFailPointsResponse::New(::google::protobuf::Arena* arena) const {
  ListFailPointsResponse* n = new ListFailPointsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListFailPointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ListFailPointsResponse)
  entries_.Clear();
}

bool ListFailPointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ListFailPointsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ListFailPointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ListFailPointsResponse)
  return false;
#undef DO_
}

void ListFailPointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ListFailPointsResponse)
  // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.ListFailPointsResponse)
}

::google::protobuf::uint8* ListFailPointsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ListFailPointsResponse)
  // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ListFailPointsResponse)
  return target;
}

size_t ListFailPointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ListFailPointsResponse)
  size_t total_size = 0;

  // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListFailPointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ListFailPointsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListFailPointsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFailPointsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ListFailPointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ListFailPointsResponse)
    UnsafeMergeFrom(*source);
  }
}

void ListFailPointsResponse::MergeFrom(const ListFailPointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ListFailPointsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ListFailPointsResponse::UnsafeMergeFrom(const ListFailPointsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  entries_.MergeFrom(from.entries_);
}

void ListFailPointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ListFailPointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFailPointsResponse::CopyFrom(const ListFailPointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ListFailPointsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ListFailPointsResponse::IsInitialized() const {

  return true;
}

void ListFailPointsResponse::Swap(ListFailPointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFailPointsResponse::InternalSwap(ListFailPointsResponse* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListFailPointsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListFailPointsResponse_descriptor_;
  metadata.reflection = ListFailPointsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListFailPointsResponse_Entry

// optional string name = 1;
void ListFailPointsResponse_Entry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListFailPointsResponse_Entry::name() const {
  // @@protoc_insertion_point(field_get:debugpb.ListFailPointsResponse.Entry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFailPointsResponse_Entry::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ListFailPointsResponse.Entry.name)
}
void ListFailPointsResponse_Entry::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ListFailPointsResponse.Entry.name)
}
void ListFailPointsResponse_Entry::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ListFailPointsResponse.Entry.name)
}
::std::string* ListFailPointsResponse_Entry::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ListFailPointsResponse.Entry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListFailPointsResponse_Entry::release_name() {
  // @@protoc_insertion_point(field_release:debugpb.ListFailPointsResponse.Entry.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFailPointsResponse_Entry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ListFailPointsResponse.Entry.name)
}

// optional string actions = 2;
void ListFailPointsResponse_Entry::clear_actions() {
  actions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ListFailPointsResponse_Entry::actions() const {
  // @@protoc_insertion_point(field_get:debugpb.ListFailPointsResponse.Entry.actions)
  return actions_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFailPointsResponse_Entry::set_actions(const ::std::string& value) {
  
  actions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ListFailPointsResponse.Entry.actions)
}
void ListFailPointsResponse_Entry::set_actions(const char* value) {
  
  actions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ListFailPointsResponse.Entry.actions)
}
void ListFailPointsResponse_Entry::set_actions(const char* value, size_t size) {
  
  actions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ListFailPointsResponse.Entry.actions)
}
::std::string* ListFailPointsResponse_Entry::mutable_actions() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ListFailPointsResponse.Entry.actions)
  return actions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ListFailPointsResponse_Entry::release_actions() {
  // @@protoc_insertion_point(field_release:debugpb.ListFailPointsResponse.Entry.actions)
  
  return actions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ListFailPointsResponse_Entry::set_allocated_actions(::std::string* actions) {
  if (actions != NULL) {
    
  } else {
    
  }
  actions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actions);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ListFailPointsResponse.Entry.actions)
}

inline const ListFailPointsResponse_Entry* ListFailPointsResponse_Entry::internal_default_instance() {
  return &ListFailPointsResponse_Entry_default_instance_.get();
}
// -------------------------------------------------------------------

// ListFailPointsResponse

// repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
int ListFailPointsResponse::entries_size() const {
  return entries_.size();
}
void ListFailPointsResponse::clear_entries() {
  entries_.Clear();
}
const ::debugpb::ListFailPointsResponse_Entry& ListFailPointsResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:debugpb.ListFailPointsResponse.entries)
  return entries_.Get(index);
}
::debugpb::ListFailPointsResponse_Entry* ListFailPointsResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:debugpb.ListFailPointsResponse.entries)
  return entries_.Mutable(index);
}
::debugpb::ListFailPointsResponse_Entry* ListFailPointsResponse::add_entries() {
  // @@protoc_insertion_point(field_add:debugpb.ListFailPointsResponse.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::debugpb::ListFailPointsResponse_Entry >*
ListFailPointsResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:debugpb.ListFailPointsResponse.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::debugpb::ListFailPointsResponse_Entry >&
ListFailPointsResponse::entries() const {
  // @@protoc_insertion_point(field_list:debugpb.ListFailPointsResponse.entries)
  return entries_;
}

inline const ListFailPointsResponse* ListFailPointsResponse::internal_default_instance() {
  return &ListFailPointsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricsRequest::kAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricsRequest::GetMetricsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetMetricsRequest)
}

void GetMetricsRequest::InitAsDefaultInstance() {
}

GetMetricsRequest::GetMetricsRequest(const GetMetricsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetMetricsRequest)
}

void GetMetricsRequest::SharedCtor() {
  all_ = false;
  _cached_size_ = 0;
}

GetMetricsRequest::~GetMetricsRequest() {
  // @@protoc_insertion_point(destructor:debugpb.GetMetricsRequest)
  SharedDtor();
}

void GetMetricsRequest::SharedDtor() {
}

void GetMetricsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMetricsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMetricsRequest_descriptor_;
}

const GetMetricsRequest& GetMetricsRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetMetricsRequest> GetMetricsRequest_default_instance_;

GetMetricsRequest* GetMetricsRequest::New(::google::protobuf::Arena* arena) const {
  GetMetricsRequest* n = new GetMetricsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetMetricsRequest)
  all_ = false;
}

bool GetMetricsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetMetricsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool all = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetMetricsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetMetricsRequest)
  return false;
#undef DO_
}

void GetMetricsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetMetricsRequest)
  // optional bool all = 1;
  if (this->all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->all(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.GetMetricsRequest)
}

::google::protobuf::uint8* GetMetricsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetMetricsRequest)
  // optional bool all = 1;
  if (this->all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->all(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetMetricsRequest)
  return target;
}

size_t GetMetricsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetMetricsRequest)
  size_t total_size = 0;

  // optional bool all = 1;
  if (this->all() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMetricsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetMetricsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMetricsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetMetricsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetMetricsRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetMetricsRequest::MergeFrom(const GetMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetMetricsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetMetricsRequest::UnsafeMergeFrom(const GetMetricsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.all() != 0) {
    set_all(from.all());
  }
}

void GetMetricsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricsRequest::CopyFrom(const GetMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetMetricsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetMetricsRequest::IsInitialized() const {

  return true;
}

void GetMetricsRequest::Swap(GetMetricsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricsRequest::InternalSwap(GetMetricsRequest* other) {
  std::swap(all_, other->all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMetricsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMetricsRequest_descriptor_;
  metadata.reflection = GetMetricsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMetricsRequest

// optional bool all = 1;
void GetMetricsRequest::clear_all() {
  all_ = false;
}
bool GetMetricsRequest::all() const {
  // @@protoc_insertion_point(field_get:debugpb.GetMetricsRequest.all)
  return all_;
}
void GetMetricsRequest::set_all(bool value) {
  
  all_ = value;
  // @@protoc_insertion_point(field_set:debugpb.GetMetricsRequest.all)
}

inline const GetMetricsRequest* GetMetricsRequest::internal_default_instance() {
  return &GetMetricsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricsResponse::kPrometheusFieldNumber;
const int GetMetricsResponse::kRocksdbKvFieldNumber;
const int GetMetricsResponse::kRocksdbRaftFieldNumber;
const int GetMetricsResponse::kJemallocFieldNumber;
const int GetMetricsResponse::kStoreIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricsResponse::GetMetricsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetMetricsResponse)
}

void GetMetricsResponse::InitAsDefaultInstance() {
}

GetMetricsResponse::GetMetricsResponse(const GetMetricsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetMetricsResponse)
}

void GetMetricsResponse::SharedCtor() {
  prometheus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_raft_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jemalloc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GetMetricsResponse::~GetMetricsResponse() {
  // @@protoc_insertion_point(destructor:debugpb.GetMetricsResponse)
  SharedDtor();
}

void GetMetricsResponse::SharedDtor() {
  prometheus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_raft_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jemalloc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetricsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMetricsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMetricsResponse_descriptor_;
}

const GetMetricsResponse& GetMetricsResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetMetricsResponse> GetMetricsResponse_default_instance_;

GetMetricsResponse* GetMetricsResponse::New(::google::protobuf::Arena* arena) const {
  GetMetricsResponse* n = new GetMetricsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetMetricsResponse)
  prometheus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_raft_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jemalloc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_id_ = GOOGLE_ULONGLONG(0);
}

bool GetMetricsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetMetricsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string prometheus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prometheus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prometheus().data(), this->prometheus().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.prometheus"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rocksdb_kv;
        break;
      }

      // optional string rocksdb_kv = 2;
      case 2: {
        if (tag == 18) {
         parse_rocksdb_kv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rocksdb_kv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rocksdb_kv().data(), this->rocksdb_kv().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.rocksdb_kv"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rocksdb_raft;
        break;
      }

      // optional string rocksdb_raft = 3;
      case 3: {
        if (tag == 26) {
         parse_rocksdb_raft:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rocksdb_raft()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rocksdb_raft().data(), this->rocksdb_raft().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.rocksdb_raft"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_jemalloc;
        break;
      }

      // optional string jemalloc = 4;
      case 4: {
        if (tag == 34) {
         parse_jemalloc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jemalloc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jemalloc().data(), this->jemalloc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.jemalloc"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_store_id;
        break;
      }

      // optional uint64 store_id = 5;
      case 5: {
        if (tag == 40) {
         parse_store_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &store_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetMetricsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetMetricsResponse)
  return false;
#undef DO_
}

void GetMetricsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetMetricsResponse)
  // optional string prometheus = 1;
  if (this->prometheus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prometheus().data(), this->prometheus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.prometheus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->prometheus(), output);
  }

  // optional string rocksdb_kv = 2;
  if (this->rocksdb_kv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_kv().data(), this->rocksdb_kv().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_kv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rocksdb_kv(), output);
  }

  // optional string rocksdb_raft = 3;
  if (this->rocksdb_raft().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_raft().data(), this->rocksdb_raft().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_raft");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rocksdb_raft(), output);
  }

  // optional string jemalloc = 4;
  if (this->jemalloc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jemalloc().data(), this->jemalloc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.jemalloc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->jemalloc(), output);
  }

  // optional uint64 store_id = 5;
  if (this->store_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->store_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.GetMetricsResponse)
}

::google::protobuf::uint8* GetMetricsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetMetricsResponse)
  // optional string prometheus = 1;
  if (this->prometheus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prometheus().data(), this->prometheus().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.prometheus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->prometheus(), target);
  }

  // optional string rocksdb_kv = 2;
  if (this->rocksdb_kv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_kv().data(), this->rocksdb_kv().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_kv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rocksdb_kv(), target);
  }

  // optional string rocksdb_raft = 3;
  if (this->rocksdb_raft().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_raft().data(), this->rocksdb_raft().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_raft");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rocksdb_raft(), target);
  }

  // optional string jemalloc = 4;
  if (this->jemalloc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jemalloc().data(), this->jemalloc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.jemalloc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->jemalloc(), target);
  }

  // optional uint64 store_id = 5;
  if (this->store_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->store_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetMetricsResponse)
  return target;
}

size_t GetMetricsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetMetricsResponse)
  size_t total_size = 0;

  // optional string prometheus = 1;
  if (this->prometheus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prometheus());
  }

  // optional string rocksdb_kv = 2;
  if (this->rocksdb_kv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rocksdb_kv());
  }

  // optional string rocksdb_raft = 3;
  if (this->rocksdb_raft().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rocksdb_raft());
  }

  // optional string jemalloc = 4;
  if (this->jemalloc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jemalloc());
  }

  // optional uint64 store_id = 5;
  if (this->store_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->store_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMetricsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetMetricsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMetricsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetMetricsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetMetricsResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetMetricsResponse::MergeFrom(const GetMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetMetricsResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetMetricsResponse::UnsafeMergeFrom(const GetMetricsResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.prometheus().size() > 0) {

    prometheus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prometheus_);
  }
  if (from.rocksdb_kv().size() > 0) {

    rocksdb_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rocksdb_kv_);
  }
  if (from.rocksdb_raft().size() > 0) {

    rocksdb_raft_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rocksdb_raft_);
  }
  if (from.jemalloc().size() > 0) {

    jemalloc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jemalloc_);
  }
  if (from.store_id() != 0) {
    set_store_id(from.store_id());
  }
}

void GetMetricsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricsResponse::CopyFrom(const GetMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetMetricsResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetMetricsResponse::IsInitialized() const {

  return true;
}

void GetMetricsResponse::Swap(GetMetricsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricsResponse::InternalSwap(GetMetricsResponse* other) {
  prometheus_.Swap(&other->prometheus_);
  rocksdb_kv_.Swap(&other->rocksdb_kv_);
  rocksdb_raft_.Swap(&other->rocksdb_raft_);
  jemalloc_.Swap(&other->jemalloc_);
  std::swap(store_id_, other->store_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMetricsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMetricsResponse_descriptor_;
  metadata.reflection = GetMetricsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMetricsResponse

// optional string prometheus = 1;
void GetMetricsResponse::clear_prometheus() {
  prometheus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetMetricsResponse::prometheus() const {
  // @@protoc_insertion_point(field_get:debugpb.GetMetricsResponse.prometheus)
  return prometheus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_prometheus(const ::std::string& value) {
  
  prometheus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetMetricsResponse.prometheus)
}
void GetMetricsResponse::set_prometheus(const char* value) {
  
  prometheus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetMetricsResponse.prometheus)
}
void GetMetricsResponse::set_prometheus(const char* value, size_t size) {
  
  prometheus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetMetricsResponse.prometheus)
}
::std::string* GetMetricsResponse::mutable_prometheus() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetMetricsResponse.prometheus)
  return prometheus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetMetricsResponse::release_prometheus() {
  // @@protoc_insertion_point(field_release:debugpb.GetMetricsResponse.prometheus)
  
  return prometheus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_allocated_prometheus(::std::string* prometheus) {
  if (prometheus != NULL) {
    
  } else {
    
  }
  prometheus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prometheus);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetMetricsResponse.prometheus)
}

// optional string rocksdb_kv = 2;
void GetMetricsResponse::clear_rocksdb_kv() {
  rocksdb_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetMetricsResponse::rocksdb_kv() const {
  // @@protoc_insertion_point(field_get:debugpb.GetMetricsResponse.rocksdb_kv)
  return rocksdb_kv_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_rocksdb_kv(const ::std::string& value) {
  
  rocksdb_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetMetricsResponse.rocksdb_kv)
}
void GetMetricsResponse::set_rocksdb_kv(const char* value) {
  
  rocksdb_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetMetricsResponse.rocksdb_kv)
}
void GetMetricsResponse::set_rocksdb_kv(const char* value, size_t size) {
  
  rocksdb_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetMetricsResponse.rocksdb_kv)
}
::std::string* GetMetricsResponse::mutable_rocksdb_kv() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetMetricsResponse.rocksdb_kv)
  return rocksdb_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetMetricsResponse::release_rocksdb_kv() {
  // @@protoc_insertion_point(field_release:debugpb.GetMetricsResponse.rocksdb_kv)
  
  return rocksdb_kv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_allocated_rocksdb_kv(::std::string* rocksdb_kv) {
  if (rocksdb_kv != NULL) {
    
  } else {
    
  }
  rocksdb_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rocksdb_kv);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetMetricsResponse.rocksdb_kv)
}

// optional string rocksdb_raft = 3;
void GetMetricsResponse::clear_rocksdb_raft() {
  rocksdb_raft_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetMetricsResponse::rocksdb_raft() const {
  // @@protoc_insertion_point(field_get:debugpb.GetMetricsResponse.rocksdb_raft)
  return rocksdb_raft_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_rocksdb_raft(const ::std::string& value) {
  
  rocksdb_raft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetMetricsResponse.rocksdb_raft)
}
void GetMetricsResponse::set_rocksdb_raft(const char* value) {
  
  rocksdb_raft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetMetricsResponse.rocksdb_raft)
}
void GetMetricsResponse::set_rocksdb_raft(const char* value, size_t size) {
  
  rocksdb_raft_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetMetricsResponse.rocksdb_raft)
}
::std::string* GetMetricsResponse::mutable_rocksdb_raft() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetMetricsResponse.rocksdb_raft)
  return rocksdb_raft_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetMetricsResponse::release_rocksdb_raft() {
  // @@protoc_insertion_point(field_release:debugpb.GetMetricsResponse.rocksdb_raft)
  
  return rocksdb_raft_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_allocated_rocksdb_raft(::std::string* rocksdb_raft) {
  if (rocksdb_raft != NULL) {
    
  } else {
    
  }
  rocksdb_raft_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rocksdb_raft);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetMetricsResponse.rocksdb_raft)
}

// optional string jemalloc = 4;
void GetMetricsResponse::clear_jemalloc() {
  jemalloc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetMetricsResponse::jemalloc() const {
  // @@protoc_insertion_point(field_get:debugpb.GetMetricsResponse.jemalloc)
  return jemalloc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_jemalloc(const ::std::string& value) {
  
  jemalloc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.GetMetricsResponse.jemalloc)
}
void GetMetricsResponse::set_jemalloc(const char* value) {
  
  jemalloc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.GetMetricsResponse.jemalloc)
}
void GetMetricsResponse::set_jemalloc(const char* value, size_t size) {
  
  jemalloc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.GetMetricsResponse.jemalloc)
}
::std::string* GetMetricsResponse::mutable_jemalloc() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.GetMetricsResponse.jemalloc)
  return jemalloc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetMetricsResponse::release_jemalloc() {
  // @@protoc_insertion_point(field_release:debugpb.GetMetricsResponse.jemalloc)
  
  return jemalloc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetMetricsResponse::set_allocated_jemalloc(::std::string* jemalloc) {
  if (jemalloc != NULL) {
    
  } else {
    
  }
  jemalloc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jemalloc);
  // @@protoc_insertion_point(field_set_allocated:debugpb.GetMetricsResponse.jemalloc)
}

// optional uint64 store_id = 5;
void GetMetricsResponse::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetMetricsResponse::store_id() const {
  // @@protoc_insertion_point(field_get:debugpb.GetMetricsResponse.store_id)
  return store_id_;
}
void GetMetricsResponse::set_store_id(::google::protobuf::uint64 value) {
  
  store_id_ = value;
  // @@protoc_insertion_point(field_set:debugpb.GetMetricsResponse.store_id)
}

inline const GetMetricsResponse* GetMetricsResponse::internal_default_instance() {
  return &GetMetricsResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionConsistencyCheckRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionConsistencyCheckRequest::RegionConsistencyCheckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionConsistencyCheckRequest)
}

void RegionConsistencyCheckRequest::InitAsDefaultInstance() {
}

RegionConsistencyCheckRequest::RegionConsistencyCheckRequest(const RegionConsistencyCheckRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionConsistencyCheckRequest)
}

void RegionConsistencyCheckRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RegionConsistencyCheckRequest::~RegionConsistencyCheckRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RegionConsistencyCheckRequest)
  SharedDtor();
}

void RegionConsistencyCheckRequest::SharedDtor() {
}

void RegionConsistencyCheckRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionConsistencyCheckRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionConsistencyCheckRequest_descriptor_;
}

const RegionConsistencyCheckRequest& RegionConsistencyCheckRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionConsistencyCheckRequest> RegionConsistencyCheckRequest_default_instance_;

RegionConsistencyCheckRequest* RegionConsistencyCheckRequest::New(::google::protobuf::Arena* arena) const {
  RegionConsistencyCheckRequest* n = new RegionConsistencyCheckRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionConsistencyCheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionConsistencyCheckRequest)
  region_id_ = GOOGLE_ULONGLONG(0);
}

bool RegionConsistencyCheckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionConsistencyCheckRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 region_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionConsistencyCheckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionConsistencyCheckRequest)
  return false;
#undef DO_
}

void RegionConsistencyCheckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionConsistencyCheckRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.RegionConsistencyCheckRequest)
}

::google::protobuf::uint8* RegionConsistencyCheckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionConsistencyCheckRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionConsistencyCheckRequest)
  return target;
}

size_t RegionConsistencyCheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionConsistencyCheckRequest)
  size_t total_size = 0;

  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionConsistencyCheckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionConsistencyCheckRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionConsistencyCheckRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionConsistencyCheckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionConsistencyCheckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionConsistencyCheckRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegionConsistencyCheckRequest::MergeFrom(const RegionConsistencyCheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionConsistencyCheckRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionConsistencyCheckRequest::UnsafeMergeFrom(const RegionConsistencyCheckRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionConsistencyCheckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionConsistencyCheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionConsistencyCheckRequest::CopyFrom(const RegionConsistencyCheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionConsistencyCheckRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionConsistencyCheckRequest::IsInitialized() const {

  return true;
}

void RegionConsistencyCheckRequest::Swap(RegionConsistencyCheckRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionConsistencyCheckRequest::InternalSwap(RegionConsistencyCheckRequest* other) {
  std::swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionConsistencyCheckRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionConsistencyCheckRequest_descriptor_;
  metadata.reflection = RegionConsistencyCheckRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionConsistencyCheckRequest

// optional uint64 region_id = 1;
void RegionConsistencyCheckRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RegionConsistencyCheckRequest::region_id() const {
  // @@protoc_insertion_point(field_get:debugpb.RegionConsistencyCheckRequest.region_id)
  return region_id_;
}
void RegionConsistencyCheckRequest::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:debugpb.RegionConsistencyCheckRequest.region_id)
}

inline const RegionConsistencyCheckRequest* RegionConsistencyCheckRequest::internal_default_instance() {
  return &RegionConsistencyCheckRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionConsistencyCheckResponse::RegionConsistencyCheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionConsistencyCheckResponse)
}

void RegionConsistencyCheckResponse::InitAsDefaultInstance() {
}

RegionConsistencyCheckResponse::RegionConsistencyCheckResponse(const RegionConsistencyCheckResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionConsistencyCheckResponse)
}

void RegionConsistencyCheckResponse::SharedCtor() {
  _cached_size_ = 0;
}

RegionConsistencyCheckResponse::~RegionConsistencyCheckResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RegionConsistencyCheckResponse)
  SharedDtor();
}

void RegionConsistencyCheckResponse::SharedDtor() {
}

void RegionConsistencyCheckResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionConsistencyCheckResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionConsistencyCheckResponse_descriptor_;
}

const RegionConsistencyCheckResponse& RegionConsistencyCheckResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionConsistencyCheckResponse> RegionConsistencyCheckResponse_default_instance_;

RegionConsistencyCheckResponse* RegionConsistencyCheckResponse::New(::google::protobuf::Arena* arena) const {
  RegionConsistencyCheckResponse* n = new RegionConsistencyCheckResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionConsistencyCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionConsistencyCheckResponse)
}

bool RegionConsistencyCheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionConsistencyCheckResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionConsistencyCheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionConsistencyCheckResponse)
  return false;
#undef DO_
}

void RegionConsistencyCheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionConsistencyCheckResponse)
  // @@protoc_insertion_point(serialize_end:debugpb.RegionConsistencyCheckResponse)
}

::google::protobuf::uint8* RegionConsistencyCheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionConsistencyCheckResponse)
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionConsistencyCheckResponse)
  return target;
}

size_t RegionConsistencyCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionConsistencyCheckResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionConsistencyCheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionConsistencyCheckResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionConsistencyCheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionConsistencyCheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionConsistencyCheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionConsistencyCheckResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegionConsistencyCheckResponse::MergeFrom(const RegionConsistencyCheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionConsistencyCheckResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionConsistencyCheckResponse::UnsafeMergeFrom(const RegionConsistencyCheckResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void RegionConsistencyCheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionConsistencyCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionConsistencyCheckResponse::CopyFrom(const RegionConsistencyCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionConsistencyCheckResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionConsistencyCheckResponse::IsInitialized() const {

  return true;
}

void RegionConsistencyCheckResponse::Swap(RegionConsistencyCheckResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionConsistencyCheckResponse::InternalSwap(RegionConsistencyCheckResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionConsistencyCheckResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionConsistencyCheckResponse_descriptor_;
  metadata.reflection = RegionConsistencyCheckResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionConsistencyCheckResponse

inline const RegionConsistencyCheckResponse* RegionConsistencyCheckResponse::internal_default_instance() {
  return &RegionConsistencyCheckResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyTikvConfigRequest::kModuleFieldNumber;
const int ModifyTikvConfigRequest::kConfigNameFieldNumber;
const int ModifyTikvConfigRequest::kConfigValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyTikvConfigRequest::ModifyTikvConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ModifyTikvConfigRequest)
}

void ModifyTikvConfigRequest::InitAsDefaultInstance() {
}

ModifyTikvConfigRequest::ModifyTikvConfigRequest(const ModifyTikvConfigRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ModifyTikvConfigRequest)
}

void ModifyTikvConfigRequest::SharedCtor() {
  config_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_ = 0;
  _cached_size_ = 0;
}

ModifyTikvConfigRequest::~ModifyTikvConfigRequest() {
  // @@protoc_insertion_point(destructor:debugpb.ModifyTikvConfigRequest)
  SharedDtor();
}

void ModifyTikvConfigRequest::SharedDtor() {
  config_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyTikvConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyTikvConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyTikvConfigRequest_descriptor_;
}

const ModifyTikvConfigRequest& ModifyTikvConfigRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ModifyTikvConfigRequest> ModifyTikvConfigRequest_default_instance_;

ModifyTikvConfigRequest* ModifyTikvConfigRequest::New(::google::protobuf::Arena* arena) const {
  ModifyTikvConfigRequest* n = new ModifyTikvConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyTikvConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ModifyTikvConfigRequest)
  module_ = 0;
  config_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModifyTikvConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ModifyTikvConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .debugpb.MODULE module = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_module(static_cast< ::debugpb::MODULE >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_config_name;
        break;
      }

      // optional string config_name = 2;
      case 2: {
        if (tag == 18) {
         parse_config_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_name().data(), this->config_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ModifyTikvConfigRequest.config_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_config_value;
        break;
      }

      // optional string config_value = 3;
      case 3: {
        if (tag == 26) {
         parse_config_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_value().data(), this->config_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ModifyTikvConfigRequest.config_value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ModifyTikvConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ModifyTikvConfigRequest)
  return false;
#undef DO_
}

void ModifyTikvConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ModifyTikvConfigRequest)
  // optional .debugpb.MODULE module = 1;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->module(), output);
  }

  // optional string config_name = 2;
  if (this->config_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_name().data(), this->config_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->config_name(), output);
  }

  // optional string config_value = 3;
  if (this->config_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_value().data(), this->config_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->config_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.ModifyTikvConfigRequest)
}

::google::protobuf::uint8* ModifyTikvConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ModifyTikvConfigRequest)
  // optional .debugpb.MODULE module = 1;
  if (this->module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->module(), target);
  }

  // optional string config_name = 2;
  if (this->config_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_name().data(), this->config_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->config_name(), target);
  }

  // optional string config_value = 3;
  if (this->config_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_value().data(), this->config_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->config_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ModifyTikvConfigRequest)
  return target;
}

size_t ModifyTikvConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ModifyTikvConfigRequest)
  size_t total_size = 0;

  // optional .debugpb.MODULE module = 1;
  if (this->module() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->module());
  }

  // optional string config_name = 2;
  if (this->config_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_name());
  }

  // optional string config_value = 3;
  if (this->config_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyTikvConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ModifyTikvConfigRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModifyTikvConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyTikvConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ModifyTikvConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ModifyTikvConfigRequest)
    UnsafeMergeFrom(*source);
  }
}

void ModifyTikvConfigRequest::MergeFrom(const ModifyTikvConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ModifyTikvConfigRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ModifyTikvConfigRequest::UnsafeMergeFrom(const ModifyTikvConfigRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.module() != 0) {
    set_module(from.module());
  }
  if (from.config_name().size() > 0) {

    config_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_name_);
  }
  if (from.config_value().size() > 0) {

    config_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_value_);
  }
}

void ModifyTikvConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ModifyTikvConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyTikvConfigRequest::CopyFrom(const ModifyTikvConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ModifyTikvConfigRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ModifyTikvConfigRequest::IsInitialized() const {

  return true;
}

void ModifyTikvConfigRequest::Swap(ModifyTikvConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyTikvConfigRequest::InternalSwap(ModifyTikvConfigRequest* other) {
  std::swap(module_, other->module_);
  config_name_.Swap(&other->config_name_);
  config_value_.Swap(&other->config_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyTikvConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyTikvConfigRequest_descriptor_;
  metadata.reflection = ModifyTikvConfigRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyTikvConfigRequest

// optional .debugpb.MODULE module = 1;
void ModifyTikvConfigRequest::clear_module() {
  module_ = 0;
}
::debugpb::MODULE ModifyTikvConfigRequest::module() const {
  // @@protoc_insertion_point(field_get:debugpb.ModifyTikvConfigRequest.module)
  return static_cast< ::debugpb::MODULE >(module_);
}
void ModifyTikvConfigRequest::set_module(::debugpb::MODULE value) {
  
  module_ = value;
  // @@protoc_insertion_point(field_set:debugpb.ModifyTikvConfigRequest.module)
}

// optional string config_name = 2;
void ModifyTikvConfigRequest::clear_config_name() {
  config_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyTikvConfigRequest::config_name() const {
  // @@protoc_insertion_point(field_get:debugpb.ModifyTikvConfigRequest.config_name)
  return config_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyTikvConfigRequest::set_config_name(const ::std::string& value) {
  
  config_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ModifyTikvConfigRequest.config_name)
}
void ModifyTikvConfigRequest::set_config_name(const char* value) {
  
  config_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ModifyTikvConfigRequest.config_name)
}
void ModifyTikvConfigRequest::set_config_name(const char* value, size_t size) {
  
  config_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ModifyTikvConfigRequest.config_name)
}
::std::string* ModifyTikvConfigRequest::mutable_config_name() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ModifyTikvConfigRequest.config_name)
  return config_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyTikvConfigRequest::release_config_name() {
  // @@protoc_insertion_point(field_release:debugpb.ModifyTikvConfigRequest.config_name)
  
  return config_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyTikvConfigRequest::set_allocated_config_name(::std::string* config_name) {
  if (config_name != NULL) {
    
  } else {
    
  }
  config_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_name);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ModifyTikvConfigRequest.config_name)
}

// optional string config_value = 3;
void ModifyTikvConfigRequest::clear_config_value() {
  config_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModifyTikvConfigRequest::config_value() const {
  // @@protoc_insertion_point(field_get:debugpb.ModifyTikvConfigRequest.config_value)
  return config_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyTikvConfigRequest::set_config_value(const ::std::string& value) {
  
  config_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.ModifyTikvConfigRequest.config_value)
}
void ModifyTikvConfigRequest::set_config_value(const char* value) {
  
  config_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.ModifyTikvConfigRequest.config_value)
}
void ModifyTikvConfigRequest::set_config_value(const char* value, size_t size) {
  
  config_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.ModifyTikvConfigRequest.config_value)
}
::std::string* ModifyTikvConfigRequest::mutable_config_value() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.ModifyTikvConfigRequest.config_value)
  return config_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModifyTikvConfigRequest::release_config_value() {
  // @@protoc_insertion_point(field_release:debugpb.ModifyTikvConfigRequest.config_value)
  
  return config_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModifyTikvConfigRequest::set_allocated_config_value(::std::string* config_value) {
  if (config_value != NULL) {
    
  } else {
    
  }
  config_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_value);
  // @@protoc_insertion_point(field_set_allocated:debugpb.ModifyTikvConfigRequest.config_value)
}

inline const ModifyTikvConfigRequest* ModifyTikvConfigRequest::internal_default_instance() {
  return &ModifyTikvConfigRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyTikvConfigResponse::ModifyTikvConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ModifyTikvConfigResponse)
}

void ModifyTikvConfigResponse::InitAsDefaultInstance() {
}

ModifyTikvConfigResponse::ModifyTikvConfigResponse(const ModifyTikvConfigResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.ModifyTikvConfigResponse)
}

void ModifyTikvConfigResponse::SharedCtor() {
  _cached_size_ = 0;
}

ModifyTikvConfigResponse::~ModifyTikvConfigResponse() {
  // @@protoc_insertion_point(destructor:debugpb.ModifyTikvConfigResponse)
  SharedDtor();
}

void ModifyTikvConfigResponse::SharedDtor() {
}

void ModifyTikvConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyTikvConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModifyTikvConfigResponse_descriptor_;
}

const ModifyTikvConfigResponse& ModifyTikvConfigResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ModifyTikvConfigResponse> ModifyTikvConfigResponse_default_instance_;

ModifyTikvConfigResponse* ModifyTikvConfigResponse::New(::google::protobuf::Arena* arena) const {
  ModifyTikvConfigResponse* n = new ModifyTikvConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyTikvConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ModifyTikvConfigResponse)
}

bool ModifyTikvConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ModifyTikvConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ModifyTikvConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ModifyTikvConfigResponse)
  return false;
#undef DO_
}

void ModifyTikvConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ModifyTikvConfigResponse)
  // @@protoc_insertion_point(serialize_end:debugpb.ModifyTikvConfigResponse)
}

::google::protobuf::uint8* ModifyTikvConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ModifyTikvConfigResponse)
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ModifyTikvConfigResponse)
  return target;
}

size_t ModifyTikvConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ModifyTikvConfigResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyTikvConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ModifyTikvConfigResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModifyTikvConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyTikvConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ModifyTikvConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ModifyTikvConfigResponse)
    UnsafeMergeFrom(*source);
  }
}

void ModifyTikvConfigResponse::MergeFrom(const ModifyTikvConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ModifyTikvConfigResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ModifyTikvConfigResponse::UnsafeMergeFrom(const ModifyTikvConfigResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void ModifyTikvConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ModifyTikvConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyTikvConfigResponse::CopyFrom(const ModifyTikvConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ModifyTikvConfigResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ModifyTikvConfigResponse::IsInitialized() const {

  return true;
}

void ModifyTikvConfigResponse::Swap(ModifyTikvConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyTikvConfigResponse::InternalSwap(ModifyTikvConfigResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyTikvConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModifyTikvConfigResponse_descriptor_;
  metadata.reflection = ModifyTikvConfigResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyTikvConfigResponse

inline const ModifyTikvConfigResponse* ModifyTikvConfigResponse::internal_default_instance() {
  return &ModifyTikvConfigResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.Property)
}

void Property::InitAsDefaultInstance() {
}

Property::Property(const Property& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.Property)
}

void Property::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:debugpb.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Property_descriptor_;
}

const Property& Property::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Property> Property_default_instance_;

Property* Property::New(::google::protobuf::Arena* arena) const {
  Property* n = new Property;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.Property)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.Property)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.Property.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.Property.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.Property)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.Property)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.Property)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.Property)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.Property)
    UnsafeMergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.Property)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Property::UnsafeMergeFrom(const Property& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.Property)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Property::IsInitialized() const {

  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Property_descriptor_;
  metadata.reflection = Property_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Property

// optional string name = 1;
void Property::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Property::name() const {
  // @@protoc_insertion_point(field_get:debugpb.Property.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.Property.name)
}
void Property::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.Property.name)
}
void Property::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.Property.name)
}
::std::string* Property::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.Property.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Property::release_name() {
  // @@protoc_insertion_point(field_release:debugpb.Property.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:debugpb.Property.name)
}

// optional string value = 2;
void Property::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Property::value() const {
  // @@protoc_insertion_point(field_get:debugpb.Property.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:debugpb.Property.value)
}
void Property::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:debugpb.Property.value)
}
void Property::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:debugpb.Property.value)
}
::std::string* Property::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:debugpb.Property.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Property::release_value() {
  // @@protoc_insertion_point(field_release:debugpb.Property.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Property::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:debugpb.Property.value)
}

inline const Property* Property::internal_default_instance() {
  return &Property_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionPropertiesRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionPropertiesRequest::GetRegionPropertiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetRegionPropertiesRequest)
}

void GetRegionPropertiesRequest::InitAsDefaultInstance() {
}

GetRegionPropertiesRequest::GetRegionPropertiesRequest(const GetRegionPropertiesRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetRegionPropertiesRequest)
}

void GetRegionPropertiesRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GetRegionPropertiesRequest::~GetRegionPropertiesRequest() {
  // @@protoc_insertion_point(destructor:debugpb.GetRegionPropertiesRequest)
  SharedDtor();
}

void GetRegionPropertiesRequest::SharedDtor() {
}

void GetRegionPropertiesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRegionPropertiesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRegionPropertiesRequest_descriptor_;
}

const GetRegionPropertiesRequest& GetRegionPropertiesRequest::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRegionPropertiesRequest> GetRegionPropertiesRequest_default_instance_;

GetRegionPropertiesRequest* GetRegionPropertiesRequest::New(::google::protobuf::Arena* arena) const {
  GetRegionPropertiesRequest* n = new GetRegionPropertiesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRegionPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetRegionPropertiesRequest)
  region_id_ = GOOGLE_ULONGLONG(0);
}

bool GetRegionPropertiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetRegionPropertiesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 region_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetRegionPropertiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetRegionPropertiesRequest)
  return false;
#undef DO_
}

void GetRegionPropertiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetRegionPropertiesRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.GetRegionPropertiesRequest)
}

::google::protobuf::uint8* GetRegionPropertiesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetRegionPropertiesRequest)
  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetRegionPropertiesRequest)
  return target;
}

size_t GetRegionPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetRegionPropertiesRequest)
  size_t total_size = 0;

  // optional uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRegionPropertiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetRegionPropertiesRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRegionPropertiesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionPropertiesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetRegionPropertiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetRegionPropertiesRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetRegionPropertiesRequest::MergeFrom(const GetRegionPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetRegionPropertiesRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRegionPropertiesRequest::UnsafeMergeFrom(const GetRegionPropertiesRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void GetRegionPropertiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetRegionPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionPropertiesRequest::CopyFrom(const GetRegionPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetRegionPropertiesRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRegionPropertiesRequest::IsInitialized() const {

  return true;
}

void GetRegionPropertiesRequest::Swap(GetRegionPropertiesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionPropertiesRequest::InternalSwap(GetRegionPropertiesRequest* other) {
  std::swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRegionPropertiesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRegionPropertiesRequest_descriptor_;
  metadata.reflection = GetRegionPropertiesRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRegionPropertiesRequest

// optional uint64 region_id = 1;
void GetRegionPropertiesRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetRegionPropertiesRequest::region_id() const {
  // @@protoc_insertion_point(field_get:debugpb.GetRegionPropertiesRequest.region_id)
  return region_id_;
}
void GetRegionPropertiesRequest::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:debugpb.GetRegionPropertiesRequest.region_id)
}

inline const GetRegionPropertiesRequest* GetRegionPropertiesRequest::internal_default_instance() {
  return &GetRegionPropertiesRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionPropertiesResponse::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionPropertiesResponse::GetRegionPropertiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_debugpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetRegionPropertiesResponse)
}

void GetRegionPropertiesResponse::InitAsDefaultInstance() {
}

GetRegionPropertiesResponse::GetRegionPropertiesResponse(const GetRegionPropertiesResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetRegionPropertiesResponse)
}

void GetRegionPropertiesResponse::SharedCtor() {
  _cached_size_ = 0;
}

GetRegionPropertiesResponse::~GetRegionPropertiesResponse() {
  // @@protoc_insertion_point(destructor:debugpb.GetRegionPropertiesResponse)
  SharedDtor();
}

void GetRegionPropertiesResponse::SharedDtor() {
}

void GetRegionPropertiesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRegionPropertiesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRegionPropertiesResponse_descriptor_;
}

const GetRegionPropertiesResponse& GetRegionPropertiesResponse::default_instance() {
  protobuf_InitDefaults_debugpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRegionPropertiesResponse> GetRegionPropertiesResponse_default_instance_;

GetRegionPropertiesResponse* GetRegionPropertiesResponse::New(::google::protobuf::Arena* arena) const {
  GetRegionPropertiesResponse* n = new GetRegionPropertiesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRegionPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetRegionPropertiesResponse)
  props_.Clear();
}

bool GetRegionPropertiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetRegionPropertiesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugpb.Property props = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_props:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_props()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_props;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetRegionPropertiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetRegionPropertiesResponse)
  return false;
#undef DO_
}

void GetRegionPropertiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetRegionPropertiesResponse)
  // repeated .debugpb.Property props = 1;
  for (unsigned int i = 0, n = this->props_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->props(i), output);
  }

  // @@protoc_insertion_point(serialize_end:debugpb.GetRegionPropertiesResponse)
}

::google::protobuf::uint8* GetRegionPropertiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetRegionPropertiesResponse)
  // repeated .debugpb.Property props = 1;
  for (unsigned int i = 0, n = this->props_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->props(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetRegionPropertiesResponse)
  return target;
}

size_t GetRegionPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetRegionPropertiesResponse)
  size_t total_size = 0;

  // repeated .debugpb.Property props = 1;
  {
    unsigned int count = this->props_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->props(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRegionPropertiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetRegionPropertiesResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRegionPropertiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionPropertiesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetRegionPropertiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetRegionPropertiesResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetRegionPropertiesResponse::MergeFrom(const GetRegionPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetRegionPropertiesResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRegionPropertiesResponse::UnsafeMergeFrom(const GetRegionPropertiesResponse& from) {
  GOOGLE_DCHECK(&from != this);
  props_.MergeFrom(from.props_);
}

void GetRegionPropertiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetRegionPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionPropertiesResponse::CopyFrom(const GetRegionPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetRegionPropertiesResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRegionPropertiesResponse::IsInitialized() const {

  return true;
}

void GetRegionPropertiesResponse::Swap(GetRegionPropertiesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionPropertiesResponse::InternalSwap(GetRegionPropertiesResponse* other) {
  props_.UnsafeArenaSwap(&other->props_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRegionPropertiesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRegionPropertiesResponse_descriptor_;
  metadata.reflection = GetRegionPropertiesResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRegionPropertiesResponse

// repeated .debugpb.Property props = 1;
int GetRegionPropertiesResponse::props_size() const {
  return props_.size();
}
void GetRegionPropertiesResponse::clear_props() {
  props_.Clear();
}
const ::debugpb::Property& GetRegionPropertiesResponse::props(int index) const {
  // @@protoc_insertion_point(field_get:debugpb.GetRegionPropertiesResponse.props)
  return props_.Get(index);
}
::debugpb::Property* GetRegionPropertiesResponse::mutable_props(int index) {
  // @@protoc_insertion_point(field_mutable:debugpb.GetRegionPropertiesResponse.props)
  return props_.Mutable(index);
}
::debugpb::Property* GetRegionPropertiesResponse::add_props() {
  // @@protoc_insertion_point(field_add:debugpb.GetRegionPropertiesResponse.props)
  return props_.Add();
}
::google::protobuf::RepeatedPtrField< ::debugpb::Property >*
GetRegionPropertiesResponse::mutable_props() {
  // @@protoc_insertion_point(field_mutable_list:debugpb.GetRegionPropertiesResponse.props)
  return &props_;
}
const ::google::protobuf::RepeatedPtrField< ::debugpb::Property >&
GetRegionPropertiesResponse::props() const {
  // @@protoc_insertion_point(field_list:debugpb.GetRegionPropertiesResponse.props)
  return props_;
}

inline const GetRegionPropertiesResponse* GetRegionPropertiesResponse::internal_default_instance() {
  return &GetRegionPropertiesResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace debugpb

// @@protoc_insertion_point(global_scope)
