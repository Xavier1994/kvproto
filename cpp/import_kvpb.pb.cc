// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_kvpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "import_kvpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace import_kvpb {

namespace {

const ::google::protobuf::Descriptor* SwitchModeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchModeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwitchModeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchModeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenEngineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenEngineRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenEngineResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenEngineResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mutation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mutation_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Mutation_OP_descriptor_ = NULL;
const ::google::protobuf::Descriptor* WriteBatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteBatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteEngineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteEngineRequest_reflection_ = NULL;
struct WriteEngineRequestOneofInstance {
  const ::import_kvpb::WriteHead* head_;
  const ::import_kvpb::WriteBatch* batch_;
}* WriteEngineRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* WriteEngineResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteEngineResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CloseEngineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CloseEngineRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CloseEngineResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CloseEngineResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImportEngineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImportEngineRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImportEngineResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImportEngineResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CleanupEngineRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CleanupEngineRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CleanupEngineResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CleanupEngineResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactClusterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactClusterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactClusterResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactClusterResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::Descriptor* Error_EngineNotFound_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_EngineNotFound_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_import_5fkvpb_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_import_5fkvpb_2eproto() {
  protobuf_AddDesc_import_5fkvpb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "import_kvpb.proto");
  GOOGLE_CHECK(file != NULL);
  SwitchModeRequest_descriptor_ = file->message_type(0);
  static const int SwitchModeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeRequest, pd_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeRequest, request_),
  };
  SwitchModeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SwitchModeRequest_descriptor_,
      SwitchModeRequest::internal_default_instance(),
      SwitchModeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SwitchModeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeRequest, _internal_metadata_));
  SwitchModeResponse_descriptor_ = file->message_type(1);
  static const int SwitchModeResponse_offsets_[1] = {
  };
  SwitchModeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SwitchModeResponse_descriptor_,
      SwitchModeResponse::internal_default_instance(),
      SwitchModeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SwitchModeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeResponse, _internal_metadata_));
  OpenEngineRequest_descriptor_ = file->message_type(2);
  static const int OpenEngineRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenEngineRequest, uuid_),
  };
  OpenEngineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenEngineRequest_descriptor_,
      OpenEngineRequest::internal_default_instance(),
      OpenEngineRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(OpenEngineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenEngineRequest, _internal_metadata_));
  OpenEngineResponse_descriptor_ = file->message_type(3);
  static const int OpenEngineResponse_offsets_[1] = {
  };
  OpenEngineResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenEngineResponse_descriptor_,
      OpenEngineResponse::internal_default_instance(),
      OpenEngineResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(OpenEngineResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenEngineResponse, _internal_metadata_));
  WriteHead_descriptor_ = file->message_type(4);
  static const int WriteHead_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteHead, uuid_),
  };
  WriteHead_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteHead_descriptor_,
      WriteHead::internal_default_instance(),
      WriteHead_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteHead),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteHead, _internal_metadata_));
  Mutation_descriptor_ = file->message_type(5);
  static const int Mutation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, value_),
  };
  Mutation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Mutation_descriptor_,
      Mutation::internal_default_instance(),
      Mutation_offsets_,
      -1,
      -1,
      -1,
      sizeof(Mutation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, _internal_metadata_));
  Mutation_OP_descriptor_ = Mutation_descriptor_->enum_type(0);
  WriteBatch_descriptor_ = file->message_type(6);
  static const int WriteBatch_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteBatch, commit_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteBatch, mutations_),
  };
  WriteBatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteBatch_descriptor_,
      WriteBatch::internal_default_instance(),
      WriteBatch_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteBatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteBatch, _internal_metadata_));
  WriteEngineRequest_descriptor_ = file->message_type(7);
  static const int WriteEngineRequest_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(WriteEngineRequest_default_oneof_instance_, head_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(WriteEngineRequest_default_oneof_instance_, batch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteEngineRequest, chunk_),
  };
  WriteEngineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteEngineRequest_descriptor_,
      WriteEngineRequest::internal_default_instance(),
      WriteEngineRequest_offsets_,
      -1,
      -1,
      -1,
      WriteEngineRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteEngineRequest, _oneof_case_[0]),
      sizeof(WriteEngineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteEngineRequest, _internal_metadata_));
  WriteEngineResponse_descriptor_ = file->message_type(8);
  static const int WriteEngineResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteEngineResponse, error_),
  };
  WriteEngineResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteEngineResponse_descriptor_,
      WriteEngineResponse::internal_default_instance(),
      WriteEngineResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteEngineResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteEngineResponse, _internal_metadata_));
  CloseEngineRequest_descriptor_ = file->message_type(9);
  static const int CloseEngineRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseEngineRequest, uuid_),
  };
  CloseEngineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CloseEngineRequest_descriptor_,
      CloseEngineRequest::internal_default_instance(),
      CloseEngineRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CloseEngineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseEngineRequest, _internal_metadata_));
  CloseEngineResponse_descriptor_ = file->message_type(10);
  static const int CloseEngineResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseEngineResponse, error_),
  };
  CloseEngineResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CloseEngineResponse_descriptor_,
      CloseEngineResponse::internal_default_instance(),
      CloseEngineResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CloseEngineResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CloseEngineResponse, _internal_metadata_));
  ImportEngineRequest_descriptor_ = file->message_type(11);
  static const int ImportEngineRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportEngineRequest, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportEngineRequest, pd_addr_),
  };
  ImportEngineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImportEngineRequest_descriptor_,
      ImportEngineRequest::internal_default_instance(),
      ImportEngineRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ImportEngineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportEngineRequest, _internal_metadata_));
  ImportEngineResponse_descriptor_ = file->message_type(12);
  static const int ImportEngineResponse_offsets_[1] = {
  };
  ImportEngineResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImportEngineResponse_descriptor_,
      ImportEngineResponse::internal_default_instance(),
      ImportEngineResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ImportEngineResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImportEngineResponse, _internal_metadata_));
  CleanupEngineRequest_descriptor_ = file->message_type(13);
  static const int CleanupEngineRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CleanupEngineRequest, uuid_),
  };
  CleanupEngineRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CleanupEngineRequest_descriptor_,
      CleanupEngineRequest::internal_default_instance(),
      CleanupEngineRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CleanupEngineRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CleanupEngineRequest, _internal_metadata_));
  CleanupEngineResponse_descriptor_ = file->message_type(14);
  static const int CleanupEngineResponse_offsets_[1] = {
  };
  CleanupEngineResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CleanupEngineResponse_descriptor_,
      CleanupEngineResponse::internal_default_instance(),
      CleanupEngineResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CleanupEngineResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CleanupEngineResponse, _internal_metadata_));
  CompactClusterRequest_descriptor_ = file->message_type(15);
  static const int CompactClusterRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactClusterRequest, pd_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactClusterRequest, request_),
  };
  CompactClusterRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactClusterRequest_descriptor_,
      CompactClusterRequest::internal_default_instance(),
      CompactClusterRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactClusterRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactClusterRequest, _internal_metadata_));
  CompactClusterResponse_descriptor_ = file->message_type(16);
  static const int CompactClusterResponse_offsets_[1] = {
  };
  CompactClusterResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactClusterResponse_descriptor_,
      CompactClusterResponse::internal_default_instance(),
      CompactClusterResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactClusterResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactClusterResponse, _internal_metadata_));
  Error_descriptor_ = file->message_type(17);
  static const int Error_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, engine_not_found_),
  };
  Error_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error_descriptor_,
      Error::internal_default_instance(),
      Error_offsets_,
      -1,
      -1,
      -1,
      sizeof(Error),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_));
  Error_EngineNotFound_descriptor_ = Error_descriptor_->nested_type(0);
  static const int Error_EngineNotFound_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error_EngineNotFound, uuid_),
  };
  Error_EngineNotFound_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error_EngineNotFound_descriptor_,
      Error_EngineNotFound::internal_default_instance(),
      Error_EngineNotFound_offsets_,
      -1,
      -1,
      -1,
      sizeof(Error_EngineNotFound),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error_EngineNotFound, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_import_5fkvpb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SwitchModeRequest_descriptor_, SwitchModeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SwitchModeResponse_descriptor_, SwitchModeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenEngineRequest_descriptor_, OpenEngineRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenEngineResponse_descriptor_, OpenEngineResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteHead_descriptor_, WriteHead::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Mutation_descriptor_, Mutation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteBatch_descriptor_, WriteBatch::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteEngineRequest_descriptor_, WriteEngineRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteEngineResponse_descriptor_, WriteEngineResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CloseEngineRequest_descriptor_, CloseEngineRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CloseEngineResponse_descriptor_, CloseEngineResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImportEngineRequest_descriptor_, ImportEngineRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImportEngineResponse_descriptor_, ImportEngineResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CleanupEngineRequest_descriptor_, CleanupEngineRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CleanupEngineResponse_descriptor_, CleanupEngineResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactClusterRequest_descriptor_, CompactClusterRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactClusterResponse_descriptor_, CompactClusterResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error_descriptor_, Error::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error_EngineNotFound_descriptor_, Error_EngineNotFound::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_import_5fkvpb_2eproto() {
  SwitchModeRequest_default_instance_.Shutdown();
  delete SwitchModeRequest_reflection_;
  SwitchModeResponse_default_instance_.Shutdown();
  delete SwitchModeResponse_reflection_;
  OpenEngineRequest_default_instance_.Shutdown();
  delete OpenEngineRequest_reflection_;
  OpenEngineResponse_default_instance_.Shutdown();
  delete OpenEngineResponse_reflection_;
  WriteHead_default_instance_.Shutdown();
  delete WriteHead_reflection_;
  Mutation_default_instance_.Shutdown();
  delete Mutation_reflection_;
  WriteBatch_default_instance_.Shutdown();
  delete WriteBatch_reflection_;
  WriteEngineRequest_default_instance_.Shutdown();
  delete WriteEngineRequest_default_oneof_instance_;
  delete WriteEngineRequest_reflection_;
  WriteEngineResponse_default_instance_.Shutdown();
  delete WriteEngineResponse_reflection_;
  CloseEngineRequest_default_instance_.Shutdown();
  delete CloseEngineRequest_reflection_;
  CloseEngineResponse_default_instance_.Shutdown();
  delete CloseEngineResponse_reflection_;
  ImportEngineRequest_default_instance_.Shutdown();
  delete ImportEngineRequest_reflection_;
  ImportEngineResponse_default_instance_.Shutdown();
  delete ImportEngineResponse_reflection_;
  CleanupEngineRequest_default_instance_.Shutdown();
  delete CleanupEngineRequest_reflection_;
  CleanupEngineResponse_default_instance_.Shutdown();
  delete CleanupEngineResponse_reflection_;
  CompactClusterRequest_default_instance_.Shutdown();
  delete CompactClusterRequest_reflection_;
  CompactClusterResponse_default_instance_.Shutdown();
  delete CompactClusterResponse_reflection_;
  Error_default_instance_.Shutdown();
  delete Error_reflection_;
  Error_EngineNotFound_default_instance_.Shutdown();
  delete Error_EngineNotFound_reflection_;
}

void protobuf_InitDefaults_import_5fkvpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::import_sstpb::protobuf_InitDefaults_import_5fsstpb_2eproto();
  ::gogoproto::protobuf_InitDefaults_gogoproto_2fgogo_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  SwitchModeRequest_default_instance_.DefaultConstruct();
  SwitchModeResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OpenEngineRequest_default_instance_.DefaultConstruct();
  OpenEngineResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WriteHead_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Mutation_default_instance_.DefaultConstruct();
  WriteBatch_default_instance_.DefaultConstruct();
  WriteEngineRequest_default_instance_.DefaultConstruct();
  WriteEngineRequest_default_oneof_instance_ = new WriteEngineRequestOneofInstance();
  WriteEngineResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CloseEngineRequest_default_instance_.DefaultConstruct();
  CloseEngineResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ImportEngineRequest_default_instance_.DefaultConstruct();
  ImportEngineResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CleanupEngineRequest_default_instance_.DefaultConstruct();
  CleanupEngineResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CompactClusterRequest_default_instance_.DefaultConstruct();
  CompactClusterResponse_default_instance_.DefaultConstruct();
  Error_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Error_EngineNotFound_default_instance_.DefaultConstruct();
  SwitchModeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SwitchModeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpenEngineRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  OpenEngineResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteHead_default_instance_.get_mutable()->InitAsDefaultInstance();
  Mutation_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteBatch_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteEngineRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteEngineResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CloseEngineRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CloseEngineResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ImportEngineRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ImportEngineResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CleanupEngineRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CleanupEngineResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CompactClusterRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CompactClusterResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  Error_default_instance_.get_mutable()->InitAsDefaultInstance();
  Error_EngineNotFound_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_import_5fkvpb_2eproto_once_);
void protobuf_InitDefaults_import_5fkvpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_import_5fkvpb_2eproto_once_,
                 &protobuf_InitDefaults_import_5fkvpb_2eproto_impl);
}
void protobuf_AddDesc_import_5fkvpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_import_5fkvpb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021import_kvpb.proto\022\013import_kvpb\032\022import"
    "_sstpb.proto\032\024gogoproto/gogo.proto\"V\n\021Sw"
    "itchModeRequest\022\017\n\007pd_addr\030\001 \001(\t\0220\n\007requ"
    "est\030\002 \001(\0132\037.import_sstpb.SwitchModeReque"
    "st\"\024\n\022SwitchModeResponse\"!\n\021OpenEngineRe"
    "quest\022\014\n\004uuid\030\001 \001(\014\"\024\n\022OpenEngineRespons"
    "e\"\031\n\tWriteHead\022\014\n\004uuid\030\001 \001(\014\"[\n\010Mutation"
    "\022$\n\002op\030\001 \001(\0162\030.import_kvpb.Mutation.OP\022\013"
    "\n\003key\030\002 \001(\014\022\r\n\005value\030\003 \001(\014\"\r\n\002OP\022\007\n\003Put\020"
    "\000\"I\n\nWriteBatch\022\021\n\tcommit_ts\030\001 \001(\004\022(\n\tmu"
    "tations\030\002 \003(\0132\025.import_kvpb.Mutation\"o\n\022"
    "WriteEngineRequest\022&\n\004head\030\001 \001(\0132\026.impor"
    "t_kvpb.WriteHeadH\000\022(\n\005batch\030\002 \001(\0132\027.impo"
    "rt_kvpb.WriteBatchH\000B\007\n\005chunk\"8\n\023WriteEn"
    "gineResponse\022!\n\005error\030\001 \001(\0132\022.import_kvp"
    "b.Error\"\"\n\022CloseEngineRequest\022\014\n\004uuid\030\001 "
    "\001(\014\"8\n\023CloseEngineResponse\022!\n\005error\030\001 \001("
    "\0132\022.import_kvpb.Error\"4\n\023ImportEngineReq"
    "uest\022\014\n\004uuid\030\001 \001(\014\022\017\n\007pd_addr\030\002 \001(\t\"\026\n\024I"
    "mportEngineResponse\"$\n\024CleanupEngineRequ"
    "est\022\014\n\004uuid\030\001 \001(\014\"\027\n\025CleanupEngineRespon"
    "se\"W\n\025CompactClusterRequest\022\017\n\007pd_addr\030\001"
    " \001(\t\022-\n\007request\030\002 \001(\0132\034.import_sstpb.Com"
    "pactRequest\"\030\n\026CompactClusterResponse\"d\n"
    "\005Error\022;\n\020engine_not_found\030\001 \001(\0132!.impor"
    "t_kvpb.Error.EngineNotFound\032\036\n\016EngineNot"
    "Found\022\014\n\004uuid\030\001 \001(\0142\344\004\n\010ImportKV\022O\n\nSwit"
    "chMode\022\036.import_kvpb.SwitchModeRequest\032\037"
    ".import_kvpb.SwitchModeResponse\"\000\022O\n\nOpe"
    "nEngine\022\036.import_kvpb.OpenEngineRequest\032"
    "\037.import_kvpb.OpenEngineResponse\"\000\022T\n\013Wr"
    "iteEngine\022\037.import_kvpb.WriteEngineReque"
    "st\032 .import_kvpb.WriteEngineResponse\"\000(\001"
    "\022R\n\013CloseEngine\022\037.import_kvpb.CloseEngin"
    "eRequest\032 .import_kvpb.CloseEngineRespon"
    "se\"\000\022U\n\014ImportEngine\022 .import_kvpb.Impor"
    "tEngineRequest\032!.import_kvpb.ImportEngin"
    "eResponse\"\000\022X\n\rCleanupEngine\022!.import_kv"
    "pb.CleanupEngineRequest\032\".import_kvpb.Cl"
    "eanupEngineResponse\"\000\022[\n\016CompactCluster\022"
    "\".import_kvpb.CompactClusterRequest\032#.im"
    "port_kvpb.CompactClusterResponse\"\000B&\n\030co"
    "m.pingcap.tikv.kvproto\340\342\036\001\310\342\036\001\320\342\036\001b\006prot"
    "o3", 1722);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "import_kvpb.proto", &protobuf_RegisterTypes);
  ::import_sstpb::protobuf_AddDesc_import_5fsstpb_2eproto();
  ::gogoproto::protobuf_AddDesc_gogoproto_2fgogo_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_import_5fkvpb_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_import_5fkvpb_2eproto_once_);
void protobuf_AddDesc_import_5fkvpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_import_5fkvpb_2eproto_once_,
                 &protobuf_AddDesc_import_5fkvpb_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_import_5fkvpb_2eproto {
  StaticDescriptorInitializer_import_5fkvpb_2eproto() {
    protobuf_AddDesc_import_5fkvpb_2eproto();
  }
} static_descriptor_initializer_import_5fkvpb_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchModeRequest::kPdAddrFieldNumber;
const int SwitchModeRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeRequest::SwitchModeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.SwitchModeRequest)
}

void SwitchModeRequest::InitAsDefaultInstance() {
  request_ = const_cast< ::import_sstpb::SwitchModeRequest*>(
      ::import_sstpb::SwitchModeRequest::internal_default_instance());
}

SwitchModeRequest::SwitchModeRequest(const SwitchModeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.SwitchModeRequest)
}

void SwitchModeRequest::SharedCtor() {
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_ = NULL;
  _cached_size_ = 0;
}

SwitchModeRequest::~SwitchModeRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.SwitchModeRequest)
  SharedDtor();
}

void SwitchModeRequest::SharedDtor() {
  pd_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SwitchModeRequest_default_instance_.get()) {
    delete request_;
  }
}

void SwitchModeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchModeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchModeRequest_descriptor_;
}

const SwitchModeRequest& SwitchModeRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SwitchModeRequest> SwitchModeRequest_default_instance_;

SwitchModeRequest* SwitchModeRequest::New(::google::protobuf::Arena* arena) const {
  SwitchModeRequest* n = new SwitchModeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.SwitchModeRequest)
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}

bool SwitchModeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.SwitchModeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pd_addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pd_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pd_addr().data(), this->pd_addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_kvpb.SwitchModeRequest.pd_addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // optional .import_sstpb.SwitchModeRequest request = 2;
      case 2: {
        if (tag == 18) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.SwitchModeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.SwitchModeRequest)
  return false;
#undef DO_
}

void SwitchModeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.SwitchModeRequest)
  // optional string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), this->pd_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.SwitchModeRequest.pd_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pd_addr(), output);
  }

  // optional .import_sstpb.SwitchModeRequest request = 2;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->request_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.SwitchModeRequest)
}

::google::protobuf::uint8* SwitchModeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.SwitchModeRequest)
  // optional string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), this->pd_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.SwitchModeRequest.pd_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pd_addr(), target);
  }

  // optional .import_sstpb.SwitchModeRequest request = 2;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->request_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.SwitchModeRequest)
  return target;
}

size_t SwitchModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.SwitchModeRequest)
  size_t total_size = 0;

  // optional string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pd_addr());
  }

  // optional .import_sstpb.SwitchModeRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchModeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.SwitchModeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SwitchModeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.SwitchModeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.SwitchModeRequest)
    UnsafeMergeFrom(*source);
  }
}

void SwitchModeRequest::MergeFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.SwitchModeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SwitchModeRequest::UnsafeMergeFrom(const SwitchModeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.pd_addr().size() > 0) {

    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  if (from.has_request()) {
    mutable_request()->::import_sstpb::SwitchModeRequest::MergeFrom(from.request());
  }
}

void SwitchModeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeRequest::CopyFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SwitchModeRequest::IsInitialized() const {

  return true;
}

void SwitchModeRequest::Swap(SwitchModeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeRequest::InternalSwap(SwitchModeRequest* other) {
  pd_addr_.Swap(&other->pd_addr_);
  std::swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchModeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchModeRequest_descriptor_;
  metadata.reflection = SwitchModeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchModeRequest

// optional string pd_addr = 1;
void SwitchModeRequest::clear_pd_addr() {
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SwitchModeRequest::pd_addr() const {
  // @@protoc_insertion_point(field_get:import_kvpb.SwitchModeRequest.pd_addr)
  return pd_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SwitchModeRequest::set_pd_addr(const ::std::string& value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.SwitchModeRequest.pd_addr)
}
void SwitchModeRequest::set_pd_addr(const char* value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.SwitchModeRequest.pd_addr)
}
void SwitchModeRequest::set_pd_addr(const char* value, size_t size) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.SwitchModeRequest.pd_addr)
}
::std::string* SwitchModeRequest::mutable_pd_addr() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.SwitchModeRequest.pd_addr)
  return pd_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SwitchModeRequest::release_pd_addr() {
  // @@protoc_insertion_point(field_release:import_kvpb.SwitchModeRequest.pd_addr)
  
  return pd_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SwitchModeRequest::set_allocated_pd_addr(::std::string* pd_addr) {
  if (pd_addr != NULL) {
    
  } else {
    
  }
  pd_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pd_addr);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.SwitchModeRequest.pd_addr)
}

// optional .import_sstpb.SwitchModeRequest request = 2;
bool SwitchModeRequest::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
void SwitchModeRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
const ::import_sstpb::SwitchModeRequest& SwitchModeRequest::request() const {
  // @@protoc_insertion_point(field_get:import_kvpb.SwitchModeRequest.request)
  return request_ != NULL ? *request_
                         : *::import_sstpb::SwitchModeRequest::internal_default_instance();
}
::import_sstpb::SwitchModeRequest* SwitchModeRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::import_sstpb::SwitchModeRequest;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.SwitchModeRequest.request)
  return request_;
}
::import_sstpb::SwitchModeRequest* SwitchModeRequest::release_request() {
  // @@protoc_insertion_point(field_release:import_kvpb.SwitchModeRequest.request)
  
  ::import_sstpb::SwitchModeRequest* temp = request_;
  request_ = NULL;
  return temp;
}
void SwitchModeRequest::set_allocated_request(::import_sstpb::SwitchModeRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.SwitchModeRequest.request)
}

inline const SwitchModeRequest* SwitchModeRequest::internal_default_instance() {
  return &SwitchModeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeResponse::SwitchModeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.SwitchModeResponse)
}

void SwitchModeResponse::InitAsDefaultInstance() {
}

SwitchModeResponse::SwitchModeResponse(const SwitchModeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.SwitchModeResponse)
}

void SwitchModeResponse::SharedCtor() {
  _cached_size_ = 0;
}

SwitchModeResponse::~SwitchModeResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.SwitchModeResponse)
  SharedDtor();
}

void SwitchModeResponse::SharedDtor() {
}

void SwitchModeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchModeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchModeResponse_descriptor_;
}

const SwitchModeResponse& SwitchModeResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SwitchModeResponse> SwitchModeResponse_default_instance_;

SwitchModeResponse* SwitchModeResponse::New(::google::protobuf::Arena* arena) const {
  SwitchModeResponse* n = new SwitchModeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.SwitchModeResponse)
}

bool SwitchModeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.SwitchModeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.SwitchModeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.SwitchModeResponse)
  return false;
#undef DO_
}

void SwitchModeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.SwitchModeResponse)
  // @@protoc_insertion_point(serialize_end:import_kvpb.SwitchModeResponse)
}

::google::protobuf::uint8* SwitchModeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.SwitchModeResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.SwitchModeResponse)
  return target;
}

size_t SwitchModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.SwitchModeResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchModeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.SwitchModeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SwitchModeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.SwitchModeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.SwitchModeResponse)
    UnsafeMergeFrom(*source);
  }
}

void SwitchModeResponse::MergeFrom(const SwitchModeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.SwitchModeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SwitchModeResponse::UnsafeMergeFrom(const SwitchModeResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void SwitchModeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.SwitchModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeResponse::CopyFrom(const SwitchModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.SwitchModeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SwitchModeResponse::IsInitialized() const {

  return true;
}

void SwitchModeResponse::Swap(SwitchModeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeResponse::InternalSwap(SwitchModeResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchModeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchModeResponse_descriptor_;
  metadata.reflection = SwitchModeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchModeResponse

inline const SwitchModeResponse* SwitchModeResponse::internal_default_instance() {
  return &SwitchModeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenEngineRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenEngineRequest::OpenEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.OpenEngineRequest)
}

void OpenEngineRequest::InitAsDefaultInstance() {
}

OpenEngineRequest::OpenEngineRequest(const OpenEngineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.OpenEngineRequest)
}

void OpenEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OpenEngineRequest::~OpenEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.OpenEngineRequest)
  SharedDtor();
}

void OpenEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenEngineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenEngineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenEngineRequest_descriptor_;
}

const OpenEngineRequest& OpenEngineRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpenEngineRequest> OpenEngineRequest_default_instance_;

OpenEngineRequest* OpenEngineRequest::New(::google::protobuf::Arena* arena) const {
  OpenEngineRequest* n = new OpenEngineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.OpenEngineRequest)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OpenEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.OpenEngineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.OpenEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.OpenEngineRequest)
  return false;
#undef DO_
}

void OpenEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.OpenEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.OpenEngineRequest)
}

::google::protobuf::uint8* OpenEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.OpenEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.OpenEngineRequest)
  return target;
}

size_t OpenEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.OpenEngineRequest)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.OpenEngineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpenEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.OpenEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.OpenEngineRequest)
    UnsafeMergeFrom(*source);
  }
}

void OpenEngineRequest::MergeFrom(const OpenEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.OpenEngineRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpenEngineRequest::UnsafeMergeFrom(const OpenEngineRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void OpenEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.OpenEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenEngineRequest::CopyFrom(const OpenEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.OpenEngineRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpenEngineRequest::IsInitialized() const {

  return true;
}

void OpenEngineRequest::Swap(OpenEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenEngineRequest::InternalSwap(OpenEngineRequest* other) {
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenEngineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenEngineRequest_descriptor_;
  metadata.reflection = OpenEngineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenEngineRequest

// optional bytes uuid = 1;
void OpenEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpenEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.OpenEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.OpenEngineRequest.uuid)
}
void OpenEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.OpenEngineRequest.uuid)
}
void OpenEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.OpenEngineRequest.uuid)
}
::std::string* OpenEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.OpenEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.OpenEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.OpenEngineRequest.uuid)
}

inline const OpenEngineRequest* OpenEngineRequest::internal_default_instance() {
  return &OpenEngineRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenEngineResponse::OpenEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.OpenEngineResponse)
}

void OpenEngineResponse::InitAsDefaultInstance() {
}

OpenEngineResponse::OpenEngineResponse(const OpenEngineResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.OpenEngineResponse)
}

void OpenEngineResponse::SharedCtor() {
  _cached_size_ = 0;
}

OpenEngineResponse::~OpenEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.OpenEngineResponse)
  SharedDtor();
}

void OpenEngineResponse::SharedDtor() {
}

void OpenEngineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenEngineResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenEngineResponse_descriptor_;
}

const OpenEngineResponse& OpenEngineResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OpenEngineResponse> OpenEngineResponse_default_instance_;

OpenEngineResponse* OpenEngineResponse::New(::google::protobuf::Arena* arena) const {
  OpenEngineResponse* n = new OpenEngineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.OpenEngineResponse)
}

bool OpenEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.OpenEngineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.OpenEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.OpenEngineResponse)
  return false;
#undef DO_
}

void OpenEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.OpenEngineResponse)
  // @@protoc_insertion_point(serialize_end:import_kvpb.OpenEngineResponse)
}

::google::protobuf::uint8* OpenEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.OpenEngineResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.OpenEngineResponse)
  return target;
}

size_t OpenEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.OpenEngineResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.OpenEngineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OpenEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.OpenEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.OpenEngineResponse)
    UnsafeMergeFrom(*source);
  }
}

void OpenEngineResponse::MergeFrom(const OpenEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.OpenEngineResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OpenEngineResponse::UnsafeMergeFrom(const OpenEngineResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void OpenEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.OpenEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenEngineResponse::CopyFrom(const OpenEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.OpenEngineResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OpenEngineResponse::IsInitialized() const {

  return true;
}

void OpenEngineResponse::Swap(OpenEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenEngineResponse::InternalSwap(OpenEngineResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenEngineResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenEngineResponse_descriptor_;
  metadata.reflection = OpenEngineResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenEngineResponse

inline const OpenEngineResponse* OpenEngineResponse::internal_default_instance() {
  return &OpenEngineResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteHead::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteHead::WriteHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteHead)
}

void WriteHead::InitAsDefaultInstance() {
}

WriteHead::WriteHead(const WriteHead& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteHead)
}

void WriteHead::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WriteHead::~WriteHead() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteHead)
  SharedDtor();
}

void WriteHead::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteHead_descriptor_;
}

const WriteHead& WriteHead::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteHead> WriteHead_default_instance_;

WriteHead* WriteHead::New(::google::protobuf::Arena* arena) const {
  WriteHead* n = new WriteHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteHead::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteHead)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool WriteHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteHead)
  return false;
#undef DO_
}

void WriteHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteHead)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteHead)
}

::google::protobuf::uint8* WriteHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteHead)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteHead)
  return target;
}

size_t WriteHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteHead)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteHead)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteHead)
    UnsafeMergeFrom(*source);
  }
}

void WriteHead::MergeFrom(const WriteHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteHead)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteHead::UnsafeMergeFrom(const WriteHead& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void WriteHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteHead::CopyFrom(const WriteHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteHead)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteHead::IsInitialized() const {

  return true;
}

void WriteHead::Swap(WriteHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteHead::InternalSwap(WriteHead* other) {
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteHead_descriptor_;
  metadata.reflection = WriteHead_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteHead

// optional bytes uuid = 1;
void WriteHead::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteHead::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteHead.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteHead::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.WriteHead.uuid)
}
void WriteHead::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.WriteHead.uuid)
}
void WriteHead::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.WriteHead.uuid)
}
::std::string* WriteHead::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteHead.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteHead::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteHead.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteHead::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteHead.uuid)
}

inline const WriteHead* WriteHead::internal_default_instance() {
  return &WriteHead_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Mutation_OP_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mutation_OP_descriptor_;
}
bool Mutation_OP_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mutation_OP Mutation::Put;
const Mutation_OP Mutation::OP_MIN;
const Mutation_OP Mutation::OP_MAX;
const int Mutation::OP_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kOpFieldNumber;
const int Mutation::kKeyFieldNumber;
const int Mutation::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Mutation)
}

void Mutation::InitAsDefaultInstance() {
}

Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Mutation)
}

void Mutation::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  _cached_size_ = 0;
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:import_kvpb.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mutation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mutation_descriptor_;
}

const Mutation& Mutation::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Mutation> Mutation_default_instance_;

Mutation* Mutation::New(::google::protobuf::Arena* arena) const {
  Mutation* n = new Mutation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Mutation)
  op_ = 0;
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Mutation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_kvpb.Mutation.OP op = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::import_kvpb::Mutation_OP >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_key;
        break;
      }

      // optional bytes key = 2;
      case 2: {
        if (tag == 18) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // optional bytes value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Mutation)
  // optional .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // optional bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Mutation)
  // optional .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // optional bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Mutation)
  size_t total_size = 0;

  // optional .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // optional bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // optional bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Mutation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Mutation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Mutation)
    UnsafeMergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Mutation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Mutation::UnsafeMergeFrom(const Mutation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Mutation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Mutation::IsInitialized() const {

  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  std::swap(op_, other->op_);
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mutation_descriptor_;
  metadata.reflection = Mutation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mutation

// optional .import_kvpb.Mutation.OP op = 1;
void Mutation::clear_op() {
  op_ = 0;
}
::import_kvpb::Mutation_OP Mutation::op() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Mutation.op)
  return static_cast< ::import_kvpb::Mutation_OP >(op_);
}
void Mutation::set_op(::import_kvpb::Mutation_OP value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:import_kvpb.Mutation.op)
}

// optional bytes key = 2;
void Mutation::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Mutation::key() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Mutation.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Mutation::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.Mutation.key)
}
void Mutation::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.Mutation.key)
}
void Mutation::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.Mutation.key)
}
::std::string* Mutation::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.Mutation.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Mutation::release_key() {
  // @@protoc_insertion_point(field_release:import_kvpb.Mutation.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Mutation::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Mutation.key)
}

// optional bytes value = 3;
void Mutation::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Mutation::value() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Mutation.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Mutation::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.Mutation.value)
}
void Mutation::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.Mutation.value)
}
void Mutation::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.Mutation.value)
}
::std::string* Mutation::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.Mutation.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Mutation::release_value() {
  // @@protoc_insertion_point(field_release:import_kvpb.Mutation.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Mutation::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Mutation.value)
}

inline const Mutation* Mutation::internal_default_instance() {
  return &Mutation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteBatch::kCommitTsFieldNumber;
const int WriteBatch::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteBatch::WriteBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteBatch)
}

void WriteBatch::InitAsDefaultInstance() {
}

WriteBatch::WriteBatch(const WriteBatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteBatch)
}

void WriteBatch::SharedCtor() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

WriteBatch::~WriteBatch() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteBatch)
  SharedDtor();
}

void WriteBatch::SharedDtor() {
}

void WriteBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteBatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteBatch_descriptor_;
}

const WriteBatch& WriteBatch::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteBatch> WriteBatch_default_instance_;

WriteBatch* WriteBatch::New(::google::protobuf::Arena* arena) const {
  WriteBatch* n = new WriteBatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteBatch)
  commit_ts_ = GOOGLE_ULONGLONG(0);
  mutations_.Clear();
}

bool WriteBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 commit_ts = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_ts_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mutations;
        break;
      }

      // repeated .import_kvpb.Mutation mutations = 2;
      case 2: {
        if (tag == 18) {
         parse_mutations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_mutations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_mutations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteBatch)
  return false;
#undef DO_
}

void WriteBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteBatch)
  // optional uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->commit_ts(), output);
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  for (unsigned int i = 0, n = this->mutations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mutations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteBatch)
}

::google::protobuf::uint8* WriteBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteBatch)
  // optional uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->commit_ts(), target);
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  for (unsigned int i = 0, n = this->mutations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->mutations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteBatch)
  return target;
}

size_t WriteBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteBatch)
  size_t total_size = 0;

  // optional uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_ts());
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  {
    unsigned int count = this->mutations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mutations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteBatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteBatch)
    UnsafeMergeFrom(*source);
  }
}

void WriteBatch::MergeFrom(const WriteBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteBatch)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteBatch::UnsafeMergeFrom(const WriteBatch& from) {
  GOOGLE_DCHECK(&from != this);
  mutations_.MergeFrom(from.mutations_);
  if (from.commit_ts() != 0) {
    set_commit_ts(from.commit_ts());
  }
}

void WriteBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteBatch::CopyFrom(const WriteBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteBatch)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteBatch::IsInitialized() const {

  return true;
}

void WriteBatch::Swap(WriteBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteBatch::InternalSwap(WriteBatch* other) {
  std::swap(commit_ts_, other->commit_ts_);
  mutations_.UnsafeArenaSwap(&other->mutations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteBatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteBatch_descriptor_;
  metadata.reflection = WriteBatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteBatch

// optional uint64 commit_ts = 1;
void WriteBatch::clear_commit_ts() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 WriteBatch::commit_ts() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteBatch.commit_ts)
  return commit_ts_;
}
void WriteBatch::set_commit_ts(::google::protobuf::uint64 value) {
  
  commit_ts_ = value;
  // @@protoc_insertion_point(field_set:import_kvpb.WriteBatch.commit_ts)
}

// repeated .import_kvpb.Mutation mutations = 2;
int WriteBatch::mutations_size() const {
  return mutations_.size();
}
void WriteBatch::clear_mutations() {
  mutations_.Clear();
}
const ::import_kvpb::Mutation& WriteBatch::mutations(int index) const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteBatch.mutations)
  return mutations_.Get(index);
}
::import_kvpb::Mutation* WriteBatch::mutable_mutations(int index) {
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteBatch.mutations)
  return mutations_.Mutable(index);
}
::import_kvpb::Mutation* WriteBatch::add_mutations() {
  // @@protoc_insertion_point(field_add:import_kvpb.WriteBatch.mutations)
  return mutations_.Add();
}
::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation >*
WriteBatch::mutable_mutations() {
  // @@protoc_insertion_point(field_mutable_list:import_kvpb.WriteBatch.mutations)
  return &mutations_;
}
const ::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation >&
WriteBatch::mutations() const {
  // @@protoc_insertion_point(field_list:import_kvpb.WriteBatch.mutations)
  return mutations_;
}

inline const WriteBatch* WriteBatch::internal_default_instance() {
  return &WriteBatch_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteEngineRequest::kHeadFieldNumber;
const int WriteEngineRequest::kBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteEngineRequest::WriteEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteEngineRequest)
}

void WriteEngineRequest::InitAsDefaultInstance() {
  WriteEngineRequest_default_oneof_instance_->head_ = const_cast< ::import_kvpb::WriteHead*>(
      ::import_kvpb::WriteHead::internal_default_instance());
  WriteEngineRequest_default_oneof_instance_->batch_ = const_cast< ::import_kvpb::WriteBatch*>(
      ::import_kvpb::WriteBatch::internal_default_instance());
}

WriteEngineRequest::WriteEngineRequest(const WriteEngineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteEngineRequest)
}

void WriteEngineRequest::SharedCtor() {
  clear_has_chunk();
  _cached_size_ = 0;
}

WriteEngineRequest::~WriteEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteEngineRequest)
  SharedDtor();
}

void WriteEngineRequest::SharedDtor() {
  if (has_chunk()) {
    clear_chunk();
  }
}

void WriteEngineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteEngineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteEngineRequest_descriptor_;
}

const WriteEngineRequest& WriteEngineRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteEngineRequest> WriteEngineRequest_default_instance_;

WriteEngineRequest* WriteEngineRequest::New(::google::protobuf::Arena* arena) const {
  WriteEngineRequest* n = new WriteEngineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteEngineRequest::clear_chunk() {
// @@protoc_insertion_point(one_of_clear_start:import_kvpb.WriteEngineRequest)
  switch (chunk_case()) {
    case kHead: {
      delete chunk_.head_;
      break;
    }
    case kBatch: {
      delete chunk_.batch_;
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHUNK_NOT_SET;
}


void WriteEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteEngineRequest)
  clear_chunk();
}

bool WriteEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteEngineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_kvpb.WriteHead head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        goto after_batch;
        break;
      }

      // optional .import_kvpb.WriteBatch batch = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batch()));
        } else {
          goto handle_unusual;
        }
       after_batch:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteEngineRequest)
  return false;
#undef DO_
}

void WriteEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteEngineRequest)
  // optional .import_kvpb.WriteHead head = 1;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *chunk_.head_, output);
  }

  // optional .import_kvpb.WriteBatch batch = 2;
  if (has_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *chunk_.batch_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteEngineRequest)
}

::google::protobuf::uint8* WriteEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteEngineRequest)
  // optional .import_kvpb.WriteHead head = 1;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *chunk_.head_, false, target);
  }

  // optional .import_kvpb.WriteBatch batch = 2;
  if (has_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *chunk_.batch_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteEngineRequest)
  return target;
}

size_t WriteEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteEngineRequest)
  size_t total_size = 0;

  switch (chunk_case()) {
    // optional .import_kvpb.WriteHead head = 1;
    case kHead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *chunk_.head_);
      break;
    }
    // optional .import_kvpb.WriteBatch batch = 2;
    case kBatch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *chunk_.batch_);
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteEngineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteEngineRequest)
    UnsafeMergeFrom(*source);
  }
}

void WriteEngineRequest::MergeFrom(const WriteEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteEngineRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteEngineRequest::UnsafeMergeFrom(const WriteEngineRequest& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.chunk_case()) {
    case kHead: {
      mutable_head()->::import_kvpb::WriteHead::MergeFrom(from.head());
      break;
    }
    case kBatch: {
      mutable_batch()->::import_kvpb::WriteBatch::MergeFrom(from.batch());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
}

void WriteEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteEngineRequest::CopyFrom(const WriteEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteEngineRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteEngineRequest::IsInitialized() const {

  return true;
}

void WriteEngineRequest::Swap(WriteEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteEngineRequest::InternalSwap(WriteEngineRequest* other) {
  std::swap(chunk_, other->chunk_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteEngineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteEngineRequest_descriptor_;
  metadata.reflection = WriteEngineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteEngineRequest

// optional .import_kvpb.WriteHead head = 1;
bool WriteEngineRequest::has_head() const {
  return chunk_case() == kHead;
}
void WriteEngineRequest::set_has_head() {
  _oneof_case_[0] = kHead;
}
void WriteEngineRequest::clear_head() {
  if (has_head()) {
    delete chunk_.head_;
    clear_has_chunk();
  }
}
 const ::import_kvpb::WriteHead& WriteEngineRequest::head() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteEngineRequest.head)
  return has_head()
      ? *chunk_.head_
      : ::import_kvpb::WriteHead::default_instance();
}
::import_kvpb::WriteHead* WriteEngineRequest::mutable_head() {
  if (!has_head()) {
    clear_chunk();
    set_has_head();
    chunk_.head_ = new ::import_kvpb::WriteHead;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteEngineRequest.head)
  return chunk_.head_;
}
::import_kvpb::WriteHead* WriteEngineRequest::release_head() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteEngineRequest.head)
  if (has_head()) {
    clear_has_chunk();
    ::import_kvpb::WriteHead* temp = chunk_.head_;
    chunk_.head_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void WriteEngineRequest::set_allocated_head(::import_kvpb::WriteHead* head) {
  clear_chunk();
  if (head) {
    set_has_head();
    chunk_.head_ = head;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineRequest.head)
}

// optional .import_kvpb.WriteBatch batch = 2;
bool WriteEngineRequest::has_batch() const {
  return chunk_case() == kBatch;
}
void WriteEngineRequest::set_has_batch() {
  _oneof_case_[0] = kBatch;
}
void WriteEngineRequest::clear_batch() {
  if (has_batch()) {
    delete chunk_.batch_;
    clear_has_chunk();
  }
}
 const ::import_kvpb::WriteBatch& WriteEngineRequest::batch() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteEngineRequest.batch)
  return has_batch()
      ? *chunk_.batch_
      : ::import_kvpb::WriteBatch::default_instance();
}
::import_kvpb::WriteBatch* WriteEngineRequest::mutable_batch() {
  if (!has_batch()) {
    clear_chunk();
    set_has_batch();
    chunk_.batch_ = new ::import_kvpb::WriteBatch;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteEngineRequest.batch)
  return chunk_.batch_;
}
::import_kvpb::WriteBatch* WriteEngineRequest::release_batch() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteEngineRequest.batch)
  if (has_batch()) {
    clear_has_chunk();
    ::import_kvpb::WriteBatch* temp = chunk_.batch_;
    chunk_.batch_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void WriteEngineRequest::set_allocated_batch(::import_kvpb::WriteBatch* batch) {
  clear_chunk();
  if (batch) {
    set_has_batch();
    chunk_.batch_ = batch;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineRequest.batch)
}

bool WriteEngineRequest::has_chunk() const {
  return chunk_case() != CHUNK_NOT_SET;
}
void WriteEngineRequest::clear_has_chunk() {
  _oneof_case_[0] = CHUNK_NOT_SET;
}
WriteEngineRequest::ChunkCase WriteEngineRequest::chunk_case() const {
  return WriteEngineRequest::ChunkCase(_oneof_case_[0]);
}
inline const WriteEngineRequest* WriteEngineRequest::internal_default_instance() {
  return &WriteEngineRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteEngineResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteEngineResponse::WriteEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteEngineResponse)
}

void WriteEngineResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::import_kvpb::Error*>(
      ::import_kvpb::Error::internal_default_instance());
}

WriteEngineResponse::WriteEngineResponse(const WriteEngineResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteEngineResponse)
}

void WriteEngineResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

WriteEngineResponse::~WriteEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteEngineResponse)
  SharedDtor();
}

void WriteEngineResponse::SharedDtor() {
  if (this != &WriteEngineResponse_default_instance_.get()) {
    delete error_;
  }
}

void WriteEngineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteEngineResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteEngineResponse_descriptor_;
}

const WriteEngineResponse& WriteEngineResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteEngineResponse> WriteEngineResponse_default_instance_;

WriteEngineResponse* WriteEngineResponse::New(::google::protobuf::Arena* arena) const {
  WriteEngineResponse* n = new WriteEngineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteEngineResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool WriteEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteEngineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_kvpb.Error error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteEngineResponse)
  return false;
#undef DO_
}

void WriteEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteEngineResponse)
  // optional .import_kvpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteEngineResponse)
}

::google::protobuf::uint8* WriteEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteEngineResponse)
  // optional .import_kvpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteEngineResponse)
  return target;
}

size_t WriteEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteEngineResponse)
  size_t total_size = 0;

  // optional .import_kvpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteEngineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteEngineResponse)
    UnsafeMergeFrom(*source);
  }
}

void WriteEngineResponse::MergeFrom(const WriteEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteEngineResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteEngineResponse::UnsafeMergeFrom(const WriteEngineResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_error()) {
    mutable_error()->::import_kvpb::Error::MergeFrom(from.error());
  }
}

void WriteEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteEngineResponse::CopyFrom(const WriteEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteEngineResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteEngineResponse::IsInitialized() const {

  return true;
}

void WriteEngineResponse::Swap(WriteEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteEngineResponse::InternalSwap(WriteEngineResponse* other) {
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteEngineResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteEngineResponse_descriptor_;
  metadata.reflection = WriteEngineResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteEngineResponse

// optional .import_kvpb.Error error = 1;
bool WriteEngineResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void WriteEngineResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::import_kvpb::Error& WriteEngineResponse::error() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteEngineResponse.error)
  return error_ != NULL ? *error_
                         : *::import_kvpb::Error::internal_default_instance();
}
::import_kvpb::Error* WriteEngineResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::import_kvpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteEngineResponse.error)
  return error_;
}
::import_kvpb::Error* WriteEngineResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteEngineResponse.error)
  
  ::import_kvpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
void WriteEngineResponse::set_allocated_error(::import_kvpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineResponse.error)
}

inline const WriteEngineResponse* WriteEngineResponse::internal_default_instance() {
  return &WriteEngineResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseEngineRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseEngineRequest::CloseEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CloseEngineRequest)
}

void CloseEngineRequest::InitAsDefaultInstance() {
}

CloseEngineRequest::CloseEngineRequest(const CloseEngineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CloseEngineRequest)
}

void CloseEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CloseEngineRequest::~CloseEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CloseEngineRequest)
  SharedDtor();
}

void CloseEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CloseEngineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseEngineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CloseEngineRequest_descriptor_;
}

const CloseEngineRequest& CloseEngineRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CloseEngineRequest> CloseEngineRequest_default_instance_;

CloseEngineRequest* CloseEngineRequest::New(::google::protobuf::Arena* arena) const {
  CloseEngineRequest* n = new CloseEngineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CloseEngineRequest)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CloseEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CloseEngineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CloseEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CloseEngineRequest)
  return false;
#undef DO_
}

void CloseEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CloseEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.CloseEngineRequest)
}

::google::protobuf::uint8* CloseEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CloseEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CloseEngineRequest)
  return target;
}

size_t CloseEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CloseEngineRequest)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CloseEngineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CloseEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CloseEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CloseEngineRequest)
    UnsafeMergeFrom(*source);
  }
}

void CloseEngineRequest::MergeFrom(const CloseEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CloseEngineRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CloseEngineRequest::UnsafeMergeFrom(const CloseEngineRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void CloseEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CloseEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseEngineRequest::CopyFrom(const CloseEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CloseEngineRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CloseEngineRequest::IsInitialized() const {

  return true;
}

void CloseEngineRequest::Swap(CloseEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseEngineRequest::InternalSwap(CloseEngineRequest* other) {
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseEngineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CloseEngineRequest_descriptor_;
  metadata.reflection = CloseEngineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseEngineRequest

// optional bytes uuid = 1;
void CloseEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CloseEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CloseEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloseEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.CloseEngineRequest.uuid)
}
void CloseEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.CloseEngineRequest.uuid)
}
void CloseEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.CloseEngineRequest.uuid)
}
::std::string* CloseEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.CloseEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CloseEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.CloseEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CloseEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CloseEngineRequest.uuid)
}

inline const CloseEngineRequest* CloseEngineRequest::internal_default_instance() {
  return &CloseEngineRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseEngineResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseEngineResponse::CloseEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CloseEngineResponse)
}

void CloseEngineResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::import_kvpb::Error*>(
      ::import_kvpb::Error::internal_default_instance());
}

CloseEngineResponse::CloseEngineResponse(const CloseEngineResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CloseEngineResponse)
}

void CloseEngineResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

CloseEngineResponse::~CloseEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CloseEngineResponse)
  SharedDtor();
}

void CloseEngineResponse::SharedDtor() {
  if (this != &CloseEngineResponse_default_instance_.get()) {
    delete error_;
  }
}

void CloseEngineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CloseEngineResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CloseEngineResponse_descriptor_;
}

const CloseEngineResponse& CloseEngineResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CloseEngineResponse> CloseEngineResponse_default_instance_;

CloseEngineResponse* CloseEngineResponse::New(::google::protobuf::Arena* arena) const {
  CloseEngineResponse* n = new CloseEngineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CloseEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CloseEngineResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool CloseEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CloseEngineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_kvpb.Error error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CloseEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CloseEngineResponse)
  return false;
#undef DO_
}

void CloseEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CloseEngineResponse)
  // optional .import_kvpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.CloseEngineResponse)
}

::google::protobuf::uint8* CloseEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CloseEngineResponse)
  // optional .import_kvpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CloseEngineResponse)
  return target;
}

size_t CloseEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CloseEngineResponse)
  size_t total_size = 0;

  // optional .import_kvpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CloseEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CloseEngineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CloseEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CloseEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CloseEngineResponse)
    UnsafeMergeFrom(*source);
  }
}

void CloseEngineResponse::MergeFrom(const CloseEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CloseEngineResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CloseEngineResponse::UnsafeMergeFrom(const CloseEngineResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_error()) {
    mutable_error()->::import_kvpb::Error::MergeFrom(from.error());
  }
}

void CloseEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CloseEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseEngineResponse::CopyFrom(const CloseEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CloseEngineResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CloseEngineResponse::IsInitialized() const {

  return true;
}

void CloseEngineResponse::Swap(CloseEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseEngineResponse::InternalSwap(CloseEngineResponse* other) {
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CloseEngineResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CloseEngineResponse_descriptor_;
  metadata.reflection = CloseEngineResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CloseEngineResponse

// optional .import_kvpb.Error error = 1;
bool CloseEngineResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void CloseEngineResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::import_kvpb::Error& CloseEngineResponse::error() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CloseEngineResponse.error)
  return error_ != NULL ? *error_
                         : *::import_kvpb::Error::internal_default_instance();
}
::import_kvpb::Error* CloseEngineResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::import_kvpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.CloseEngineResponse.error)
  return error_;
}
::import_kvpb::Error* CloseEngineResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_kvpb.CloseEngineResponse.error)
  
  ::import_kvpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
void CloseEngineResponse::set_allocated_error(::import_kvpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CloseEngineResponse.error)
}

inline const CloseEngineResponse* CloseEngineResponse::internal_default_instance() {
  return &CloseEngineResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportEngineRequest::kUuidFieldNumber;
const int ImportEngineRequest::kPdAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportEngineRequest::ImportEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.ImportEngineRequest)
}

void ImportEngineRequest::InitAsDefaultInstance() {
}

ImportEngineRequest::ImportEngineRequest(const ImportEngineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.ImportEngineRequest)
}

void ImportEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ImportEngineRequest::~ImportEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.ImportEngineRequest)
  SharedDtor();
}

void ImportEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pd_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImportEngineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImportEngineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImportEngineRequest_descriptor_;
}

const ImportEngineRequest& ImportEngineRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ImportEngineRequest> ImportEngineRequest_default_instance_;

ImportEngineRequest* ImportEngineRequest::New(::google::protobuf::Arena* arena) const {
  ImportEngineRequest* n = new ImportEngineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImportEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.ImportEngineRequest)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ImportEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.ImportEngineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pd_addr;
        break;
      }

      // optional string pd_addr = 2;
      case 2: {
        if (tag == 18) {
         parse_pd_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pd_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pd_addr().data(), this->pd_addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_kvpb.ImportEngineRequest.pd_addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.ImportEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.ImportEngineRequest)
  return false;
#undef DO_
}

void ImportEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.ImportEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // optional string pd_addr = 2;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), this->pd_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.ImportEngineRequest.pd_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pd_addr(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.ImportEngineRequest)
}

::google::protobuf::uint8* ImportEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.ImportEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // optional string pd_addr = 2;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), this->pd_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.ImportEngineRequest.pd_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pd_addr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.ImportEngineRequest)
  return target;
}

size_t ImportEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.ImportEngineRequest)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  // optional string pd_addr = 2;
  if (this->pd_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pd_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImportEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.ImportEngineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ImportEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.ImportEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.ImportEngineRequest)
    UnsafeMergeFrom(*source);
  }
}

void ImportEngineRequest::MergeFrom(const ImportEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.ImportEngineRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ImportEngineRequest::UnsafeMergeFrom(const ImportEngineRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.pd_addr().size() > 0) {

    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
}

void ImportEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.ImportEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportEngineRequest::CopyFrom(const ImportEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.ImportEngineRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ImportEngineRequest::IsInitialized() const {

  return true;
}

void ImportEngineRequest::Swap(ImportEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportEngineRequest::InternalSwap(ImportEngineRequest* other) {
  uuid_.Swap(&other->uuid_);
  pd_addr_.Swap(&other->pd_addr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImportEngineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImportEngineRequest_descriptor_;
  metadata.reflection = ImportEngineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImportEngineRequest

// optional bytes uuid = 1;
void ImportEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImportEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.ImportEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImportEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.ImportEngineRequest.uuid)
}
void ImportEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.ImportEngineRequest.uuid)
}
void ImportEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.ImportEngineRequest.uuid)
}
::std::string* ImportEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.ImportEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImportEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.ImportEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImportEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.ImportEngineRequest.uuid)
}

// optional string pd_addr = 2;
void ImportEngineRequest::clear_pd_addr() {
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImportEngineRequest::pd_addr() const {
  // @@protoc_insertion_point(field_get:import_kvpb.ImportEngineRequest.pd_addr)
  return pd_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImportEngineRequest::set_pd_addr(const ::std::string& value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.ImportEngineRequest.pd_addr)
}
void ImportEngineRequest::set_pd_addr(const char* value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.ImportEngineRequest.pd_addr)
}
void ImportEngineRequest::set_pd_addr(const char* value, size_t size) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.ImportEngineRequest.pd_addr)
}
::std::string* ImportEngineRequest::mutable_pd_addr() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.ImportEngineRequest.pd_addr)
  return pd_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImportEngineRequest::release_pd_addr() {
  // @@protoc_insertion_point(field_release:import_kvpb.ImportEngineRequest.pd_addr)
  
  return pd_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImportEngineRequest::set_allocated_pd_addr(::std::string* pd_addr) {
  if (pd_addr != NULL) {
    
  } else {
    
  }
  pd_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pd_addr);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.ImportEngineRequest.pd_addr)
}

inline const ImportEngineRequest* ImportEngineRequest::internal_default_instance() {
  return &ImportEngineRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportEngineResponse::ImportEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.ImportEngineResponse)
}

void ImportEngineResponse::InitAsDefaultInstance() {
}

ImportEngineResponse::ImportEngineResponse(const ImportEngineResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.ImportEngineResponse)
}

void ImportEngineResponse::SharedCtor() {
  _cached_size_ = 0;
}

ImportEngineResponse::~ImportEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.ImportEngineResponse)
  SharedDtor();
}

void ImportEngineResponse::SharedDtor() {
}

void ImportEngineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImportEngineResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImportEngineResponse_descriptor_;
}

const ImportEngineResponse& ImportEngineResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ImportEngineResponse> ImportEngineResponse_default_instance_;

ImportEngineResponse* ImportEngineResponse::New(::google::protobuf::Arena* arena) const {
  ImportEngineResponse* n = new ImportEngineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImportEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.ImportEngineResponse)
}

bool ImportEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.ImportEngineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.ImportEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.ImportEngineResponse)
  return false;
#undef DO_
}

void ImportEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.ImportEngineResponse)
  // @@protoc_insertion_point(serialize_end:import_kvpb.ImportEngineResponse)
}

::google::protobuf::uint8* ImportEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.ImportEngineResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.ImportEngineResponse)
  return target;
}

size_t ImportEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.ImportEngineResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImportEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.ImportEngineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ImportEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.ImportEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.ImportEngineResponse)
    UnsafeMergeFrom(*source);
  }
}

void ImportEngineResponse::MergeFrom(const ImportEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.ImportEngineResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ImportEngineResponse::UnsafeMergeFrom(const ImportEngineResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void ImportEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.ImportEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportEngineResponse::CopyFrom(const ImportEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.ImportEngineResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ImportEngineResponse::IsInitialized() const {

  return true;
}

void ImportEngineResponse::Swap(ImportEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportEngineResponse::InternalSwap(ImportEngineResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImportEngineResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImportEngineResponse_descriptor_;
  metadata.reflection = ImportEngineResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImportEngineResponse

inline const ImportEngineResponse* ImportEngineResponse::internal_default_instance() {
  return &ImportEngineResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CleanupEngineRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupEngineRequest::CleanupEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CleanupEngineRequest)
}

void CleanupEngineRequest::InitAsDefaultInstance() {
}

CleanupEngineRequest::CleanupEngineRequest(const CleanupEngineRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CleanupEngineRequest)
}

void CleanupEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CleanupEngineRequest::~CleanupEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CleanupEngineRequest)
  SharedDtor();
}

void CleanupEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CleanupEngineRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CleanupEngineRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CleanupEngineRequest_descriptor_;
}

const CleanupEngineRequest& CleanupEngineRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CleanupEngineRequest> CleanupEngineRequest_default_instance_;

CleanupEngineRequest* CleanupEngineRequest::New(::google::protobuf::Arena* arena) const {
  CleanupEngineRequest* n = new CleanupEngineRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CleanupEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CleanupEngineRequest)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CleanupEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CleanupEngineRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CleanupEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CleanupEngineRequest)
  return false;
#undef DO_
}

void CleanupEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CleanupEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.CleanupEngineRequest)
}

::google::protobuf::uint8* CleanupEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CleanupEngineRequest)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CleanupEngineRequest)
  return target;
}

size_t CleanupEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CleanupEngineRequest)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CleanupEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CleanupEngineRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CleanupEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CleanupEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CleanupEngineRequest)
    UnsafeMergeFrom(*source);
  }
}

void CleanupEngineRequest::MergeFrom(const CleanupEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CleanupEngineRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CleanupEngineRequest::UnsafeMergeFrom(const CleanupEngineRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void CleanupEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CleanupEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupEngineRequest::CopyFrom(const CleanupEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CleanupEngineRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CleanupEngineRequest::IsInitialized() const {

  return true;
}

void CleanupEngineRequest::Swap(CleanupEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanupEngineRequest::InternalSwap(CleanupEngineRequest* other) {
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CleanupEngineRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CleanupEngineRequest_descriptor_;
  metadata.reflection = CleanupEngineRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CleanupEngineRequest

// optional bytes uuid = 1;
void CleanupEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CleanupEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CleanupEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CleanupEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.CleanupEngineRequest.uuid)
}
void CleanupEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.CleanupEngineRequest.uuid)
}
void CleanupEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.CleanupEngineRequest.uuid)
}
::std::string* CleanupEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.CleanupEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CleanupEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.CleanupEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CleanupEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CleanupEngineRequest.uuid)
}

inline const CleanupEngineRequest* CleanupEngineRequest::internal_default_instance() {
  return &CleanupEngineRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupEngineResponse::CleanupEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CleanupEngineResponse)
}

void CleanupEngineResponse::InitAsDefaultInstance() {
}

CleanupEngineResponse::CleanupEngineResponse(const CleanupEngineResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CleanupEngineResponse)
}

void CleanupEngineResponse::SharedCtor() {
  _cached_size_ = 0;
}

CleanupEngineResponse::~CleanupEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CleanupEngineResponse)
  SharedDtor();
}

void CleanupEngineResponse::SharedDtor() {
}

void CleanupEngineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CleanupEngineResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CleanupEngineResponse_descriptor_;
}

const CleanupEngineResponse& CleanupEngineResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CleanupEngineResponse> CleanupEngineResponse_default_instance_;

CleanupEngineResponse* CleanupEngineResponse::New(::google::protobuf::Arena* arena) const {
  CleanupEngineResponse* n = new CleanupEngineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CleanupEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CleanupEngineResponse)
}

bool CleanupEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CleanupEngineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CleanupEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CleanupEngineResponse)
  return false;
#undef DO_
}

void CleanupEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CleanupEngineResponse)
  // @@protoc_insertion_point(serialize_end:import_kvpb.CleanupEngineResponse)
}

::google::protobuf::uint8* CleanupEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CleanupEngineResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CleanupEngineResponse)
  return target;
}

size_t CleanupEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CleanupEngineResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CleanupEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CleanupEngineResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CleanupEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CleanupEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CleanupEngineResponse)
    UnsafeMergeFrom(*source);
  }
}

void CleanupEngineResponse::MergeFrom(const CleanupEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CleanupEngineResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CleanupEngineResponse::UnsafeMergeFrom(const CleanupEngineResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void CleanupEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CleanupEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupEngineResponse::CopyFrom(const CleanupEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CleanupEngineResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CleanupEngineResponse::IsInitialized() const {

  return true;
}

void CleanupEngineResponse::Swap(CleanupEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanupEngineResponse::InternalSwap(CleanupEngineResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CleanupEngineResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CleanupEngineResponse_descriptor_;
  metadata.reflection = CleanupEngineResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CleanupEngineResponse

inline const CleanupEngineResponse* CleanupEngineResponse::internal_default_instance() {
  return &CleanupEngineResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactClusterRequest::kPdAddrFieldNumber;
const int CompactClusterRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactClusterRequest::CompactClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CompactClusterRequest)
}

void CompactClusterRequest::InitAsDefaultInstance() {
  request_ = const_cast< ::import_sstpb::CompactRequest*>(
      ::import_sstpb::CompactRequest::internal_default_instance());
}

CompactClusterRequest::CompactClusterRequest(const CompactClusterRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CompactClusterRequest)
}

void CompactClusterRequest::SharedCtor() {
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_ = NULL;
  _cached_size_ = 0;
}

CompactClusterRequest::~CompactClusterRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CompactClusterRequest)
  SharedDtor();
}

void CompactClusterRequest::SharedDtor() {
  pd_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &CompactClusterRequest_default_instance_.get()) {
    delete request_;
  }
}

void CompactClusterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactClusterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactClusterRequest_descriptor_;
}

const CompactClusterRequest& CompactClusterRequest::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CompactClusterRequest> CompactClusterRequest_default_instance_;

CompactClusterRequest* CompactClusterRequest::New(::google::protobuf::Arena* arena) const {
  CompactClusterRequest* n = new CompactClusterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CompactClusterRequest)
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}

bool CompactClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CompactClusterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pd_addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pd_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pd_addr().data(), this->pd_addr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_kvpb.CompactClusterRequest.pd_addr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // optional .import_sstpb.CompactRequest request = 2;
      case 2: {
        if (tag == 18) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CompactClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CompactClusterRequest)
  return false;
#undef DO_
}

void CompactClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CompactClusterRequest)
  // optional string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), this->pd_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.CompactClusterRequest.pd_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pd_addr(), output);
  }

  // optional .import_sstpb.CompactRequest request = 2;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->request_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.CompactClusterRequest)
}

::google::protobuf::uint8* CompactClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CompactClusterRequest)
  // optional string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), this->pd_addr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.CompactClusterRequest.pd_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pd_addr(), target);
  }

  // optional .import_sstpb.CompactRequest request = 2;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->request_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CompactClusterRequest)
  return target;
}

size_t CompactClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CompactClusterRequest)
  size_t total_size = 0;

  // optional string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pd_addr());
  }

  // optional .import_sstpb.CompactRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CompactClusterRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CompactClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CompactClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CompactClusterRequest)
    UnsafeMergeFrom(*source);
  }
}

void CompactClusterRequest::MergeFrom(const CompactClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CompactClusterRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CompactClusterRequest::UnsafeMergeFrom(const CompactClusterRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.pd_addr().size() > 0) {

    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  if (from.has_request()) {
    mutable_request()->::import_sstpb::CompactRequest::MergeFrom(from.request());
  }
}

void CompactClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CompactClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactClusterRequest::CopyFrom(const CompactClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CompactClusterRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CompactClusterRequest::IsInitialized() const {

  return true;
}

void CompactClusterRequest::Swap(CompactClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactClusterRequest::InternalSwap(CompactClusterRequest* other) {
  pd_addr_.Swap(&other->pd_addr_);
  std::swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactClusterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactClusterRequest_descriptor_;
  metadata.reflection = CompactClusterRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactClusterRequest

// optional string pd_addr = 1;
void CompactClusterRequest::clear_pd_addr() {
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CompactClusterRequest::pd_addr() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CompactClusterRequest.pd_addr)
  return pd_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactClusterRequest::set_pd_addr(const ::std::string& value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.CompactClusterRequest.pd_addr)
}
void CompactClusterRequest::set_pd_addr(const char* value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.CompactClusterRequest.pd_addr)
}
void CompactClusterRequest::set_pd_addr(const char* value, size_t size) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.CompactClusterRequest.pd_addr)
}
::std::string* CompactClusterRequest::mutable_pd_addr() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.CompactClusterRequest.pd_addr)
  return pd_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CompactClusterRequest::release_pd_addr() {
  // @@protoc_insertion_point(field_release:import_kvpb.CompactClusterRequest.pd_addr)
  
  return pd_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactClusterRequest::set_allocated_pd_addr(::std::string* pd_addr) {
  if (pd_addr != NULL) {
    
  } else {
    
  }
  pd_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pd_addr);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CompactClusterRequest.pd_addr)
}

// optional .import_sstpb.CompactRequest request = 2;
bool CompactClusterRequest::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
void CompactClusterRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
const ::import_sstpb::CompactRequest& CompactClusterRequest::request() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CompactClusterRequest.request)
  return request_ != NULL ? *request_
                         : *::import_sstpb::CompactRequest::internal_default_instance();
}
::import_sstpb::CompactRequest* CompactClusterRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::import_sstpb::CompactRequest;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.CompactClusterRequest.request)
  return request_;
}
::import_sstpb::CompactRequest* CompactClusterRequest::release_request() {
  // @@protoc_insertion_point(field_release:import_kvpb.CompactClusterRequest.request)
  
  ::import_sstpb::CompactRequest* temp = request_;
  request_ = NULL;
  return temp;
}
void CompactClusterRequest::set_allocated_request(::import_sstpb::CompactRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CompactClusterRequest.request)
}

inline const CompactClusterRequest* CompactClusterRequest::internal_default_instance() {
  return &CompactClusterRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactClusterResponse::CompactClusterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CompactClusterResponse)
}

void CompactClusterResponse::InitAsDefaultInstance() {
}

CompactClusterResponse::CompactClusterResponse(const CompactClusterResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CompactClusterResponse)
}

void CompactClusterResponse::SharedCtor() {
  _cached_size_ = 0;
}

CompactClusterResponse::~CompactClusterResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CompactClusterResponse)
  SharedDtor();
}

void CompactClusterResponse::SharedDtor() {
}

void CompactClusterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactClusterResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactClusterResponse_descriptor_;
}

const CompactClusterResponse& CompactClusterResponse::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CompactClusterResponse> CompactClusterResponse_default_instance_;

CompactClusterResponse* CompactClusterResponse::New(::google::protobuf::Arena* arena) const {
  CompactClusterResponse* n = new CompactClusterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactClusterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CompactClusterResponse)
}

bool CompactClusterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CompactClusterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CompactClusterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CompactClusterResponse)
  return false;
#undef DO_
}

void CompactClusterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CompactClusterResponse)
  // @@protoc_insertion_point(serialize_end:import_kvpb.CompactClusterResponse)
}

::google::protobuf::uint8* CompactClusterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CompactClusterResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CompactClusterResponse)
  return target;
}

size_t CompactClusterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CompactClusterResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactClusterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CompactClusterResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CompactClusterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactClusterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CompactClusterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CompactClusterResponse)
    UnsafeMergeFrom(*source);
  }
}

void CompactClusterResponse::MergeFrom(const CompactClusterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CompactClusterResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CompactClusterResponse::UnsafeMergeFrom(const CompactClusterResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void CompactClusterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CompactClusterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactClusterResponse::CopyFrom(const CompactClusterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CompactClusterResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CompactClusterResponse::IsInitialized() const {

  return true;
}

void CompactClusterResponse::Swap(CompactClusterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactClusterResponse::InternalSwap(CompactClusterResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactClusterResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactClusterResponse_descriptor_;
  metadata.reflection = CompactClusterResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactClusterResponse

inline const CompactClusterResponse* CompactClusterResponse::internal_default_instance() {
  return &CompactClusterResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error_EngineNotFound::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error_EngineNotFound::Error_EngineNotFound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Error.EngineNotFound)
}

void Error_EngineNotFound::InitAsDefaultInstance() {
}

Error_EngineNotFound::Error_EngineNotFound(const Error_EngineNotFound& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Error.EngineNotFound)
}

void Error_EngineNotFound::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Error_EngineNotFound::~Error_EngineNotFound() {
  // @@protoc_insertion_point(destructor:import_kvpb.Error.EngineNotFound)
  SharedDtor();
}

void Error_EngineNotFound::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error_EngineNotFound::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error_EngineNotFound::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_EngineNotFound_descriptor_;
}

const Error_EngineNotFound& Error_EngineNotFound::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Error_EngineNotFound> Error_EngineNotFound_default_instance_;

Error_EngineNotFound* Error_EngineNotFound::New(::google::protobuf::Arena* arena) const {
  Error_EngineNotFound* n = new Error_EngineNotFound;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error_EngineNotFound::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Error.EngineNotFound)
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Error_EngineNotFound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Error.EngineNotFound)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Error.EngineNotFound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Error.EngineNotFound)
  return false;
#undef DO_
}

void Error_EngineNotFound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Error.EngineNotFound)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.Error.EngineNotFound)
}

::google::protobuf::uint8* Error_EngineNotFound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Error.EngineNotFound)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Error.EngineNotFound)
  return target;
}

size_t Error_EngineNotFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Error.EngineNotFound)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error_EngineNotFound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Error.EngineNotFound)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Error_EngineNotFound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error_EngineNotFound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Error.EngineNotFound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Error.EngineNotFound)
    UnsafeMergeFrom(*source);
  }
}

void Error_EngineNotFound::MergeFrom(const Error_EngineNotFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Error.EngineNotFound)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Error_EngineNotFound::UnsafeMergeFrom(const Error_EngineNotFound& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Error_EngineNotFound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Error.EngineNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error_EngineNotFound::CopyFrom(const Error_EngineNotFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Error.EngineNotFound)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Error_EngineNotFound::IsInitialized() const {

  return true;
}

void Error_EngineNotFound::Swap(Error_EngineNotFound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error_EngineNotFound::InternalSwap(Error_EngineNotFound* other) {
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error_EngineNotFound::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_EngineNotFound_descriptor_;
  metadata.reflection = Error_EngineNotFound_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kEngineNotFoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fkvpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Error)
}

void Error::InitAsDefaultInstance() {
  engine_not_found_ = const_cast< ::import_kvpb::Error_EngineNotFound*>(
      ::import_kvpb::Error_EngineNotFound::internal_default_instance());
}

Error::Error(const Error& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Error)
}

void Error::SharedCtor() {
  engine_not_found_ = NULL;
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:import_kvpb.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  if (this != &Error_default_instance_.get()) {
    delete engine_not_found_;
  }
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  protobuf_InitDefaults_import_5fkvpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Error)
  if (GetArenaNoVirtual() == NULL && engine_not_found_ != NULL) delete engine_not_found_;
  engine_not_found_ = NULL;
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_engine_not_found()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Error)
  // optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->engine_not_found_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_kvpb.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Error)
  // optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->engine_not_found_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Error)
  size_t total_size = 0;

  // optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->engine_not_found_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Error)
    UnsafeMergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Error)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Error::UnsafeMergeFrom(const Error& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_engine_not_found()) {
    mutable_engine_not_found()->::import_kvpb::Error_EngineNotFound::MergeFrom(from.engine_not_found());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Error)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Error::IsInitialized() const {

  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  std::swap(engine_not_found_, other->engine_not_found_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_descriptor_;
  metadata.reflection = Error_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error_EngineNotFound

// optional bytes uuid = 1;
void Error_EngineNotFound::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Error_EngineNotFound::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Error.EngineNotFound.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error_EngineNotFound::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.Error.EngineNotFound.uuid)
}
void Error_EngineNotFound::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.Error.EngineNotFound.uuid)
}
void Error_EngineNotFound::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.Error.EngineNotFound.uuid)
}
::std::string* Error_EngineNotFound::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.Error.EngineNotFound.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Error_EngineNotFound::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.Error.EngineNotFound.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error_EngineNotFound::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Error.EngineNotFound.uuid)
}

inline const Error_EngineNotFound* Error_EngineNotFound::internal_default_instance() {
  return &Error_EngineNotFound_default_instance_.get();
}
// -------------------------------------------------------------------

// Error

// optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
bool Error::has_engine_not_found() const {
  return this != internal_default_instance() && engine_not_found_ != NULL;
}
void Error::clear_engine_not_found() {
  if (GetArenaNoVirtual() == NULL && engine_not_found_ != NULL) delete engine_not_found_;
  engine_not_found_ = NULL;
}
const ::import_kvpb::Error_EngineNotFound& Error::engine_not_found() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Error.engine_not_found)
  return engine_not_found_ != NULL ? *engine_not_found_
                         : *::import_kvpb::Error_EngineNotFound::internal_default_instance();
}
::import_kvpb::Error_EngineNotFound* Error::mutable_engine_not_found() {
  
  if (engine_not_found_ == NULL) {
    engine_not_found_ = new ::import_kvpb::Error_EngineNotFound;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.Error.engine_not_found)
  return engine_not_found_;
}
::import_kvpb::Error_EngineNotFound* Error::release_engine_not_found() {
  // @@protoc_insertion_point(field_release:import_kvpb.Error.engine_not_found)
  
  ::import_kvpb::Error_EngineNotFound* temp = engine_not_found_;
  engine_not_found_ = NULL;
  return temp;
}
void Error::set_allocated_engine_not_found(::import_kvpb::Error_EngineNotFound* engine_not_found) {
  delete engine_not_found_;
  engine_not_found_ = engine_not_found;
  if (engine_not_found) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Error.engine_not_found)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace import_kvpb

// @@protoc_insertion_point(global_scope)
