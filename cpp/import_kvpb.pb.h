// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_kvpb.proto

#ifndef PROTOBUF_import_5fkvpb_2eproto__INCLUDED
#define PROTOBUF_import_5fkvpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "import_sstpb.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

namespace import_kvpb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_import_5fkvpb_2eproto();
void protobuf_InitDefaults_import_5fkvpb_2eproto();
void protobuf_AssignDesc_import_5fkvpb_2eproto();
void protobuf_ShutdownFile_import_5fkvpb_2eproto();

class CleanupEngineRequest;
class CleanupEngineResponse;
class CloseEngineRequest;
class CloseEngineResponse;
class CompactClusterRequest;
class CompactClusterResponse;
class Error;
class Error_EngineNotFound;
class ImportEngineRequest;
class ImportEngineResponse;
class Mutation;
class OpenEngineRequest;
class OpenEngineResponse;
class SwitchModeRequest;
class SwitchModeResponse;
class WriteBatch;
class WriteEngineRequest;
class WriteEngineResponse;
class WriteHead;

enum Mutation_OP {
  Mutation_OP_Put = 0,
  Mutation_OP_Mutation_OP_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Mutation_OP_Mutation_OP_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Mutation_OP_IsValid(int value);
const Mutation_OP Mutation_OP_OP_MIN = Mutation_OP_Put;
const Mutation_OP Mutation_OP_OP_MAX = Mutation_OP_Put;
const int Mutation_OP_OP_ARRAYSIZE = Mutation_OP_OP_MAX + 1;

const ::google::protobuf::EnumDescriptor* Mutation_OP_descriptor();
inline const ::std::string& Mutation_OP_Name(Mutation_OP value) {
  return ::google::protobuf::internal::NameOfEnum(
    Mutation_OP_descriptor(), value);
}
inline bool Mutation_OP_Parse(
    const ::std::string& name, Mutation_OP* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Mutation_OP>(
    Mutation_OP_descriptor(), name, value);
}
// ===================================================================

class SwitchModeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.SwitchModeRequest) */ {
 public:
  SwitchModeRequest();
  virtual ~SwitchModeRequest();

  SwitchModeRequest(const SwitchModeRequest& from);

  inline SwitchModeRequest& operator=(const SwitchModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchModeRequest& default_instance();

  static const SwitchModeRequest* internal_default_instance();

  void Swap(SwitchModeRequest* other);

  // implements Message ----------------------------------------------

  inline SwitchModeRequest* New() const { return New(NULL); }

  SwitchModeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchModeRequest& from);
  void MergeFrom(const SwitchModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchModeRequest* other);
  void UnsafeMergeFrom(const SwitchModeRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pd_addr = 1;
  void clear_pd_addr();
  static const int kPdAddrFieldNumber = 1;
  const ::std::string& pd_addr() const;
  void set_pd_addr(const ::std::string& value);
  void set_pd_addr(const char* value);
  void set_pd_addr(const char* value, size_t size);
  ::std::string* mutable_pd_addr();
  ::std::string* release_pd_addr();
  void set_allocated_pd_addr(::std::string* pd_addr);

  // optional .import_sstpb.SwitchModeRequest request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  const ::import_sstpb::SwitchModeRequest& request() const;
  ::import_sstpb::SwitchModeRequest* mutable_request();
  ::import_sstpb::SwitchModeRequest* release_request();
  void set_allocated_request(::import_sstpb::SwitchModeRequest* request);

  // @@protoc_insertion_point(class_scope:import_kvpb.SwitchModeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pd_addr_;
  ::import_sstpb::SwitchModeRequest* request_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeRequest> SwitchModeRequest_default_instance_;

// -------------------------------------------------------------------

class SwitchModeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.SwitchModeResponse) */ {
 public:
  SwitchModeResponse();
  virtual ~SwitchModeResponse();

  SwitchModeResponse(const SwitchModeResponse& from);

  inline SwitchModeResponse& operator=(const SwitchModeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchModeResponse& default_instance();

  static const SwitchModeResponse* internal_default_instance();

  void Swap(SwitchModeResponse* other);

  // implements Message ----------------------------------------------

  inline SwitchModeResponse* New() const { return New(NULL); }

  SwitchModeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchModeResponse& from);
  void MergeFrom(const SwitchModeResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchModeResponse* other);
  void UnsafeMergeFrom(const SwitchModeResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_kvpb.SwitchModeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeResponse> SwitchModeResponse_default_instance_;

// -------------------------------------------------------------------

class OpenEngineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.OpenEngineRequest) */ {
 public:
  OpenEngineRequest();
  virtual ~OpenEngineRequest();

  OpenEngineRequest(const OpenEngineRequest& from);

  inline OpenEngineRequest& operator=(const OpenEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenEngineRequest& default_instance();

  static const OpenEngineRequest* internal_default_instance();

  void Swap(OpenEngineRequest* other);

  // implements Message ----------------------------------------------

  inline OpenEngineRequest* New() const { return New(NULL); }

  OpenEngineRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenEngineRequest& from);
  void MergeFrom(const OpenEngineRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenEngineRequest* other);
  void UnsafeMergeFrom(const OpenEngineRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:import_kvpb.OpenEngineRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OpenEngineRequest> OpenEngineRequest_default_instance_;

// -------------------------------------------------------------------

class OpenEngineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.OpenEngineResponse) */ {
 public:
  OpenEngineResponse();
  virtual ~OpenEngineResponse();

  OpenEngineResponse(const OpenEngineResponse& from);

  inline OpenEngineResponse& operator=(const OpenEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenEngineResponse& default_instance();

  static const OpenEngineResponse* internal_default_instance();

  void Swap(OpenEngineResponse* other);

  // implements Message ----------------------------------------------

  inline OpenEngineResponse* New() const { return New(NULL); }

  OpenEngineResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenEngineResponse& from);
  void MergeFrom(const OpenEngineResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenEngineResponse* other);
  void UnsafeMergeFrom(const OpenEngineResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_kvpb.OpenEngineResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OpenEngineResponse> OpenEngineResponse_default_instance_;

// -------------------------------------------------------------------

class WriteHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.WriteHead) */ {
 public:
  WriteHead();
  virtual ~WriteHead();

  WriteHead(const WriteHead& from);

  inline WriteHead& operator=(const WriteHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteHead& default_instance();

  static const WriteHead* internal_default_instance();

  void Swap(WriteHead* other);

  // implements Message ----------------------------------------------

  inline WriteHead* New() const { return New(NULL); }

  WriteHead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteHead& from);
  void MergeFrom(const WriteHead& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteHead* other);
  void UnsafeMergeFrom(const WriteHead& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:import_kvpb.WriteHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteHead> WriteHead_default_instance_;

// -------------------------------------------------------------------

class Mutation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.Mutation) */ {
 public:
  Mutation();
  virtual ~Mutation();

  Mutation(const Mutation& from);

  inline Mutation& operator=(const Mutation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mutation& default_instance();

  static const Mutation* internal_default_instance();

  void Swap(Mutation* other);

  // implements Message ----------------------------------------------

  inline Mutation* New() const { return New(NULL); }

  Mutation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mutation& from);
  void MergeFrom(const Mutation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Mutation* other);
  void UnsafeMergeFrom(const Mutation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Mutation_OP OP;
  static const OP Put =
    Mutation_OP_Put;
  static inline bool OP_IsValid(int value) {
    return Mutation_OP_IsValid(value);
  }
  static const OP OP_MIN =
    Mutation_OP_OP_MIN;
  static const OP OP_MAX =
    Mutation_OP_OP_MAX;
  static const int OP_ARRAYSIZE =
    Mutation_OP_OP_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OP_descriptor() {
    return Mutation_OP_descriptor();
  }
  static inline const ::std::string& OP_Name(OP value) {
    return Mutation_OP_Name(value);
  }
  static inline bool OP_Parse(const ::std::string& name,
      OP* value) {
    return Mutation_OP_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .import_kvpb.Mutation.OP op = 1;
  void clear_op();
  static const int kOpFieldNumber = 1;
  ::import_kvpb::Mutation_OP op() const;
  void set_op(::import_kvpb::Mutation_OP value);

  // optional bytes key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:import_kvpb.Mutation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int op_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Mutation> Mutation_default_instance_;

// -------------------------------------------------------------------

class WriteBatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.WriteBatch) */ {
 public:
  WriteBatch();
  virtual ~WriteBatch();

  WriteBatch(const WriteBatch& from);

  inline WriteBatch& operator=(const WriteBatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteBatch& default_instance();

  static const WriteBatch* internal_default_instance();

  void Swap(WriteBatch* other);

  // implements Message ----------------------------------------------

  inline WriteBatch* New() const { return New(NULL); }

  WriteBatch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteBatch& from);
  void MergeFrom(const WriteBatch& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteBatch* other);
  void UnsafeMergeFrom(const WriteBatch& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 commit_ts = 1;
  void clear_commit_ts();
  static const int kCommitTsFieldNumber = 1;
  ::google::protobuf::uint64 commit_ts() const;
  void set_commit_ts(::google::protobuf::uint64 value);

  // repeated .import_kvpb.Mutation mutations = 2;
  int mutations_size() const;
  void clear_mutations();
  static const int kMutationsFieldNumber = 2;
  const ::import_kvpb::Mutation& mutations(int index) const;
  ::import_kvpb::Mutation* mutable_mutations(int index);
  ::import_kvpb::Mutation* add_mutations();
  ::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation >*
      mutable_mutations();
  const ::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation >&
      mutations() const;

  // @@protoc_insertion_point(class_scope:import_kvpb.WriteBatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation > mutations_;
  ::google::protobuf::uint64 commit_ts_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteBatch> WriteBatch_default_instance_;

// -------------------------------------------------------------------

class WriteEngineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.WriteEngineRequest) */ {
 public:
  WriteEngineRequest();
  virtual ~WriteEngineRequest();

  WriteEngineRequest(const WriteEngineRequest& from);

  inline WriteEngineRequest& operator=(const WriteEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteEngineRequest& default_instance();

  enum ChunkCase {
    kHead = 1,
    kBatch = 2,
    CHUNK_NOT_SET = 0,
  };

  static const WriteEngineRequest* internal_default_instance();

  void Swap(WriteEngineRequest* other);

  // implements Message ----------------------------------------------

  inline WriteEngineRequest* New() const { return New(NULL); }

  WriteEngineRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteEngineRequest& from);
  void MergeFrom(const WriteEngineRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteEngineRequest* other);
  void UnsafeMergeFrom(const WriteEngineRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .import_kvpb.WriteHead head = 1;
  bool has_head() const;
  void clear_head();
  static const int kHeadFieldNumber = 1;
  const ::import_kvpb::WriteHead& head() const;
  ::import_kvpb::WriteHead* mutable_head();
  ::import_kvpb::WriteHead* release_head();
  void set_allocated_head(::import_kvpb::WriteHead* head);

  // optional .import_kvpb.WriteBatch batch = 2;
  bool has_batch() const;
  void clear_batch();
  static const int kBatchFieldNumber = 2;
  const ::import_kvpb::WriteBatch& batch() const;
  ::import_kvpb::WriteBatch* mutable_batch();
  ::import_kvpb::WriteBatch* release_batch();
  void set_allocated_batch(::import_kvpb::WriteBatch* batch);

  ChunkCase chunk_case() const;
  // @@protoc_insertion_point(class_scope:import_kvpb.WriteEngineRequest)
 private:
  inline void set_has_head();
  inline void set_has_batch();

  inline bool has_chunk() const;
  void clear_chunk();
  inline void clear_has_chunk();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ChunkUnion {
    ChunkUnion() {}
    ::import_kvpb::WriteHead* head_;
    ::import_kvpb::WriteBatch* batch_;
  } chunk_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteEngineRequest> WriteEngineRequest_default_instance_;

// -------------------------------------------------------------------

class WriteEngineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.WriteEngineResponse) */ {
 public:
  WriteEngineResponse();
  virtual ~WriteEngineResponse();

  WriteEngineResponse(const WriteEngineResponse& from);

  inline WriteEngineResponse& operator=(const WriteEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteEngineResponse& default_instance();

  static const WriteEngineResponse* internal_default_instance();

  void Swap(WriteEngineResponse* other);

  // implements Message ----------------------------------------------

  inline WriteEngineResponse* New() const { return New(NULL); }

  WriteEngineResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteEngineResponse& from);
  void MergeFrom(const WriteEngineResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteEngineResponse* other);
  void UnsafeMergeFrom(const WriteEngineResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .import_kvpb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::import_kvpb::Error& error() const;
  ::import_kvpb::Error* mutable_error();
  ::import_kvpb::Error* release_error();
  void set_allocated_error(::import_kvpb::Error* error);

  // @@protoc_insertion_point(class_scope:import_kvpb.WriteEngineResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::import_kvpb::Error* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteEngineResponse> WriteEngineResponse_default_instance_;

// -------------------------------------------------------------------

class CloseEngineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.CloseEngineRequest) */ {
 public:
  CloseEngineRequest();
  virtual ~CloseEngineRequest();

  CloseEngineRequest(const CloseEngineRequest& from);

  inline CloseEngineRequest& operator=(const CloseEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseEngineRequest& default_instance();

  static const CloseEngineRequest* internal_default_instance();

  void Swap(CloseEngineRequest* other);

  // implements Message ----------------------------------------------

  inline CloseEngineRequest* New() const { return New(NULL); }

  CloseEngineRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseEngineRequest& from);
  void MergeFrom(const CloseEngineRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloseEngineRequest* other);
  void UnsafeMergeFrom(const CloseEngineRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:import_kvpb.CloseEngineRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CloseEngineRequest> CloseEngineRequest_default_instance_;

// -------------------------------------------------------------------

class CloseEngineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.CloseEngineResponse) */ {
 public:
  CloseEngineResponse();
  virtual ~CloseEngineResponse();

  CloseEngineResponse(const CloseEngineResponse& from);

  inline CloseEngineResponse& operator=(const CloseEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseEngineResponse& default_instance();

  static const CloseEngineResponse* internal_default_instance();

  void Swap(CloseEngineResponse* other);

  // implements Message ----------------------------------------------

  inline CloseEngineResponse* New() const { return New(NULL); }

  CloseEngineResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseEngineResponse& from);
  void MergeFrom(const CloseEngineResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloseEngineResponse* other);
  void UnsafeMergeFrom(const CloseEngineResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .import_kvpb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::import_kvpb::Error& error() const;
  ::import_kvpb::Error* mutable_error();
  ::import_kvpb::Error* release_error();
  void set_allocated_error(::import_kvpb::Error* error);

  // @@protoc_insertion_point(class_scope:import_kvpb.CloseEngineResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::import_kvpb::Error* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CloseEngineResponse> CloseEngineResponse_default_instance_;

// -------------------------------------------------------------------

class ImportEngineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.ImportEngineRequest) */ {
 public:
  ImportEngineRequest();
  virtual ~ImportEngineRequest();

  ImportEngineRequest(const ImportEngineRequest& from);

  inline ImportEngineRequest& operator=(const ImportEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportEngineRequest& default_instance();

  static const ImportEngineRequest* internal_default_instance();

  void Swap(ImportEngineRequest* other);

  // implements Message ----------------------------------------------

  inline ImportEngineRequest* New() const { return New(NULL); }

  ImportEngineRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImportEngineRequest& from);
  void MergeFrom(const ImportEngineRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImportEngineRequest* other);
  void UnsafeMergeFrom(const ImportEngineRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional string pd_addr = 2;
  void clear_pd_addr();
  static const int kPdAddrFieldNumber = 2;
  const ::std::string& pd_addr() const;
  void set_pd_addr(const ::std::string& value);
  void set_pd_addr(const char* value);
  void set_pd_addr(const char* value, size_t size);
  ::std::string* mutable_pd_addr();
  ::std::string* release_pd_addr();
  void set_allocated_pd_addr(::std::string* pd_addr);

  // @@protoc_insertion_point(class_scope:import_kvpb.ImportEngineRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr pd_addr_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImportEngineRequest> ImportEngineRequest_default_instance_;

// -------------------------------------------------------------------

class ImportEngineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.ImportEngineResponse) */ {
 public:
  ImportEngineResponse();
  virtual ~ImportEngineResponse();

  ImportEngineResponse(const ImportEngineResponse& from);

  inline ImportEngineResponse& operator=(const ImportEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportEngineResponse& default_instance();

  static const ImportEngineResponse* internal_default_instance();

  void Swap(ImportEngineResponse* other);

  // implements Message ----------------------------------------------

  inline ImportEngineResponse* New() const { return New(NULL); }

  ImportEngineResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ImportEngineResponse& from);
  void MergeFrom(const ImportEngineResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImportEngineResponse* other);
  void UnsafeMergeFrom(const ImportEngineResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_kvpb.ImportEngineResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ImportEngineResponse> ImportEngineResponse_default_instance_;

// -------------------------------------------------------------------

class CleanupEngineRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.CleanupEngineRequest) */ {
 public:
  CleanupEngineRequest();
  virtual ~CleanupEngineRequest();

  CleanupEngineRequest(const CleanupEngineRequest& from);

  inline CleanupEngineRequest& operator=(const CleanupEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CleanupEngineRequest& default_instance();

  static const CleanupEngineRequest* internal_default_instance();

  void Swap(CleanupEngineRequest* other);

  // implements Message ----------------------------------------------

  inline CleanupEngineRequest* New() const { return New(NULL); }

  CleanupEngineRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CleanupEngineRequest& from);
  void MergeFrom(const CleanupEngineRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CleanupEngineRequest* other);
  void UnsafeMergeFrom(const CleanupEngineRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:import_kvpb.CleanupEngineRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CleanupEngineRequest> CleanupEngineRequest_default_instance_;

// -------------------------------------------------------------------

class CleanupEngineResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.CleanupEngineResponse) */ {
 public:
  CleanupEngineResponse();
  virtual ~CleanupEngineResponse();

  CleanupEngineResponse(const CleanupEngineResponse& from);

  inline CleanupEngineResponse& operator=(const CleanupEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CleanupEngineResponse& default_instance();

  static const CleanupEngineResponse* internal_default_instance();

  void Swap(CleanupEngineResponse* other);

  // implements Message ----------------------------------------------

  inline CleanupEngineResponse* New() const { return New(NULL); }

  CleanupEngineResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CleanupEngineResponse& from);
  void MergeFrom(const CleanupEngineResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CleanupEngineResponse* other);
  void UnsafeMergeFrom(const CleanupEngineResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_kvpb.CleanupEngineResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CleanupEngineResponse> CleanupEngineResponse_default_instance_;

// -------------------------------------------------------------------

class CompactClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.CompactClusterRequest) */ {
 public:
  CompactClusterRequest();
  virtual ~CompactClusterRequest();

  CompactClusterRequest(const CompactClusterRequest& from);

  inline CompactClusterRequest& operator=(const CompactClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompactClusterRequest& default_instance();

  static const CompactClusterRequest* internal_default_instance();

  void Swap(CompactClusterRequest* other);

  // implements Message ----------------------------------------------

  inline CompactClusterRequest* New() const { return New(NULL); }

  CompactClusterRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompactClusterRequest& from);
  void MergeFrom(const CompactClusterRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompactClusterRequest* other);
  void UnsafeMergeFrom(const CompactClusterRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pd_addr = 1;
  void clear_pd_addr();
  static const int kPdAddrFieldNumber = 1;
  const ::std::string& pd_addr() const;
  void set_pd_addr(const ::std::string& value);
  void set_pd_addr(const char* value);
  void set_pd_addr(const char* value, size_t size);
  ::std::string* mutable_pd_addr();
  ::std::string* release_pd_addr();
  void set_allocated_pd_addr(::std::string* pd_addr);

  // optional .import_sstpb.CompactRequest request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  const ::import_sstpb::CompactRequest& request() const;
  ::import_sstpb::CompactRequest* mutable_request();
  ::import_sstpb::CompactRequest* release_request();
  void set_allocated_request(::import_sstpb::CompactRequest* request);

  // @@protoc_insertion_point(class_scope:import_kvpb.CompactClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pd_addr_;
  ::import_sstpb::CompactRequest* request_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CompactClusterRequest> CompactClusterRequest_default_instance_;

// -------------------------------------------------------------------

class CompactClusterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.CompactClusterResponse) */ {
 public:
  CompactClusterResponse();
  virtual ~CompactClusterResponse();

  CompactClusterResponse(const CompactClusterResponse& from);

  inline CompactClusterResponse& operator=(const CompactClusterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompactClusterResponse& default_instance();

  static const CompactClusterResponse* internal_default_instance();

  void Swap(CompactClusterResponse* other);

  // implements Message ----------------------------------------------

  inline CompactClusterResponse* New() const { return New(NULL); }

  CompactClusterResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompactClusterResponse& from);
  void MergeFrom(const CompactClusterResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompactClusterResponse* other);
  void UnsafeMergeFrom(const CompactClusterResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_kvpb.CompactClusterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CompactClusterResponse> CompactClusterResponse_default_instance_;

// -------------------------------------------------------------------

class Error_EngineNotFound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.Error.EngineNotFound) */ {
 public:
  Error_EngineNotFound();
  virtual ~Error_EngineNotFound();

  Error_EngineNotFound(const Error_EngineNotFound& from);

  inline Error_EngineNotFound& operator=(const Error_EngineNotFound& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error_EngineNotFound& default_instance();

  static const Error_EngineNotFound* internal_default_instance();

  void Swap(Error_EngineNotFound* other);

  // implements Message ----------------------------------------------

  inline Error_EngineNotFound* New() const { return New(NULL); }

  Error_EngineNotFound* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error_EngineNotFound& from);
  void MergeFrom(const Error_EngineNotFound& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error_EngineNotFound* other);
  void UnsafeMergeFrom(const Error_EngineNotFound& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:import_kvpb.Error.EngineNotFound)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Error_EngineNotFound> Error_EngineNotFound_default_instance_;

// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_kvpb.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static const Error* internal_default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error* other);
  void UnsafeMergeFrom(const Error& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Error_EngineNotFound EngineNotFound;

  // accessors -------------------------------------------------------

  // optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  bool has_engine_not_found() const;
  void clear_engine_not_found();
  static const int kEngineNotFoundFieldNumber = 1;
  const ::import_kvpb::Error_EngineNotFound& engine_not_found() const;
  ::import_kvpb::Error_EngineNotFound* mutable_engine_not_found();
  ::import_kvpb::Error_EngineNotFound* release_engine_not_found();
  void set_allocated_engine_not_found(::import_kvpb::Error_EngineNotFound* engine_not_found);

  // @@protoc_insertion_point(class_scope:import_kvpb.Error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::import_kvpb::Error_EngineNotFound* engine_not_found_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fkvpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fkvpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fkvpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fkvpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchModeRequest

// optional string pd_addr = 1;
inline void SwitchModeRequest::clear_pd_addr() {
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SwitchModeRequest::pd_addr() const {
  // @@protoc_insertion_point(field_get:import_kvpb.SwitchModeRequest.pd_addr)
  return pd_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchModeRequest::set_pd_addr(const ::std::string& value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.SwitchModeRequest.pd_addr)
}
inline void SwitchModeRequest::set_pd_addr(const char* value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.SwitchModeRequest.pd_addr)
}
inline void SwitchModeRequest::set_pd_addr(const char* value, size_t size) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.SwitchModeRequest.pd_addr)
}
inline ::std::string* SwitchModeRequest::mutable_pd_addr() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.SwitchModeRequest.pd_addr)
  return pd_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwitchModeRequest::release_pd_addr() {
  // @@protoc_insertion_point(field_release:import_kvpb.SwitchModeRequest.pd_addr)
  
  return pd_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchModeRequest::set_allocated_pd_addr(::std::string* pd_addr) {
  if (pd_addr != NULL) {
    
  } else {
    
  }
  pd_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pd_addr);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.SwitchModeRequest.pd_addr)
}

// optional .import_sstpb.SwitchModeRequest request = 2;
inline bool SwitchModeRequest::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void SwitchModeRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
inline const ::import_sstpb::SwitchModeRequest& SwitchModeRequest::request() const {
  // @@protoc_insertion_point(field_get:import_kvpb.SwitchModeRequest.request)
  return request_ != NULL ? *request_
                         : *::import_sstpb::SwitchModeRequest::internal_default_instance();
}
inline ::import_sstpb::SwitchModeRequest* SwitchModeRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::import_sstpb::SwitchModeRequest;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.SwitchModeRequest.request)
  return request_;
}
inline ::import_sstpb::SwitchModeRequest* SwitchModeRequest::release_request() {
  // @@protoc_insertion_point(field_release:import_kvpb.SwitchModeRequest.request)
  
  ::import_sstpb::SwitchModeRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void SwitchModeRequest::set_allocated_request(::import_sstpb::SwitchModeRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.SwitchModeRequest.request)
}

inline const SwitchModeRequest* SwitchModeRequest::internal_default_instance() {
  return &SwitchModeRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SwitchModeResponse

inline const SwitchModeResponse* SwitchModeResponse::internal_default_instance() {
  return &SwitchModeResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// OpenEngineRequest

// optional bytes uuid = 1;
inline void OpenEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.OpenEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.OpenEngineRequest.uuid)
}
inline void OpenEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.OpenEngineRequest.uuid)
}
inline void OpenEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.OpenEngineRequest.uuid)
}
inline ::std::string* OpenEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.OpenEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.OpenEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.OpenEngineRequest.uuid)
}

inline const OpenEngineRequest* OpenEngineRequest::internal_default_instance() {
  return &OpenEngineRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// OpenEngineResponse

inline const OpenEngineResponse* OpenEngineResponse::internal_default_instance() {
  return &OpenEngineResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteHead

// optional bytes uuid = 1;
inline void WriteHead::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteHead::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteHead.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteHead::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.WriteHead.uuid)
}
inline void WriteHead::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.WriteHead.uuid)
}
inline void WriteHead::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.WriteHead.uuid)
}
inline ::std::string* WriteHead::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteHead.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteHead::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteHead.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteHead::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteHead.uuid)
}

inline const WriteHead* WriteHead::internal_default_instance() {
  return &WriteHead_default_instance_.get();
}
// -------------------------------------------------------------------

// Mutation

// optional .import_kvpb.Mutation.OP op = 1;
inline void Mutation::clear_op() {
  op_ = 0;
}
inline ::import_kvpb::Mutation_OP Mutation::op() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Mutation.op)
  return static_cast< ::import_kvpb::Mutation_OP >(op_);
}
inline void Mutation::set_op(::import_kvpb::Mutation_OP value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:import_kvpb.Mutation.op)
}

// optional bytes key = 2;
inline void Mutation::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Mutation::key() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Mutation.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mutation::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.Mutation.key)
}
inline void Mutation::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.Mutation.key)
}
inline void Mutation::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.Mutation.key)
}
inline ::std::string* Mutation::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.Mutation.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Mutation::release_key() {
  // @@protoc_insertion_point(field_release:import_kvpb.Mutation.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mutation::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Mutation.key)
}

// optional bytes value = 3;
inline void Mutation::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Mutation::value() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Mutation.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mutation::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.Mutation.value)
}
inline void Mutation::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.Mutation.value)
}
inline void Mutation::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.Mutation.value)
}
inline ::std::string* Mutation::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.Mutation.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Mutation::release_value() {
  // @@protoc_insertion_point(field_release:import_kvpb.Mutation.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mutation::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Mutation.value)
}

inline const Mutation* Mutation::internal_default_instance() {
  return &Mutation_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteBatch

// optional uint64 commit_ts = 1;
inline void WriteBatch::clear_commit_ts() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteBatch::commit_ts() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteBatch.commit_ts)
  return commit_ts_;
}
inline void WriteBatch::set_commit_ts(::google::protobuf::uint64 value) {
  
  commit_ts_ = value;
  // @@protoc_insertion_point(field_set:import_kvpb.WriteBatch.commit_ts)
}

// repeated .import_kvpb.Mutation mutations = 2;
inline int WriteBatch::mutations_size() const {
  return mutations_.size();
}
inline void WriteBatch::clear_mutations() {
  mutations_.Clear();
}
inline const ::import_kvpb::Mutation& WriteBatch::mutations(int index) const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteBatch.mutations)
  return mutations_.Get(index);
}
inline ::import_kvpb::Mutation* WriteBatch::mutable_mutations(int index) {
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteBatch.mutations)
  return mutations_.Mutable(index);
}
inline ::import_kvpb::Mutation* WriteBatch::add_mutations() {
  // @@protoc_insertion_point(field_add:import_kvpb.WriteBatch.mutations)
  return mutations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation >*
WriteBatch::mutable_mutations() {
  // @@protoc_insertion_point(field_mutable_list:import_kvpb.WriteBatch.mutations)
  return &mutations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::import_kvpb::Mutation >&
WriteBatch::mutations() const {
  // @@protoc_insertion_point(field_list:import_kvpb.WriteBatch.mutations)
  return mutations_;
}

inline const WriteBatch* WriteBatch::internal_default_instance() {
  return &WriteBatch_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteEngineRequest

// optional .import_kvpb.WriteHead head = 1;
inline bool WriteEngineRequest::has_head() const {
  return chunk_case() == kHead;
}
inline void WriteEngineRequest::set_has_head() {
  _oneof_case_[0] = kHead;
}
inline void WriteEngineRequest::clear_head() {
  if (has_head()) {
    delete chunk_.head_;
    clear_has_chunk();
  }
}
inline  const ::import_kvpb::WriteHead& WriteEngineRequest::head() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteEngineRequest.head)
  return has_head()
      ? *chunk_.head_
      : ::import_kvpb::WriteHead::default_instance();
}
inline ::import_kvpb::WriteHead* WriteEngineRequest::mutable_head() {
  if (!has_head()) {
    clear_chunk();
    set_has_head();
    chunk_.head_ = new ::import_kvpb::WriteHead;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteEngineRequest.head)
  return chunk_.head_;
}
inline ::import_kvpb::WriteHead* WriteEngineRequest::release_head() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteEngineRequest.head)
  if (has_head()) {
    clear_has_chunk();
    ::import_kvpb::WriteHead* temp = chunk_.head_;
    chunk_.head_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void WriteEngineRequest::set_allocated_head(::import_kvpb::WriteHead* head) {
  clear_chunk();
  if (head) {
    set_has_head();
    chunk_.head_ = head;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineRequest.head)
}

// optional .import_kvpb.WriteBatch batch = 2;
inline bool WriteEngineRequest::has_batch() const {
  return chunk_case() == kBatch;
}
inline void WriteEngineRequest::set_has_batch() {
  _oneof_case_[0] = kBatch;
}
inline void WriteEngineRequest::clear_batch() {
  if (has_batch()) {
    delete chunk_.batch_;
    clear_has_chunk();
  }
}
inline  const ::import_kvpb::WriteBatch& WriteEngineRequest::batch() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteEngineRequest.batch)
  return has_batch()
      ? *chunk_.batch_
      : ::import_kvpb::WriteBatch::default_instance();
}
inline ::import_kvpb::WriteBatch* WriteEngineRequest::mutable_batch() {
  if (!has_batch()) {
    clear_chunk();
    set_has_batch();
    chunk_.batch_ = new ::import_kvpb::WriteBatch;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteEngineRequest.batch)
  return chunk_.batch_;
}
inline ::import_kvpb::WriteBatch* WriteEngineRequest::release_batch() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteEngineRequest.batch)
  if (has_batch()) {
    clear_has_chunk();
    ::import_kvpb::WriteBatch* temp = chunk_.batch_;
    chunk_.batch_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void WriteEngineRequest::set_allocated_batch(::import_kvpb::WriteBatch* batch) {
  clear_chunk();
  if (batch) {
    set_has_batch();
    chunk_.batch_ = batch;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineRequest.batch)
}

inline bool WriteEngineRequest::has_chunk() const {
  return chunk_case() != CHUNK_NOT_SET;
}
inline void WriteEngineRequest::clear_has_chunk() {
  _oneof_case_[0] = CHUNK_NOT_SET;
}
inline WriteEngineRequest::ChunkCase WriteEngineRequest::chunk_case() const {
  return WriteEngineRequest::ChunkCase(_oneof_case_[0]);
}
inline const WriteEngineRequest* WriteEngineRequest::internal_default_instance() {
  return &WriteEngineRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteEngineResponse

// optional .import_kvpb.Error error = 1;
inline bool WriteEngineResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void WriteEngineResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::import_kvpb::Error& WriteEngineResponse::error() const {
  // @@protoc_insertion_point(field_get:import_kvpb.WriteEngineResponse.error)
  return error_ != NULL ? *error_
                         : *::import_kvpb::Error::internal_default_instance();
}
inline ::import_kvpb::Error* WriteEngineResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::import_kvpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.WriteEngineResponse.error)
  return error_;
}
inline ::import_kvpb::Error* WriteEngineResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_kvpb.WriteEngineResponse.error)
  
  ::import_kvpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void WriteEngineResponse::set_allocated_error(::import_kvpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineResponse.error)
}

inline const WriteEngineResponse* WriteEngineResponse::internal_default_instance() {
  return &WriteEngineResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CloseEngineRequest

// optional bytes uuid = 1;
inline void CloseEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloseEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CloseEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloseEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.CloseEngineRequest.uuid)
}
inline void CloseEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.CloseEngineRequest.uuid)
}
inline void CloseEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.CloseEngineRequest.uuid)
}
inline ::std::string* CloseEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.CloseEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloseEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.CloseEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloseEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CloseEngineRequest.uuid)
}

inline const CloseEngineRequest* CloseEngineRequest::internal_default_instance() {
  return &CloseEngineRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CloseEngineResponse

// optional .import_kvpb.Error error = 1;
inline bool CloseEngineResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void CloseEngineResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::import_kvpb::Error& CloseEngineResponse::error() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CloseEngineResponse.error)
  return error_ != NULL ? *error_
                         : *::import_kvpb::Error::internal_default_instance();
}
inline ::import_kvpb::Error* CloseEngineResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::import_kvpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.CloseEngineResponse.error)
  return error_;
}
inline ::import_kvpb::Error* CloseEngineResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_kvpb.CloseEngineResponse.error)
  
  ::import_kvpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CloseEngineResponse::set_allocated_error(::import_kvpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CloseEngineResponse.error)
}

inline const CloseEngineResponse* CloseEngineResponse::internal_default_instance() {
  return &CloseEngineResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ImportEngineRequest

// optional bytes uuid = 1;
inline void ImportEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.ImportEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.ImportEngineRequest.uuid)
}
inline void ImportEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.ImportEngineRequest.uuid)
}
inline void ImportEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.ImportEngineRequest.uuid)
}
inline ::std::string* ImportEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.ImportEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.ImportEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.ImportEngineRequest.uuid)
}

// optional string pd_addr = 2;
inline void ImportEngineRequest::clear_pd_addr() {
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImportEngineRequest::pd_addr() const {
  // @@protoc_insertion_point(field_get:import_kvpb.ImportEngineRequest.pd_addr)
  return pd_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEngineRequest::set_pd_addr(const ::std::string& value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.ImportEngineRequest.pd_addr)
}
inline void ImportEngineRequest::set_pd_addr(const char* value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.ImportEngineRequest.pd_addr)
}
inline void ImportEngineRequest::set_pd_addr(const char* value, size_t size) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.ImportEngineRequest.pd_addr)
}
inline ::std::string* ImportEngineRequest::mutable_pd_addr() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.ImportEngineRequest.pd_addr)
  return pd_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImportEngineRequest::release_pd_addr() {
  // @@protoc_insertion_point(field_release:import_kvpb.ImportEngineRequest.pd_addr)
  
  return pd_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImportEngineRequest::set_allocated_pd_addr(::std::string* pd_addr) {
  if (pd_addr != NULL) {
    
  } else {
    
  }
  pd_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pd_addr);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.ImportEngineRequest.pd_addr)
}

inline const ImportEngineRequest* ImportEngineRequest::internal_default_instance() {
  return &ImportEngineRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ImportEngineResponse

inline const ImportEngineResponse* ImportEngineResponse::internal_default_instance() {
  return &ImportEngineResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CleanupEngineRequest

// optional bytes uuid = 1;
inline void CleanupEngineRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CleanupEngineRequest::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CleanupEngineRequest.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CleanupEngineRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.CleanupEngineRequest.uuid)
}
inline void CleanupEngineRequest::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.CleanupEngineRequest.uuid)
}
inline void CleanupEngineRequest::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.CleanupEngineRequest.uuid)
}
inline ::std::string* CleanupEngineRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.CleanupEngineRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CleanupEngineRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.CleanupEngineRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CleanupEngineRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CleanupEngineRequest.uuid)
}

inline const CleanupEngineRequest* CleanupEngineRequest::internal_default_instance() {
  return &CleanupEngineRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CleanupEngineResponse

inline const CleanupEngineResponse* CleanupEngineResponse::internal_default_instance() {
  return &CleanupEngineResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CompactClusterRequest

// optional string pd_addr = 1;
inline void CompactClusterRequest::clear_pd_addr() {
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CompactClusterRequest::pd_addr() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CompactClusterRequest.pd_addr)
  return pd_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompactClusterRequest::set_pd_addr(const ::std::string& value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.CompactClusterRequest.pd_addr)
}
inline void CompactClusterRequest::set_pd_addr(const char* value) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.CompactClusterRequest.pd_addr)
}
inline void CompactClusterRequest::set_pd_addr(const char* value, size_t size) {
  
  pd_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.CompactClusterRequest.pd_addr)
}
inline ::std::string* CompactClusterRequest::mutable_pd_addr() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.CompactClusterRequest.pd_addr)
  return pd_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CompactClusterRequest::release_pd_addr() {
  // @@protoc_insertion_point(field_release:import_kvpb.CompactClusterRequest.pd_addr)
  
  return pd_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CompactClusterRequest::set_allocated_pd_addr(::std::string* pd_addr) {
  if (pd_addr != NULL) {
    
  } else {
    
  }
  pd_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pd_addr);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CompactClusterRequest.pd_addr)
}

// optional .import_sstpb.CompactRequest request = 2;
inline bool CompactClusterRequest::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void CompactClusterRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
inline const ::import_sstpb::CompactRequest& CompactClusterRequest::request() const {
  // @@protoc_insertion_point(field_get:import_kvpb.CompactClusterRequest.request)
  return request_ != NULL ? *request_
                         : *::import_sstpb::CompactRequest::internal_default_instance();
}
inline ::import_sstpb::CompactRequest* CompactClusterRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::import_sstpb::CompactRequest;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.CompactClusterRequest.request)
  return request_;
}
inline ::import_sstpb::CompactRequest* CompactClusterRequest::release_request() {
  // @@protoc_insertion_point(field_release:import_kvpb.CompactClusterRequest.request)
  
  ::import_sstpb::CompactRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void CompactClusterRequest::set_allocated_request(::import_sstpb::CompactRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.CompactClusterRequest.request)
}

inline const CompactClusterRequest* CompactClusterRequest::internal_default_instance() {
  return &CompactClusterRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CompactClusterResponse

inline const CompactClusterResponse* CompactClusterResponse::internal_default_instance() {
  return &CompactClusterResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// Error_EngineNotFound

// optional bytes uuid = 1;
inline void Error_EngineNotFound::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Error_EngineNotFound::uuid() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Error.EngineNotFound.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error_EngineNotFound::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_kvpb.Error.EngineNotFound.uuid)
}
inline void Error_EngineNotFound::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_kvpb.Error.EngineNotFound.uuid)
}
inline void Error_EngineNotFound::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_kvpb.Error.EngineNotFound.uuid)
}
inline ::std::string* Error_EngineNotFound::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_kvpb.Error.EngineNotFound.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error_EngineNotFound::release_uuid() {
  // @@protoc_insertion_point(field_release:import_kvpb.Error.EngineNotFound.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error_EngineNotFound::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Error.EngineNotFound.uuid)
}

inline const Error_EngineNotFound* Error_EngineNotFound::internal_default_instance() {
  return &Error_EngineNotFound_default_instance_.get();
}
// -------------------------------------------------------------------

// Error

// optional .import_kvpb.Error.EngineNotFound engine_not_found = 1;
inline bool Error::has_engine_not_found() const {
  return this != internal_default_instance() && engine_not_found_ != NULL;
}
inline void Error::clear_engine_not_found() {
  if (GetArenaNoVirtual() == NULL && engine_not_found_ != NULL) delete engine_not_found_;
  engine_not_found_ = NULL;
}
inline const ::import_kvpb::Error_EngineNotFound& Error::engine_not_found() const {
  // @@protoc_insertion_point(field_get:import_kvpb.Error.engine_not_found)
  return engine_not_found_ != NULL ? *engine_not_found_
                         : *::import_kvpb::Error_EngineNotFound::internal_default_instance();
}
inline ::import_kvpb::Error_EngineNotFound* Error::mutable_engine_not_found() {
  
  if (engine_not_found_ == NULL) {
    engine_not_found_ = new ::import_kvpb::Error_EngineNotFound;
  }
  // @@protoc_insertion_point(field_mutable:import_kvpb.Error.engine_not_found)
  return engine_not_found_;
}
inline ::import_kvpb::Error_EngineNotFound* Error::release_engine_not_found() {
  // @@protoc_insertion_point(field_release:import_kvpb.Error.engine_not_found)
  
  ::import_kvpb::Error_EngineNotFound* temp = engine_not_found_;
  engine_not_found_ = NULL;
  return temp;
}
inline void Error::set_allocated_engine_not_found(::import_kvpb::Error_EngineNotFound* engine_not_found) {
  delete engine_not_found_;
  engine_not_found_ = engine_not_found;
  if (engine_not_found) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.Error.engine_not_found)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace import_kvpb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::import_kvpb::Mutation_OP> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::import_kvpb::Mutation_OP>() {
  return ::import_kvpb::Mutation_OP_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_import_5fkvpb_2eproto__INCLUDED
