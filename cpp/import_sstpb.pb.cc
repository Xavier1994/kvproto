// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_sstpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "import_sstpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace import_sstpb {

namespace {

const ::google::protobuf::Descriptor* SwitchModeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchModeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwitchModeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwitchModeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Range_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Range_reflection_ = NULL;
const ::google::protobuf::Descriptor* SSTMeta_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SSTMeta_reflection_ = NULL;
const ::google::protobuf::Descriptor* UploadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UploadRequest_reflection_ = NULL;
struct UploadRequestOneofInstance {
  const ::import_sstpb::SSTMeta* meta_;
  ::google::protobuf::internal::ArenaStringPtr data_;
}* UploadRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* UploadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UploadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* IngestRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IngestRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IngestResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IngestResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompactResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompactResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SwitchMode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_import_5fsstpb_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_import_5fsstpb_2eproto() {
  protobuf_AddDesc_import_5fsstpb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "import_sstpb.proto");
  GOOGLE_CHECK(file != NULL);
  SwitchModeRequest_descriptor_ = file->message_type(0);
  static const int SwitchModeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeRequest, mode_),
  };
  SwitchModeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SwitchModeRequest_descriptor_,
      SwitchModeRequest::internal_default_instance(),
      SwitchModeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SwitchModeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeRequest, _internal_metadata_));
  SwitchModeResponse_descriptor_ = file->message_type(1);
  static const int SwitchModeResponse_offsets_[1] = {
  };
  SwitchModeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SwitchModeResponse_descriptor_,
      SwitchModeResponse::internal_default_instance(),
      SwitchModeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SwitchModeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwitchModeResponse, _internal_metadata_));
  Range_descriptor_ = file->message_type(2);
  static const int Range_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Range, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Range, end_),
  };
  Range_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Range_descriptor_,
      Range::internal_default_instance(),
      Range_offsets_,
      -1,
      -1,
      -1,
      sizeof(Range),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Range, _internal_metadata_));
  SSTMeta_descriptor_ = file->message_type(3);
  static const int SSTMeta_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, crc32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, cf_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, region_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, region_epoch_),
  };
  SSTMeta_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SSTMeta_descriptor_,
      SSTMeta::internal_default_instance(),
      SSTMeta_offsets_,
      -1,
      -1,
      -1,
      sizeof(SSTMeta),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SSTMeta, _internal_metadata_));
  UploadRequest_descriptor_ = file->message_type(4);
  static const int UploadRequest_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UploadRequest_default_oneof_instance_, meta_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UploadRequest_default_oneof_instance_, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadRequest, chunk_),
  };
  UploadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UploadRequest_descriptor_,
      UploadRequest::internal_default_instance(),
      UploadRequest_offsets_,
      -1,
      -1,
      -1,
      UploadRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadRequest, _oneof_case_[0]),
      sizeof(UploadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadRequest, _internal_metadata_));
  UploadResponse_descriptor_ = file->message_type(5);
  static const int UploadResponse_offsets_[1] = {
  };
  UploadResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UploadResponse_descriptor_,
      UploadResponse::internal_default_instance(),
      UploadResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(UploadResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadResponse, _internal_metadata_));
  IngestRequest_descriptor_ = file->message_type(6);
  static const int IngestRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngestRequest, context_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngestRequest, sst_),
  };
  IngestRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IngestRequest_descriptor_,
      IngestRequest::internal_default_instance(),
      IngestRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(IngestRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngestRequest, _internal_metadata_));
  IngestResponse_descriptor_ = file->message_type(7);
  static const int IngestResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngestResponse, error_),
  };
  IngestResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IngestResponse_descriptor_,
      IngestResponse::internal_default_instance(),
      IngestResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(IngestResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngestResponse, _internal_metadata_));
  CompactRequest_descriptor_ = file->message_type(8);
  static const int CompactRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, output_level_),
  };
  CompactRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactRequest_descriptor_,
      CompactRequest::internal_default_instance(),
      CompactRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactRequest, _internal_metadata_));
  CompactResponse_descriptor_ = file->message_type(9);
  static const int CompactResponse_offsets_[1] = {
  };
  CompactResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CompactResponse_descriptor_,
      CompactResponse::internal_default_instance(),
      CompactResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CompactResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactResponse, _internal_metadata_));
  SwitchMode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_import_5fsstpb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SwitchModeRequest_descriptor_, SwitchModeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SwitchModeResponse_descriptor_, SwitchModeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Range_descriptor_, Range::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SSTMeta_descriptor_, SSTMeta::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UploadRequest_descriptor_, UploadRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UploadResponse_descriptor_, UploadResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IngestRequest_descriptor_, IngestRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IngestResponse_descriptor_, IngestResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactRequest_descriptor_, CompactRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CompactResponse_descriptor_, CompactResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_import_5fsstpb_2eproto() {
  SwitchModeRequest_default_instance_.Shutdown();
  delete SwitchModeRequest_reflection_;
  SwitchModeResponse_default_instance_.Shutdown();
  delete SwitchModeResponse_reflection_;
  Range_default_instance_.Shutdown();
  delete Range_reflection_;
  SSTMeta_default_instance_.Shutdown();
  delete SSTMeta_reflection_;
  UploadRequest_default_instance_.Shutdown();
  delete UploadRequest_default_oneof_instance_;
  delete UploadRequest_reflection_;
  UploadResponse_default_instance_.Shutdown();
  delete UploadResponse_reflection_;
  IngestRequest_default_instance_.Shutdown();
  delete IngestRequest_reflection_;
  IngestResponse_default_instance_.Shutdown();
  delete IngestResponse_reflection_;
  CompactRequest_default_instance_.Shutdown();
  delete CompactRequest_reflection_;
  CompactResponse_default_instance_.Shutdown();
  delete CompactResponse_reflection_;
}

void protobuf_InitDefaults_import_5fsstpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::metapb::protobuf_InitDefaults_metapb_2eproto();
  ::errorpb::protobuf_InitDefaults_errorpb_2eproto();
  ::kvrpcpb::protobuf_InitDefaults_kvrpcpb_2eproto();
  ::gogoproto::protobuf_InitDefaults_gogoproto_2fgogo_2eproto();
  SwitchModeRequest_default_instance_.DefaultConstruct();
  SwitchModeResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Range_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SSTMeta_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UploadRequest_default_instance_.DefaultConstruct();
  UploadRequest_default_oneof_instance_ = new UploadRequestOneofInstance();
  UploadResponse_default_instance_.DefaultConstruct();
  IngestRequest_default_instance_.DefaultConstruct();
  IngestResponse_default_instance_.DefaultConstruct();
  CompactRequest_default_instance_.DefaultConstruct();
  CompactResponse_default_instance_.DefaultConstruct();
  SwitchModeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SwitchModeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  Range_default_instance_.get_mutable()->InitAsDefaultInstance();
  SSTMeta_default_instance_.get_mutable()->InitAsDefaultInstance();
  UploadRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UploadResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  IngestRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  IngestResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CompactRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CompactResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_import_5fsstpb_2eproto_once_);
void protobuf_InitDefaults_import_5fsstpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_import_5fsstpb_2eproto_once_,
                 &protobuf_InitDefaults_import_5fsstpb_2eproto_impl);
}
void protobuf_AddDesc_import_5fsstpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_import_5fsstpb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022import_sstpb.proto\022\014import_sstpb\032\014meta"
    "pb.proto\032\rerrorpb.proto\032\rkvrpcpb.proto\032\024"
    "gogoproto/gogo.proto\";\n\021SwitchModeReques"
    "t\022&\n\004mode\030\001 \001(\0162\030.import_sstpb.SwitchMod"
    "e\"\024\n\022SwitchModeResponse\"#\n\005Range\022\r\n\005star"
    "t\030\001 \001(\014\022\013\n\003end\030\002 \001(\014\"\251\001\n\007SSTMeta\022\014\n\004uuid"
    "\030\001 \001(\014\022\"\n\005range\030\002 \001(\0132\023.import_sstpb.Ran"
    "ge\022\r\n\005crc32\030\003 \001(\r\022\016\n\006length\030\004 \001(\004\022\017\n\007cf_"
    "name\030\005 \001(\t\022\021\n\tregion_id\030\006 \001(\004\022)\n\014region_"
    "epoch\030\007 \001(\0132\023.metapb.RegionEpoch\"O\n\rUplo"
    "adRequest\022%\n\004meta\030\001 \001(\0132\025.import_sstpb.S"
    "STMetaH\000\022\016\n\004data\030\002 \001(\014H\000B\007\n\005chunk\"\020\n\016Upl"
    "oadResponse\"V\n\rIngestRequest\022!\n\007context\030"
    "\001 \001(\0132\020.kvrpcpb.Context\022\"\n\003sst\030\002 \001(\0132\025.i"
    "mport_sstpb.SSTMeta\"/\n\016IngestResponse\022\035\n"
    "\005error\030\001 \001(\0132\016.errorpb.Error\"J\n\016CompactR"
    "equest\022\"\n\005range\030\001 \001(\0132\023.import_sstpb.Ran"
    "ge\022\024\n\014output_level\030\002 \001(\005\"\021\n\017CompactRespo"
    "nse*$\n\nSwitchMode\022\n\n\006Normal\020\000\022\n\n\006Import\020"
    "\0012\270\002\n\tImportSST\022Q\n\nSwitchMode\022\037.import_s"
    "stpb.SwitchModeRequest\032 .import_sstpb.Sw"
    "itchModeResponse\"\000\022G\n\006Upload\022\033.import_ss"
    "tpb.UploadRequest\032\034.import_sstpb.UploadR"
    "esponse\"\000(\001\022E\n\006Ingest\022\033.import_sstpb.Ing"
    "estRequest\032\034.import_sstpb.IngestResponse"
    "\"\000\022H\n\007Compact\022\034.import_sstpb.CompactRequ"
    "est\032\035.import_sstpb.CompactResponse\"\000B&\n\030"
    "com.pingcap.tikv.kvproto\340\342\036\001\310\342\036\001\320\342\036\001b\006pr"
    "oto3", 1124);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "import_sstpb.proto", &protobuf_RegisterTypes);
  ::metapb::protobuf_AddDesc_metapb_2eproto();
  ::errorpb::protobuf_AddDesc_errorpb_2eproto();
  ::kvrpcpb::protobuf_AddDesc_kvrpcpb_2eproto();
  ::gogoproto::protobuf_AddDesc_gogoproto_2fgogo_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_import_5fsstpb_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_import_5fsstpb_2eproto_once_);
void protobuf_AddDesc_import_5fsstpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_import_5fsstpb_2eproto_once_,
                 &protobuf_AddDesc_import_5fsstpb_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_import_5fsstpb_2eproto {
  StaticDescriptorInitializer_import_5fsstpb_2eproto() {
    protobuf_AddDesc_import_5fsstpb_2eproto();
  }
} static_descriptor_initializer_import_5fsstpb_2eproto_;
const ::google::protobuf::EnumDescriptor* SwitchMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchMode_descriptor_;
}
bool SwitchMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchModeRequest::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeRequest::SwitchModeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.SwitchModeRequest)
}

void SwitchModeRequest::InitAsDefaultInstance() {
}

SwitchModeRequest::SwitchModeRequest(const SwitchModeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.SwitchModeRequest)
}

void SwitchModeRequest::SharedCtor() {
  mode_ = 0;
  _cached_size_ = 0;
}

SwitchModeRequest::~SwitchModeRequest() {
  // @@protoc_insertion_point(destructor:import_sstpb.SwitchModeRequest)
  SharedDtor();
}

void SwitchModeRequest::SharedDtor() {
}

void SwitchModeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchModeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchModeRequest_descriptor_;
}

const SwitchModeRequest& SwitchModeRequest::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SwitchModeRequest> SwitchModeRequest_default_instance_;

SwitchModeRequest* SwitchModeRequest::New(::google::protobuf::Arena* arena) const {
  SwitchModeRequest* n = new SwitchModeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.SwitchModeRequest)
  mode_ = 0;
}

bool SwitchModeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.SwitchModeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_sstpb.SwitchMode mode = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::import_sstpb::SwitchMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.SwitchModeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.SwitchModeRequest)
  return false;
#undef DO_
}

void SwitchModeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.SwitchModeRequest)
  // optional .import_sstpb.SwitchMode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.SwitchModeRequest)
}

::google::protobuf::uint8* SwitchModeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.SwitchModeRequest)
  // optional .import_sstpb.SwitchMode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.SwitchModeRequest)
  return target;
}

size_t SwitchModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.SwitchModeRequest)
  size_t total_size = 0;

  // optional .import_sstpb.SwitchMode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchModeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.SwitchModeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SwitchModeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.SwitchModeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.SwitchModeRequest)
    UnsafeMergeFrom(*source);
  }
}

void SwitchModeRequest::MergeFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.SwitchModeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SwitchModeRequest::UnsafeMergeFrom(const SwitchModeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void SwitchModeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeRequest::CopyFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SwitchModeRequest::IsInitialized() const {

  return true;
}

void SwitchModeRequest::Swap(SwitchModeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeRequest::InternalSwap(SwitchModeRequest* other) {
  std::swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchModeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchModeRequest_descriptor_;
  metadata.reflection = SwitchModeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchModeRequest

// optional .import_sstpb.SwitchMode mode = 1;
void SwitchModeRequest::clear_mode() {
  mode_ = 0;
}
::import_sstpb::SwitchMode SwitchModeRequest::mode() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SwitchModeRequest.mode)
  return static_cast< ::import_sstpb::SwitchMode >(mode_);
}
void SwitchModeRequest::set_mode(::import_sstpb::SwitchMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SwitchModeRequest.mode)
}

inline const SwitchModeRequest* SwitchModeRequest::internal_default_instance() {
  return &SwitchModeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeResponse::SwitchModeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.SwitchModeResponse)
}

void SwitchModeResponse::InitAsDefaultInstance() {
}

SwitchModeResponse::SwitchModeResponse(const SwitchModeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.SwitchModeResponse)
}

void SwitchModeResponse::SharedCtor() {
  _cached_size_ = 0;
}

SwitchModeResponse::~SwitchModeResponse() {
  // @@protoc_insertion_point(destructor:import_sstpb.SwitchModeResponse)
  SharedDtor();
}

void SwitchModeResponse::SharedDtor() {
}

void SwitchModeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwitchModeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwitchModeResponse_descriptor_;
}

const SwitchModeResponse& SwitchModeResponse::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SwitchModeResponse> SwitchModeResponse_default_instance_;

SwitchModeResponse* SwitchModeResponse::New(::google::protobuf::Arena* arena) const {
  SwitchModeResponse* n = new SwitchModeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SwitchModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.SwitchModeResponse)
}

bool SwitchModeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.SwitchModeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.SwitchModeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.SwitchModeResponse)
  return false;
#undef DO_
}

void SwitchModeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.SwitchModeResponse)
  // @@protoc_insertion_point(serialize_end:import_sstpb.SwitchModeResponse)
}

::google::protobuf::uint8* SwitchModeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.SwitchModeResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.SwitchModeResponse)
  return target;
}

size_t SwitchModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.SwitchModeResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwitchModeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.SwitchModeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SwitchModeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.SwitchModeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.SwitchModeResponse)
    UnsafeMergeFrom(*source);
  }
}

void SwitchModeResponse::MergeFrom(const SwitchModeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.SwitchModeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SwitchModeResponse::UnsafeMergeFrom(const SwitchModeResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void SwitchModeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.SwitchModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeResponse::CopyFrom(const SwitchModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.SwitchModeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SwitchModeResponse::IsInitialized() const {

  return true;
}

void SwitchModeResponse::Swap(SwitchModeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeResponse::InternalSwap(SwitchModeResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SwitchModeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwitchModeResponse_descriptor_;
  metadata.reflection = SwitchModeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchModeResponse

inline const SwitchModeResponse* SwitchModeResponse::internal_default_instance() {
  return &SwitchModeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kStartFieldNumber;
const int Range::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.Range)
}

void Range::InitAsDefaultInstance() {
}

Range::Range(const Range& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.Range)
}

void Range::SharedCtor() {
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:import_sstpb.Range)
  SharedDtor();
}

void Range::SharedDtor() {
  start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Range::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Range_descriptor_;
}

const Range& Range::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Range> Range_default_instance_;

Range* Range::New(::google::protobuf::Arena* arena) const {
  Range* n = new Range;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.Range)
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.Range)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes start = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_end;
        break;
      }

      // optional bytes end = 2;
      case 2: {
        if (tag == 18) {
         parse_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.Range)
  // optional bytes start = 1;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->start(), output);
  }

  // optional bytes end = 2;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->end(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.Range)
  // optional bytes start = 1;
  if (this->start().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->start(), target);
  }

  // optional bytes end = 2;
  if (this->end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->end(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.Range)
  size_t total_size = 0;

  // optional bytes start = 1;
  if (this->start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start());
  }

  // optional bytes end = 2;
  if (this->end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.Range)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.Range)
    UnsafeMergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.Range)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Range::UnsafeMergeFrom(const Range& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.start().size() > 0) {

    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  if (from.end().size() > 0) {

    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.Range)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Range::IsInitialized() const {

  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  start_.Swap(&other->start_);
  end_.Swap(&other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Range_descriptor_;
  metadata.reflection = Range_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Range

// optional bytes start = 1;
void Range::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Range::start() const {
  // @@protoc_insertion_point(field_get:import_sstpb.Range.start)
  return start_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Range::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.Range.start)
}
void Range::set_start(const char* value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.Range.start)
}
void Range::set_start(const void* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.Range.start)
}
::std::string* Range::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.Range.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Range::release_start() {
  // @@protoc_insertion_point(field_release:import_sstpb.Range.start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Range::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.Range.start)
}

// optional bytes end = 2;
void Range::clear_end() {
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Range::end() const {
  // @@protoc_insertion_point(field_get:import_sstpb.Range.end)
  return end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Range::set_end(const ::std::string& value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.Range.end)
}
void Range::set_end(const char* value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.Range.end)
}
void Range::set_end(const void* value, size_t size) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.Range.end)
}
::std::string* Range::mutable_end() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.Range.end)
  return end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Range::release_end() {
  // @@protoc_insertion_point(field_release:import_sstpb.Range.end)
  
  return end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Range::set_allocated_end(::std::string* end) {
  if (end != NULL) {
    
  } else {
    
  }
  end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.Range.end)
}

inline const Range* Range::internal_default_instance() {
  return &Range_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SSTMeta::kUuidFieldNumber;
const int SSTMeta::kRangeFieldNumber;
const int SSTMeta::kCrc32FieldNumber;
const int SSTMeta::kLengthFieldNumber;
const int SSTMeta::kCfNameFieldNumber;
const int SSTMeta::kRegionIdFieldNumber;
const int SSTMeta::kRegionEpochFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SSTMeta::SSTMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.SSTMeta)
}

void SSTMeta::InitAsDefaultInstance() {
  range_ = const_cast< ::import_sstpb::Range*>(
      ::import_sstpb::Range::internal_default_instance());
  region_epoch_ = const_cast< ::metapb::RegionEpoch*>(
      ::metapb::RegionEpoch::internal_default_instance());
}

SSTMeta::SSTMeta(const SSTMeta& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.SSTMeta)
}

void SSTMeta::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_ = NULL;
  region_epoch_ = NULL;
  ::memset(&length_, 0, reinterpret_cast<char*>(&crc32_) -
    reinterpret_cast<char*>(&length_) + sizeof(crc32_));
  _cached_size_ = 0;
}

SSTMeta::~SSTMeta() {
  // @@protoc_insertion_point(destructor:import_sstpb.SSTMeta)
  SharedDtor();
}

void SSTMeta::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SSTMeta_default_instance_.get()) {
    delete range_;
    delete region_epoch_;
  }
}

void SSTMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SSTMeta::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SSTMeta_descriptor_;
}

const SSTMeta& SSTMeta::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SSTMeta> SSTMeta_default_instance_;

SSTMeta* SSTMeta::New(::google::protobuf::Arena* arena) const {
  SSTMeta* n = new SSTMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SSTMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.SSTMeta)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SSTMeta, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SSTMeta*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(length_, crc32_);
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
  cf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) delete region_epoch_;
  region_epoch_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool SSTMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.SSTMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_range;
        break;
      }

      // optional .import_sstpb.Range range = 2;
      case 2: {
        if (tag == 18) {
         parse_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_crc32;
        break;
      }

      // optional uint32 crc32 = 3;
      case 3: {
        if (tag == 24) {
         parse_crc32:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc32_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_length;
        break;
      }

      // optional uint64 length = 4;
      case 4: {
        if (tag == 32) {
         parse_length:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cf_name;
        break;
      }

      // optional string cf_name = 5;
      case 5: {
        if (tag == 42) {
         parse_cf_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf_name().data(), this->cf_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_sstpb.SSTMeta.cf_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_region_id;
        break;
      }

      // optional uint64 region_id = 6;
      case 6: {
        if (tag == 48) {
         parse_region_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_region_epoch;
        break;
      }

      // optional .metapb.RegionEpoch region_epoch = 7;
      case 7: {
        if (tag == 58) {
         parse_region_epoch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region_epoch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.SSTMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.SSTMeta)
  return false;
#undef DO_
}

void SSTMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.SSTMeta)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // optional .import_sstpb.Range range = 2;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->range_, output);
  }

  // optional uint32 crc32 = 3;
  if (this->crc32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->crc32(), output);
  }

  // optional uint64 length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->length(), output);
  }

  // optional string cf_name = 5;
  if (this->cf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf_name().data(), this->cf_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_sstpb.SSTMeta.cf_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cf_name(), output);
  }

  // optional uint64 region_id = 6;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->region_id(), output);
  }

  // optional .metapb.RegionEpoch region_epoch = 7;
  if (this->has_region_epoch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->region_epoch_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.SSTMeta)
}

::google::protobuf::uint8* SSTMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.SSTMeta)
  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // optional .import_sstpb.Range range = 2;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->range_, false, target);
  }

  // optional uint32 crc32 = 3;
  if (this->crc32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->crc32(), target);
  }

  // optional uint64 length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->length(), target);
  }

  // optional string cf_name = 5;
  if (this->cf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf_name().data(), this->cf_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_sstpb.SSTMeta.cf_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cf_name(), target);
  }

  // optional uint64 region_id = 6;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->region_id(), target);
  }

  // optional .metapb.RegionEpoch region_epoch = 7;
  if (this->has_region_epoch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->region_epoch_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.SSTMeta)
  return target;
}

size_t SSTMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.SSTMeta)
  size_t total_size = 0;

  // optional bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  // optional .import_sstpb.Range range = 2;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->range_);
  }

  // optional uint32 crc32 = 3;
  if (this->crc32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crc32());
  }

  // optional uint64 length = 4;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  // optional string cf_name = 5;
  if (this->cf_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf_name());
  }

  // optional uint64 region_id = 6;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  // optional .metapb.RegionEpoch region_epoch = 7;
  if (this->has_region_epoch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->region_epoch_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SSTMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.SSTMeta)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SSTMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SSTMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.SSTMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.SSTMeta)
    UnsafeMergeFrom(*source);
  }
}

void SSTMeta::MergeFrom(const SSTMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.SSTMeta)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SSTMeta::UnsafeMergeFrom(const SSTMeta& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_range()) {
    mutable_range()->::import_sstpb::Range::MergeFrom(from.range());
  }
  if (from.crc32() != 0) {
    set_crc32(from.crc32());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.cf_name().size() > 0) {

    cf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_name_);
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.has_region_epoch()) {
    mutable_region_epoch()->::metapb::RegionEpoch::MergeFrom(from.region_epoch());
  }
}

void SSTMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.SSTMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSTMeta::CopyFrom(const SSTMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.SSTMeta)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SSTMeta::IsInitialized() const {

  return true;
}

void SSTMeta::Swap(SSTMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SSTMeta::InternalSwap(SSTMeta* other) {
  uuid_.Swap(&other->uuid_);
  std::swap(range_, other->range_);
  std::swap(crc32_, other->crc32_);
  std::swap(length_, other->length_);
  cf_name_.Swap(&other->cf_name_);
  std::swap(region_id_, other->region_id_);
  std::swap(region_epoch_, other->region_epoch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SSTMeta::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SSTMeta_descriptor_;
  metadata.reflection = SSTMeta_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SSTMeta

// optional bytes uuid = 1;
void SSTMeta::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SSTMeta::uuid() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SSTMeta::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.uuid)
}
void SSTMeta::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.SSTMeta.uuid)
}
void SSTMeta::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.SSTMeta.uuid)
}
::std::string* SSTMeta::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SSTMeta::release_uuid() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SSTMeta::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.uuid)
}

// optional .import_sstpb.Range range = 2;
bool SSTMeta::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
void SSTMeta::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
const ::import_sstpb::Range& SSTMeta::range() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.range)
  return range_ != NULL ? *range_
                         : *::import_sstpb::Range::internal_default_instance();
}
::import_sstpb::Range* SSTMeta::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::import_sstpb::Range;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.range)
  return range_;
}
::import_sstpb::Range* SSTMeta::release_range() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.range)
  
  ::import_sstpb::Range* temp = range_;
  range_ = NULL;
  return temp;
}
void SSTMeta::set_allocated_range(::import_sstpb::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.range)
}

// optional uint32 crc32 = 3;
void SSTMeta::clear_crc32() {
  crc32_ = 0u;
}
::google::protobuf::uint32 SSTMeta::crc32() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.crc32)
  return crc32_;
}
void SSTMeta::set_crc32(::google::protobuf::uint32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.crc32)
}

// optional uint64 length = 4;
void SSTMeta::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SSTMeta::length() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.length)
  return length_;
}
void SSTMeta::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.length)
}

// optional string cf_name = 5;
void SSTMeta::clear_cf_name() {
  cf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SSTMeta::cf_name() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.cf_name)
  return cf_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SSTMeta::set_cf_name(const ::std::string& value) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.cf_name)
}
void SSTMeta::set_cf_name(const char* value) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.SSTMeta.cf_name)
}
void SSTMeta::set_cf_name(const char* value, size_t size) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.SSTMeta.cf_name)
}
::std::string* SSTMeta::mutable_cf_name() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.cf_name)
  return cf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SSTMeta::release_cf_name() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.cf_name)
  
  return cf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SSTMeta::set_allocated_cf_name(::std::string* cf_name) {
  if (cf_name != NULL) {
    
  } else {
    
  }
  cf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cf_name);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.cf_name)
}

// optional uint64 region_id = 6;
void SSTMeta::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SSTMeta::region_id() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.region_id)
  return region_id_;
}
void SSTMeta::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.region_id)
}

// optional .metapb.RegionEpoch region_epoch = 7;
bool SSTMeta::has_region_epoch() const {
  return this != internal_default_instance() && region_epoch_ != NULL;
}
void SSTMeta::clear_region_epoch() {
  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) delete region_epoch_;
  region_epoch_ = NULL;
}
const ::metapb::RegionEpoch& SSTMeta::region_epoch() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.region_epoch)
  return region_epoch_ != NULL ? *region_epoch_
                         : *::metapb::RegionEpoch::internal_default_instance();
}
::metapb::RegionEpoch* SSTMeta::mutable_region_epoch() {
  
  if (region_epoch_ == NULL) {
    region_epoch_ = new ::metapb::RegionEpoch;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.region_epoch)
  return region_epoch_;
}
::metapb::RegionEpoch* SSTMeta::release_region_epoch() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.region_epoch)
  
  ::metapb::RegionEpoch* temp = region_epoch_;
  region_epoch_ = NULL;
  return temp;
}
void SSTMeta::set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch) {
  delete region_epoch_;
  region_epoch_ = region_epoch;
  if (region_epoch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.region_epoch)
}

inline const SSTMeta* SSTMeta::internal_default_instance() {
  return &SSTMeta_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadRequest::kMetaFieldNumber;
const int UploadRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadRequest::UploadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.UploadRequest)
}

void UploadRequest::InitAsDefaultInstance() {
  UploadRequest_default_oneof_instance_->meta_ = const_cast< ::import_sstpb::SSTMeta*>(
      ::import_sstpb::SSTMeta::internal_default_instance());
  UploadRequest_default_oneof_instance_->data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UploadRequest::UploadRequest(const UploadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.UploadRequest)
}

void UploadRequest::SharedCtor() {
  clear_has_chunk();
  _cached_size_ = 0;
}

UploadRequest::~UploadRequest() {
  // @@protoc_insertion_point(destructor:import_sstpb.UploadRequest)
  SharedDtor();
}

void UploadRequest::SharedDtor() {
  if (has_chunk()) {
    clear_chunk();
  }
}

void UploadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UploadRequest_descriptor_;
}

const UploadRequest& UploadRequest::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UploadRequest> UploadRequest_default_instance_;

UploadRequest* UploadRequest::New(::google::protobuf::Arena* arena) const {
  UploadRequest* n = new UploadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadRequest::clear_chunk() {
// @@protoc_insertion_point(one_of_clear_start:import_sstpb.UploadRequest)
  switch (chunk_case()) {
    case kMeta: {
      delete chunk_.meta_;
      break;
    }
    case kData: {
      chunk_.data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHUNK_NOT_SET;
}


void UploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.UploadRequest)
  clear_chunk();
}

bool UploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.UploadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_sstpb.SSTMeta meta = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        goto after_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
       after_data:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.UploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.UploadRequest)
  return false;
#undef DO_
}

void UploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.UploadRequest)
  // optional .import_sstpb.SSTMeta meta = 1;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *chunk_.meta_, output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.UploadRequest)
}

::google::protobuf::uint8* UploadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.UploadRequest)
  // optional .import_sstpb.SSTMeta meta = 1;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *chunk_.meta_, false, target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.UploadRequest)
  return target;
}

size_t UploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.UploadRequest)
  size_t total_size = 0;

  switch (chunk_case()) {
    // optional .import_sstpb.SSTMeta meta = 1;
    case kMeta: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *chunk_.meta_);
      break;
    }
    // optional bytes data = 2;
    case kData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.UploadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UploadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.UploadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.UploadRequest)
    UnsafeMergeFrom(*source);
  }
}

void UploadRequest::MergeFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.UploadRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UploadRequest::UnsafeMergeFrom(const UploadRequest& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.chunk_case()) {
    case kMeta: {
      mutable_meta()->::import_sstpb::SSTMeta::MergeFrom(from.meta());
      break;
    }
    case kData: {
      set_data(from.data());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
}

void UploadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.UploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadRequest::CopyFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.UploadRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UploadRequest::IsInitialized() const {

  return true;
}

void UploadRequest::Swap(UploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadRequest::InternalSwap(UploadRequest* other) {
  std::swap(chunk_, other->chunk_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UploadRequest_descriptor_;
  metadata.reflection = UploadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadRequest

// optional .import_sstpb.SSTMeta meta = 1;
bool UploadRequest::has_meta() const {
  return chunk_case() == kMeta;
}
void UploadRequest::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
void UploadRequest::clear_meta() {
  if (has_meta()) {
    delete chunk_.meta_;
    clear_has_chunk();
  }
}
 const ::import_sstpb::SSTMeta& UploadRequest::meta() const {
  // @@protoc_insertion_point(field_get:import_sstpb.UploadRequest.meta)
  return has_meta()
      ? *chunk_.meta_
      : ::import_sstpb::SSTMeta::default_instance();
}
::import_sstpb::SSTMeta* UploadRequest::mutable_meta() {
  if (!has_meta()) {
    clear_chunk();
    set_has_meta();
    chunk_.meta_ = new ::import_sstpb::SSTMeta;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.UploadRequest.meta)
  return chunk_.meta_;
}
::import_sstpb::SSTMeta* UploadRequest::release_meta() {
  // @@protoc_insertion_point(field_release:import_sstpb.UploadRequest.meta)
  if (has_meta()) {
    clear_has_chunk();
    ::import_sstpb::SSTMeta* temp = chunk_.meta_;
    chunk_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UploadRequest::set_allocated_meta(::import_sstpb::SSTMeta* meta) {
  clear_chunk();
  if (meta) {
    set_has_meta();
    chunk_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.UploadRequest.meta)
}

// optional bytes data = 2;
bool UploadRequest::has_data() const {
  return chunk_case() == kData;
}
void UploadRequest::set_has_data() {
  _oneof_case_[0] = kData;
}
void UploadRequest::clear_data() {
  if (has_data()) {
    chunk_.data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_chunk();
  }
}
const ::std::string& UploadRequest::data() const {
  // @@protoc_insertion_point(field_get:import_sstpb.UploadRequest.data)
  if (has_data()) {
    return chunk_.data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void UploadRequest::set_data(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
}
void UploadRequest::set_data(const char* value) {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.UploadRequest.data)
}
void UploadRequest::set_data(const void* value, size_t size) {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.UploadRequest.data)
}
::std::string* UploadRequest::mutable_data() {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.UploadRequest.data)
  return chunk_.data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UploadRequest::release_data() {
  // @@protoc_insertion_point(field_release:import_sstpb.UploadRequest.data)
  if (has_data()) {
    clear_has_chunk();
    return chunk_.data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void UploadRequest::set_allocated_data(::std::string* data) {
  if (!has_data()) {
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_chunk();
  if (data != NULL) {
    set_has_data();
    chunk_.data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        data);
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.UploadRequest.data)
}

bool UploadRequest::has_chunk() const {
  return chunk_case() != CHUNK_NOT_SET;
}
void UploadRequest::clear_has_chunk() {
  _oneof_case_[0] = CHUNK_NOT_SET;
}
UploadRequest::ChunkCase UploadRequest::chunk_case() const {
  return UploadRequest::ChunkCase(_oneof_case_[0]);
}
inline const UploadRequest* UploadRequest::internal_default_instance() {
  return &UploadRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadResponse::UploadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.UploadResponse)
}

void UploadResponse::InitAsDefaultInstance() {
}

UploadResponse::UploadResponse(const UploadResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.UploadResponse)
}

void UploadResponse::SharedCtor() {
  _cached_size_ = 0;
}

UploadResponse::~UploadResponse() {
  // @@protoc_insertion_point(destructor:import_sstpb.UploadResponse)
  SharedDtor();
}

void UploadResponse::SharedDtor() {
}

void UploadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UploadResponse_descriptor_;
}

const UploadResponse& UploadResponse::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UploadResponse> UploadResponse_default_instance_;

UploadResponse* UploadResponse::New(::google::protobuf::Arena* arena) const {
  UploadResponse* n = new UploadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.UploadResponse)
}

bool UploadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.UploadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.UploadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.UploadResponse)
  return false;
#undef DO_
}

void UploadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.UploadResponse)
  // @@protoc_insertion_point(serialize_end:import_sstpb.UploadResponse)
}

::google::protobuf::uint8* UploadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.UploadResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.UploadResponse)
  return target;
}

size_t UploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.UploadResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.UploadResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UploadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.UploadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.UploadResponse)
    UnsafeMergeFrom(*source);
  }
}

void UploadResponse::MergeFrom(const UploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.UploadResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UploadResponse::UnsafeMergeFrom(const UploadResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void UploadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.UploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadResponse::CopyFrom(const UploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.UploadResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UploadResponse::IsInitialized() const {

  return true;
}

void UploadResponse::Swap(UploadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadResponse::InternalSwap(UploadResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UploadResponse_descriptor_;
  metadata.reflection = UploadResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadResponse

inline const UploadResponse* UploadResponse::internal_default_instance() {
  return &UploadResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IngestRequest::kContextFieldNumber;
const int IngestRequest::kSstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IngestRequest::IngestRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.IngestRequest)
}

void IngestRequest::InitAsDefaultInstance() {
  context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
  sst_ = const_cast< ::import_sstpb::SSTMeta*>(
      ::import_sstpb::SSTMeta::internal_default_instance());
}

IngestRequest::IngestRequest(const IngestRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.IngestRequest)
}

void IngestRequest::SharedCtor() {
  context_ = NULL;
  sst_ = NULL;
  _cached_size_ = 0;
}

IngestRequest::~IngestRequest() {
  // @@protoc_insertion_point(destructor:import_sstpb.IngestRequest)
  SharedDtor();
}

void IngestRequest::SharedDtor() {
  if (this != &IngestRequest_default_instance_.get()) {
    delete context_;
    delete sst_;
  }
}

void IngestRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IngestRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IngestRequest_descriptor_;
}

const IngestRequest& IngestRequest::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IngestRequest> IngestRequest_default_instance_;

IngestRequest* IngestRequest::New(::google::protobuf::Arena* arena) const {
  IngestRequest* n = new IngestRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IngestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.IngestRequest)
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && sst_ != NULL) delete sst_;
  sst_ = NULL;
}

bool IngestRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.IngestRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .kvrpcpb.Context context = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sst;
        break;
      }

      // optional .import_sstpb.SSTMeta sst = 2;
      case 2: {
        if (tag == 18) {
         parse_sst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sst()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.IngestRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.IngestRequest)
  return false;
#undef DO_
}

void IngestRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.IngestRequest)
  // optional .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->context_, output);
  }

  // optional .import_sstpb.SSTMeta sst = 2;
  if (this->has_sst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sst_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.IngestRequest)
}

::google::protobuf::uint8* IngestRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.IngestRequest)
  // optional .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->context_, false, target);
  }

  // optional .import_sstpb.SSTMeta sst = 2;
  if (this->has_sst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->sst_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.IngestRequest)
  return target;
}

size_t IngestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.IngestRequest)
  size_t total_size = 0;

  // optional .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->context_);
  }

  // optional .import_sstpb.SSTMeta sst = 2;
  if (this->has_sst()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sst_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IngestRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.IngestRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IngestRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IngestRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.IngestRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.IngestRequest)
    UnsafeMergeFrom(*source);
  }
}

void IngestRequest::MergeFrom(const IngestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.IngestRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IngestRequest::UnsafeMergeFrom(const IngestRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.has_sst()) {
    mutable_sst()->::import_sstpb::SSTMeta::MergeFrom(from.sst());
  }
}

void IngestRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.IngestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IngestRequest::CopyFrom(const IngestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.IngestRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IngestRequest::IsInitialized() const {

  return true;
}

void IngestRequest::Swap(IngestRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IngestRequest::InternalSwap(IngestRequest* other) {
  std::swap(context_, other->context_);
  std::swap(sst_, other->sst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IngestRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IngestRequest_descriptor_;
  metadata.reflection = IngestRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IngestRequest

// optional .kvrpcpb.Context context = 1;
bool IngestRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
void IngestRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
const ::kvrpcpb::Context& IngestRequest::context() const {
  // @@protoc_insertion_point(field_get:import_sstpb.IngestRequest.context)
  return context_ != NULL ? *context_
                         : *::kvrpcpb::Context::internal_default_instance();
}
::kvrpcpb::Context* IngestRequest::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::kvrpcpb::Context;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestRequest.context)
  return context_;
}
::kvrpcpb::Context* IngestRequest::release_context() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestRequest.context)
  
  ::kvrpcpb::Context* temp = context_;
  context_ = NULL;
  return temp;
}
void IngestRequest::set_allocated_context(::kvrpcpb::Context* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestRequest.context)
}

// optional .import_sstpb.SSTMeta sst = 2;
bool IngestRequest::has_sst() const {
  return this != internal_default_instance() && sst_ != NULL;
}
void IngestRequest::clear_sst() {
  if (GetArenaNoVirtual() == NULL && sst_ != NULL) delete sst_;
  sst_ = NULL;
}
const ::import_sstpb::SSTMeta& IngestRequest::sst() const {
  // @@protoc_insertion_point(field_get:import_sstpb.IngestRequest.sst)
  return sst_ != NULL ? *sst_
                         : *::import_sstpb::SSTMeta::internal_default_instance();
}
::import_sstpb::SSTMeta* IngestRequest::mutable_sst() {
  
  if (sst_ == NULL) {
    sst_ = new ::import_sstpb::SSTMeta;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestRequest.sst)
  return sst_;
}
::import_sstpb::SSTMeta* IngestRequest::release_sst() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestRequest.sst)
  
  ::import_sstpb::SSTMeta* temp = sst_;
  sst_ = NULL;
  return temp;
}
void IngestRequest::set_allocated_sst(::import_sstpb::SSTMeta* sst) {
  delete sst_;
  sst_ = sst;
  if (sst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestRequest.sst)
}

inline const IngestRequest* IngestRequest::internal_default_instance() {
  return &IngestRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IngestResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IngestResponse::IngestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.IngestResponse)
}

void IngestResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}

IngestResponse::IngestResponse(const IngestResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.IngestResponse)
}

void IngestResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

IngestResponse::~IngestResponse() {
  // @@protoc_insertion_point(destructor:import_sstpb.IngestResponse)
  SharedDtor();
}

void IngestResponse::SharedDtor() {
  if (this != &IngestResponse_default_instance_.get()) {
    delete error_;
  }
}

void IngestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IngestResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IngestResponse_descriptor_;
}

const IngestResponse& IngestResponse::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IngestResponse> IngestResponse_default_instance_;

IngestResponse* IngestResponse::New(::google::protobuf::Arena* arena) const {
  IngestResponse* n = new IngestResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IngestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.IngestResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool IngestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.IngestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .errorpb.Error error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.IngestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.IngestResponse)
  return false;
#undef DO_
}

void IngestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.IngestResponse)
  // optional .errorpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.IngestResponse)
}

::google::protobuf::uint8* IngestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.IngestResponse)
  // optional .errorpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.IngestResponse)
  return target;
}

size_t IngestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.IngestResponse)
  size_t total_size = 0;

  // optional .errorpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IngestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.IngestResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IngestResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IngestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.IngestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.IngestResponse)
    UnsafeMergeFrom(*source);
  }
}

void IngestResponse::MergeFrom(const IngestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.IngestResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IngestResponse::UnsafeMergeFrom(const IngestResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_error()) {
    mutable_error()->::errorpb::Error::MergeFrom(from.error());
  }
}

void IngestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.IngestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IngestResponse::CopyFrom(const IngestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.IngestResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IngestResponse::IsInitialized() const {

  return true;
}

void IngestResponse::Swap(IngestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IngestResponse::InternalSwap(IngestResponse* other) {
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IngestResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IngestResponse_descriptor_;
  metadata.reflection = IngestResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IngestResponse

// optional .errorpb.Error error = 1;
bool IngestResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void IngestResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::errorpb::Error& IngestResponse::error() const {
  // @@protoc_insertion_point(field_get:import_sstpb.IngestResponse.error)
  return error_ != NULL ? *error_
                         : *::errorpb::Error::internal_default_instance();
}
::errorpb::Error* IngestResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::errorpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestResponse.error)
  return error_;
}
::errorpb::Error* IngestResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestResponse.error)
  
  ::errorpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
void IngestResponse::set_allocated_error(::errorpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestResponse.error)
}

inline const IngestResponse* IngestResponse::internal_default_instance() {
  return &IngestResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactRequest::kRangeFieldNumber;
const int CompactRequest::kOutputLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactRequest::CompactRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.CompactRequest)
}

void CompactRequest::InitAsDefaultInstance() {
  range_ = const_cast< ::import_sstpb::Range*>(
      ::import_sstpb::Range::internal_default_instance());
}

CompactRequest::CompactRequest(const CompactRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.CompactRequest)
}

void CompactRequest::SharedCtor() {
  range_ = NULL;
  output_level_ = 0;
  _cached_size_ = 0;
}

CompactRequest::~CompactRequest() {
  // @@protoc_insertion_point(destructor:import_sstpb.CompactRequest)
  SharedDtor();
}

void CompactRequest::SharedDtor() {
  if (this != &CompactRequest_default_instance_.get()) {
    delete range_;
  }
}

void CompactRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactRequest_descriptor_;
}

const CompactRequest& CompactRequest::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CompactRequest> CompactRequest_default_instance_;

CompactRequest* CompactRequest::New(::google::protobuf::Arena* arena) const {
  CompactRequest* n = new CompactRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.CompactRequest)
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
  output_level_ = 0;
}

bool CompactRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.CompactRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .import_sstpb.Range range = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_output_level;
        break;
      }

      // optional int32 output_level = 2;
      case 2: {
        if (tag == 16) {
         parse_output_level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &output_level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.CompactRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.CompactRequest)
  return false;
#undef DO_
}

void CompactRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.CompactRequest)
  // optional .import_sstpb.Range range = 1;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->range_, output);
  }

  // optional int32 output_level = 2;
  if (this->output_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->output_level(), output);
  }

  // @@protoc_insertion_point(serialize_end:import_sstpb.CompactRequest)
}

::google::protobuf::uint8* CompactRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.CompactRequest)
  // optional .import_sstpb.Range range = 1;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->range_, false, target);
  }

  // optional int32 output_level = 2;
  if (this->output_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->output_level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.CompactRequest)
  return target;
}

size_t CompactRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.CompactRequest)
  size_t total_size = 0;

  // optional .import_sstpb.Range range = 1;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->range_);
  }

  // optional int32 output_level = 2;
  if (this->output_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->output_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.CompactRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CompactRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.CompactRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.CompactRequest)
    UnsafeMergeFrom(*source);
  }
}

void CompactRequest::MergeFrom(const CompactRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.CompactRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CompactRequest::UnsafeMergeFrom(const CompactRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_range()) {
    mutable_range()->::import_sstpb::Range::MergeFrom(from.range());
  }
  if (from.output_level() != 0) {
    set_output_level(from.output_level());
  }
}

void CompactRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.CompactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactRequest::CopyFrom(const CompactRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.CompactRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CompactRequest::IsInitialized() const {

  return true;
}

void CompactRequest::Swap(CompactRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactRequest::InternalSwap(CompactRequest* other) {
  std::swap(range_, other->range_);
  std::swap(output_level_, other->output_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactRequest_descriptor_;
  metadata.reflection = CompactRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactRequest

// optional .import_sstpb.Range range = 1;
bool CompactRequest::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
void CompactRequest::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
const ::import_sstpb::Range& CompactRequest::range() const {
  // @@protoc_insertion_point(field_get:import_sstpb.CompactRequest.range)
  return range_ != NULL ? *range_
                         : *::import_sstpb::Range::internal_default_instance();
}
::import_sstpb::Range* CompactRequest::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::import_sstpb::Range;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.CompactRequest.range)
  return range_;
}
::import_sstpb::Range* CompactRequest::release_range() {
  // @@protoc_insertion_point(field_release:import_sstpb.CompactRequest.range)
  
  ::import_sstpb::Range* temp = range_;
  range_ = NULL;
  return temp;
}
void CompactRequest::set_allocated_range(::import_sstpb::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.CompactRequest.range)
}

// optional int32 output_level = 2;
void CompactRequest::clear_output_level() {
  output_level_ = 0;
}
::google::protobuf::int32 CompactRequest::output_level() const {
  // @@protoc_insertion_point(field_get:import_sstpb.CompactRequest.output_level)
  return output_level_;
}
void CompactRequest::set_output_level(::google::protobuf::int32 value) {
  
  output_level_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.CompactRequest.output_level)
}

inline const CompactRequest* CompactRequest::internal_default_instance() {
  return &CompactRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactResponse::CompactResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_import_5fsstpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_sstpb.CompactResponse)
}

void CompactResponse::InitAsDefaultInstance() {
}

CompactResponse::CompactResponse(const CompactResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:import_sstpb.CompactResponse)
}

void CompactResponse::SharedCtor() {
  _cached_size_ = 0;
}

CompactResponse::~CompactResponse() {
  // @@protoc_insertion_point(destructor:import_sstpb.CompactResponse)
  SharedDtor();
}

void CompactResponse::SharedDtor() {
}

void CompactResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompactResponse_descriptor_;
}

const CompactResponse& CompactResponse::default_instance() {
  protobuf_InitDefaults_import_5fsstpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CompactResponse> CompactResponse_default_instance_;

CompactResponse* CompactResponse::New(::google::protobuf::Arena* arena) const {
  CompactResponse* n = new CompactResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_sstpb.CompactResponse)
}

bool CompactResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_sstpb.CompactResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:import_sstpb.CompactResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_sstpb.CompactResponse)
  return false;
#undef DO_
}

void CompactResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_sstpb.CompactResponse)
  // @@protoc_insertion_point(serialize_end:import_sstpb.CompactResponse)
}

::google::protobuf::uint8* CompactResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_sstpb.CompactResponse)
  // @@protoc_insertion_point(serialize_to_array_end:import_sstpb.CompactResponse)
  return target;
}

size_t CompactResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_sstpb.CompactResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_sstpb.CompactResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CompactResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_sstpb.CompactResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_sstpb.CompactResponse)
    UnsafeMergeFrom(*source);
  }
}

void CompactResponse::MergeFrom(const CompactResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_sstpb.CompactResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CompactResponse::UnsafeMergeFrom(const CompactResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void CompactResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_sstpb.CompactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactResponse::CopyFrom(const CompactResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_sstpb.CompactResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CompactResponse::IsInitialized() const {

  return true;
}

void CompactResponse::Swap(CompactResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactResponse::InternalSwap(CompactResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompactResponse_descriptor_;
  metadata.reflection = CompactResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactResponse

inline const CompactResponse* CompactResponse::internal_default_instance() {
  return &CompactResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace import_sstpb

// @@protoc_insertion_point(global_scope)
