// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_sstpb.proto

#ifndef PROTOBUF_import_5fsstpb_2eproto__INCLUDED
#define PROTOBUF_import_5fsstpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "metapb.pb.h"
#include "errorpb.pb.h"
#include "kvrpcpb.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

namespace import_sstpb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_import_5fsstpb_2eproto();
void protobuf_InitDefaults_import_5fsstpb_2eproto();
void protobuf_AssignDesc_import_5fsstpb_2eproto();
void protobuf_ShutdownFile_import_5fsstpb_2eproto();

class CompactRequest;
class CompactResponse;
class IngestRequest;
class IngestResponse;
class Range;
class SSTMeta;
class SwitchModeRequest;
class SwitchModeResponse;
class UploadRequest;
class UploadResponse;

enum SwitchMode {
  Normal = 0,
  Import = 1,
  SwitchMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SwitchMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SwitchMode_IsValid(int value);
const SwitchMode SwitchMode_MIN = Normal;
const SwitchMode SwitchMode_MAX = Import;
const int SwitchMode_ARRAYSIZE = SwitchMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SwitchMode_descriptor();
inline const ::std::string& SwitchMode_Name(SwitchMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SwitchMode_descriptor(), value);
}
inline bool SwitchMode_Parse(
    const ::std::string& name, SwitchMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SwitchMode>(
    SwitchMode_descriptor(), name, value);
}
// ===================================================================

class SwitchModeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.SwitchModeRequest) */ {
 public:
  SwitchModeRequest();
  virtual ~SwitchModeRequest();

  SwitchModeRequest(const SwitchModeRequest& from);

  inline SwitchModeRequest& operator=(const SwitchModeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchModeRequest& default_instance();

  static const SwitchModeRequest* internal_default_instance();

  void Swap(SwitchModeRequest* other);

  // implements Message ----------------------------------------------

  inline SwitchModeRequest* New() const { return New(NULL); }

  SwitchModeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchModeRequest& from);
  void MergeFrom(const SwitchModeRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchModeRequest* other);
  void UnsafeMergeFrom(const SwitchModeRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .import_sstpb.SwitchMode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::import_sstpb::SwitchMode mode() const;
  void set_mode(::import_sstpb::SwitchMode value);

  // @@protoc_insertion_point(class_scope:import_sstpb.SwitchModeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mode_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeRequest> SwitchModeRequest_default_instance_;

// -------------------------------------------------------------------

class SwitchModeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.SwitchModeResponse) */ {
 public:
  SwitchModeResponse();
  virtual ~SwitchModeResponse();

  SwitchModeResponse(const SwitchModeResponse& from);

  inline SwitchModeResponse& operator=(const SwitchModeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchModeResponse& default_instance();

  static const SwitchModeResponse* internal_default_instance();

  void Swap(SwitchModeResponse* other);

  // implements Message ----------------------------------------------

  inline SwitchModeResponse* New() const { return New(NULL); }

  SwitchModeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SwitchModeResponse& from);
  void MergeFrom(const SwitchModeResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SwitchModeResponse* other);
  void UnsafeMergeFrom(const SwitchModeResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_sstpb.SwitchModeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeResponse> SwitchModeResponse_default_instance_;

// -------------------------------------------------------------------

class Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.Range) */ {
 public:
  Range();
  virtual ~Range();

  Range(const Range& from);

  inline Range& operator=(const Range& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Range& default_instance();

  static const Range* internal_default_instance();

  void Swap(Range* other);

  // implements Message ----------------------------------------------

  inline Range* New() const { return New(NULL); }

  Range* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Range& from);
  void MergeFrom(const Range& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Range* other);
  void UnsafeMergeFrom(const Range& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::std::string& start() const;
  void set_start(const ::std::string& value);
  void set_start(const char* value);
  void set_start(const void* value, size_t size);
  ::std::string* mutable_start();
  ::std::string* release_start();
  void set_allocated_start(::std::string* start);

  // optional bytes end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  const ::std::string& end() const;
  void set_end(const ::std::string& value);
  void set_end(const char* value);
  void set_end(const void* value, size_t size);
  ::std::string* mutable_end();
  ::std::string* release_end();
  void set_allocated_end(::std::string* end);

  // @@protoc_insertion_point(class_scope:import_sstpb.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_;
  ::google::protobuf::internal::ArenaStringPtr end_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Range> Range_default_instance_;

// -------------------------------------------------------------------

class SSTMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.SSTMeta) */ {
 public:
  SSTMeta();
  virtual ~SSTMeta();

  SSTMeta(const SSTMeta& from);

  inline SSTMeta& operator=(const SSTMeta& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSTMeta& default_instance();

  static const SSTMeta* internal_default_instance();

  void Swap(SSTMeta* other);

  // implements Message ----------------------------------------------

  inline SSTMeta* New() const { return New(NULL); }

  SSTMeta* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SSTMeta& from);
  void MergeFrom(const SSTMeta& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SSTMeta* other);
  void UnsafeMergeFrom(const SSTMeta& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional .import_sstpb.Range range = 2;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 2;
  const ::import_sstpb::Range& range() const;
  ::import_sstpb::Range* mutable_range();
  ::import_sstpb::Range* release_range();
  void set_allocated_range(::import_sstpb::Range* range);

  // optional uint32 crc32 = 3;
  void clear_crc32();
  static const int kCrc32FieldNumber = 3;
  ::google::protobuf::uint32 crc32() const;
  void set_crc32(::google::protobuf::uint32 value);

  // optional uint64 length = 4;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::uint64 length() const;
  void set_length(::google::protobuf::uint64 value);

  // optional string cf_name = 5;
  void clear_cf_name();
  static const int kCfNameFieldNumber = 5;
  const ::std::string& cf_name() const;
  void set_cf_name(const ::std::string& value);
  void set_cf_name(const char* value);
  void set_cf_name(const char* value, size_t size);
  ::std::string* mutable_cf_name();
  ::std::string* release_cf_name();
  void set_allocated_cf_name(::std::string* cf_name);

  // optional uint64 region_id = 6;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 6;
  ::google::protobuf::uint64 region_id() const;
  void set_region_id(::google::protobuf::uint64 value);

  // optional .metapb.RegionEpoch region_epoch = 7;
  bool has_region_epoch() const;
  void clear_region_epoch();
  static const int kRegionEpochFieldNumber = 7;
  const ::metapb::RegionEpoch& region_epoch() const;
  ::metapb::RegionEpoch* mutable_region_epoch();
  ::metapb::RegionEpoch* release_region_epoch();
  void set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch);

  // @@protoc_insertion_point(class_scope:import_sstpb.SSTMeta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr cf_name_;
  ::import_sstpb::Range* range_;
  ::metapb::RegionEpoch* region_epoch_;
  ::google::protobuf::uint64 length_;
  ::google::protobuf::uint64 region_id_;
  ::google::protobuf::uint32 crc32_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SSTMeta> SSTMeta_default_instance_;

// -------------------------------------------------------------------

class UploadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.UploadRequest) */ {
 public:
  UploadRequest();
  virtual ~UploadRequest();

  UploadRequest(const UploadRequest& from);

  inline UploadRequest& operator=(const UploadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadRequest& default_instance();

  enum ChunkCase {
    kMeta = 1,
    kData = 2,
    CHUNK_NOT_SET = 0,
  };

  static const UploadRequest* internal_default_instance();

  void Swap(UploadRequest* other);

  // implements Message ----------------------------------------------

  inline UploadRequest* New() const { return New(NULL); }

  UploadRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadRequest& from);
  void MergeFrom(const UploadRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadRequest* other);
  void UnsafeMergeFrom(const UploadRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .import_sstpb.SSTMeta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::import_sstpb::SSTMeta& meta() const;
  ::import_sstpb::SSTMeta* mutable_meta();
  ::import_sstpb::SSTMeta* release_meta();
  void set_allocated_meta(::import_sstpb::SSTMeta* meta);

  // optional bytes data = 2;
  private:
  bool has_data() const;
  public:
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  ChunkCase chunk_case() const;
  // @@protoc_insertion_point(class_scope:import_sstpb.UploadRequest)
 private:
  inline void set_has_meta();
  inline void set_has_data();

  inline bool has_chunk() const;
  void clear_chunk();
  inline void clear_has_chunk();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ChunkUnion {
    ChunkUnion() {}
    ::import_sstpb::SSTMeta* meta_;
    ::google::protobuf::internal::ArenaStringPtr data_;
  } chunk_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UploadRequest> UploadRequest_default_instance_;

// -------------------------------------------------------------------

class UploadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.UploadResponse) */ {
 public:
  UploadResponse();
  virtual ~UploadResponse();

  UploadResponse(const UploadResponse& from);

  inline UploadResponse& operator=(const UploadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadResponse& default_instance();

  static const UploadResponse* internal_default_instance();

  void Swap(UploadResponse* other);

  // implements Message ----------------------------------------------

  inline UploadResponse* New() const { return New(NULL); }

  UploadResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadResponse& from);
  void MergeFrom(const UploadResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadResponse* other);
  void UnsafeMergeFrom(const UploadResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_sstpb.UploadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UploadResponse> UploadResponse_default_instance_;

// -------------------------------------------------------------------

class IngestRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.IngestRequest) */ {
 public:
  IngestRequest();
  virtual ~IngestRequest();

  IngestRequest(const IngestRequest& from);

  inline IngestRequest& operator=(const IngestRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IngestRequest& default_instance();

  static const IngestRequest* internal_default_instance();

  void Swap(IngestRequest* other);

  // implements Message ----------------------------------------------

  inline IngestRequest* New() const { return New(NULL); }

  IngestRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IngestRequest& from);
  void MergeFrom(const IngestRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IngestRequest* other);
  void UnsafeMergeFrom(const IngestRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .kvrpcpb.Context context = 1;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::kvrpcpb::Context& context() const;
  ::kvrpcpb::Context* mutable_context();
  ::kvrpcpb::Context* release_context();
  void set_allocated_context(::kvrpcpb::Context* context);

  // optional .import_sstpb.SSTMeta sst = 2;
  bool has_sst() const;
  void clear_sst();
  static const int kSstFieldNumber = 2;
  const ::import_sstpb::SSTMeta& sst() const;
  ::import_sstpb::SSTMeta* mutable_sst();
  ::import_sstpb::SSTMeta* release_sst();
  void set_allocated_sst(::import_sstpb::SSTMeta* sst);

  // @@protoc_insertion_point(class_scope:import_sstpb.IngestRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::kvrpcpb::Context* context_;
  ::import_sstpb::SSTMeta* sst_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IngestRequest> IngestRequest_default_instance_;

// -------------------------------------------------------------------

class IngestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.IngestResponse) */ {
 public:
  IngestResponse();
  virtual ~IngestResponse();

  IngestResponse(const IngestResponse& from);

  inline IngestResponse& operator=(const IngestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IngestResponse& default_instance();

  static const IngestResponse* internal_default_instance();

  void Swap(IngestResponse* other);

  // implements Message ----------------------------------------------

  inline IngestResponse* New() const { return New(NULL); }

  IngestResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IngestResponse& from);
  void MergeFrom(const IngestResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IngestResponse* other);
  void UnsafeMergeFrom(const IngestResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .errorpb.Error error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::errorpb::Error& error() const;
  ::errorpb::Error* mutable_error();
  ::errorpb::Error* release_error();
  void set_allocated_error(::errorpb::Error* error);

  // @@protoc_insertion_point(class_scope:import_sstpb.IngestResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::errorpb::Error* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IngestResponse> IngestResponse_default_instance_;

// -------------------------------------------------------------------

class CompactRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.CompactRequest) */ {
 public:
  CompactRequest();
  virtual ~CompactRequest();

  CompactRequest(const CompactRequest& from);

  inline CompactRequest& operator=(const CompactRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompactRequest& default_instance();

  static const CompactRequest* internal_default_instance();

  void Swap(CompactRequest* other);

  // implements Message ----------------------------------------------

  inline CompactRequest* New() const { return New(NULL); }

  CompactRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompactRequest& from);
  void MergeFrom(const CompactRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompactRequest* other);
  void UnsafeMergeFrom(const CompactRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .import_sstpb.Range range = 1;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 1;
  const ::import_sstpb::Range& range() const;
  ::import_sstpb::Range* mutable_range();
  ::import_sstpb::Range* release_range();
  void set_allocated_range(::import_sstpb::Range* range);

  // optional int32 output_level = 2;
  void clear_output_level();
  static const int kOutputLevelFieldNumber = 2;
  ::google::protobuf::int32 output_level() const;
  void set_output_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:import_sstpb.CompactRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::import_sstpb::Range* range_;
  ::google::protobuf::int32 output_level_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CompactRequest> CompactRequest_default_instance_;

// -------------------------------------------------------------------

class CompactResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:import_sstpb.CompactResponse) */ {
 public:
  CompactResponse();
  virtual ~CompactResponse();

  CompactResponse(const CompactResponse& from);

  inline CompactResponse& operator=(const CompactResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompactResponse& default_instance();

  static const CompactResponse* internal_default_instance();

  void Swap(CompactResponse* other);

  // implements Message ----------------------------------------------

  inline CompactResponse* New() const { return New(NULL); }

  CompactResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CompactResponse& from);
  void MergeFrom(const CompactResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CompactResponse* other);
  void UnsafeMergeFrom(const CompactResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:import_sstpb.CompactResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_import_5fsstpb_2eproto_impl();
  friend void  protobuf_AddDesc_import_5fsstpb_2eproto_impl();
  friend void protobuf_AssignDesc_import_5fsstpb_2eproto();
  friend void protobuf_ShutdownFile_import_5fsstpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CompactResponse> CompactResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SwitchModeRequest

// optional .import_sstpb.SwitchMode mode = 1;
inline void SwitchModeRequest::clear_mode() {
  mode_ = 0;
}
inline ::import_sstpb::SwitchMode SwitchModeRequest::mode() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SwitchModeRequest.mode)
  return static_cast< ::import_sstpb::SwitchMode >(mode_);
}
inline void SwitchModeRequest::set_mode(::import_sstpb::SwitchMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SwitchModeRequest.mode)
}

inline const SwitchModeRequest* SwitchModeRequest::internal_default_instance() {
  return &SwitchModeRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SwitchModeResponse

inline const SwitchModeResponse* SwitchModeResponse::internal_default_instance() {
  return &SwitchModeResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// Range

// optional bytes start = 1;
inline void Range::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Range::start() const {
  // @@protoc_insertion_point(field_get:import_sstpb.Range.start)
  return start_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Range::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.Range.start)
}
inline void Range::set_start(const char* value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.Range.start)
}
inline void Range::set_start(const void* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.Range.start)
}
inline ::std::string* Range::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.Range.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Range::release_start() {
  // @@protoc_insertion_point(field_release:import_sstpb.Range.start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Range::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.Range.start)
}

// optional bytes end = 2;
inline void Range::clear_end() {
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Range::end() const {
  // @@protoc_insertion_point(field_get:import_sstpb.Range.end)
  return end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Range::set_end(const ::std::string& value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.Range.end)
}
inline void Range::set_end(const char* value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.Range.end)
}
inline void Range::set_end(const void* value, size_t size) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.Range.end)
}
inline ::std::string* Range::mutable_end() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.Range.end)
  return end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Range::release_end() {
  // @@protoc_insertion_point(field_release:import_sstpb.Range.end)
  
  return end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Range::set_allocated_end(::std::string* end) {
  if (end != NULL) {
    
  } else {
    
  }
  end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.Range.end)
}

inline const Range* Range::internal_default_instance() {
  return &Range_default_instance_.get();
}
// -------------------------------------------------------------------

// SSTMeta

// optional bytes uuid = 1;
inline void SSTMeta::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SSTMeta::uuid() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTMeta::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.uuid)
}
inline void SSTMeta::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.SSTMeta.uuid)
}
inline void SSTMeta::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.SSTMeta.uuid)
}
inline ::std::string* SSTMeta::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSTMeta::release_uuid() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTMeta::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.uuid)
}

// optional .import_sstpb.Range range = 2;
inline bool SSTMeta::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void SSTMeta::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::import_sstpb::Range& SSTMeta::range() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.range)
  return range_ != NULL ? *range_
                         : *::import_sstpb::Range::internal_default_instance();
}
inline ::import_sstpb::Range* SSTMeta::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::import_sstpb::Range;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.range)
  return range_;
}
inline ::import_sstpb::Range* SSTMeta::release_range() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.range)
  
  ::import_sstpb::Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline void SSTMeta::set_allocated_range(::import_sstpb::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.range)
}

// optional uint32 crc32 = 3;
inline void SSTMeta::clear_crc32() {
  crc32_ = 0u;
}
inline ::google::protobuf::uint32 SSTMeta::crc32() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.crc32)
  return crc32_;
}
inline void SSTMeta::set_crc32(::google::protobuf::uint32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.crc32)
}

// optional uint64 length = 4;
inline void SSTMeta::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SSTMeta::length() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.length)
  return length_;
}
inline void SSTMeta::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.length)
}

// optional string cf_name = 5;
inline void SSTMeta::clear_cf_name() {
  cf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SSTMeta::cf_name() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.cf_name)
  return cf_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTMeta::set_cf_name(const ::std::string& value) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.cf_name)
}
inline void SSTMeta::set_cf_name(const char* value) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.SSTMeta.cf_name)
}
inline void SSTMeta::set_cf_name(const char* value, size_t size) {
  
  cf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.SSTMeta.cf_name)
}
inline ::std::string* SSTMeta::mutable_cf_name() {
  
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.cf_name)
  return cf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SSTMeta::release_cf_name() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.cf_name)
  
  return cf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SSTMeta::set_allocated_cf_name(::std::string* cf_name) {
  if (cf_name != NULL) {
    
  } else {
    
  }
  cf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cf_name);
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.cf_name)
}

// optional uint64 region_id = 6;
inline void SSTMeta::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SSTMeta::region_id() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.region_id)
  return region_id_;
}
inline void SSTMeta::set_region_id(::google::protobuf::uint64 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.SSTMeta.region_id)
}

// optional .metapb.RegionEpoch region_epoch = 7;
inline bool SSTMeta::has_region_epoch() const {
  return this != internal_default_instance() && region_epoch_ != NULL;
}
inline void SSTMeta::clear_region_epoch() {
  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) delete region_epoch_;
  region_epoch_ = NULL;
}
inline const ::metapb::RegionEpoch& SSTMeta::region_epoch() const {
  // @@protoc_insertion_point(field_get:import_sstpb.SSTMeta.region_epoch)
  return region_epoch_ != NULL ? *region_epoch_
                         : *::metapb::RegionEpoch::internal_default_instance();
}
inline ::metapb::RegionEpoch* SSTMeta::mutable_region_epoch() {
  
  if (region_epoch_ == NULL) {
    region_epoch_ = new ::metapb::RegionEpoch;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.SSTMeta.region_epoch)
  return region_epoch_;
}
inline ::metapb::RegionEpoch* SSTMeta::release_region_epoch() {
  // @@protoc_insertion_point(field_release:import_sstpb.SSTMeta.region_epoch)
  
  ::metapb::RegionEpoch* temp = region_epoch_;
  region_epoch_ = NULL;
  return temp;
}
inline void SSTMeta::set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch) {
  delete region_epoch_;
  region_epoch_ = region_epoch;
  if (region_epoch) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.SSTMeta.region_epoch)
}

inline const SSTMeta* SSTMeta::internal_default_instance() {
  return &SSTMeta_default_instance_.get();
}
// -------------------------------------------------------------------

// UploadRequest

// optional .import_sstpb.SSTMeta meta = 1;
inline bool UploadRequest::has_meta() const {
  return chunk_case() == kMeta;
}
inline void UploadRequest::set_has_meta() {
  _oneof_case_[0] = kMeta;
}
inline void UploadRequest::clear_meta() {
  if (has_meta()) {
    delete chunk_.meta_;
    clear_has_chunk();
  }
}
inline  const ::import_sstpb::SSTMeta& UploadRequest::meta() const {
  // @@protoc_insertion_point(field_get:import_sstpb.UploadRequest.meta)
  return has_meta()
      ? *chunk_.meta_
      : ::import_sstpb::SSTMeta::default_instance();
}
inline ::import_sstpb::SSTMeta* UploadRequest::mutable_meta() {
  if (!has_meta()) {
    clear_chunk();
    set_has_meta();
    chunk_.meta_ = new ::import_sstpb::SSTMeta;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.UploadRequest.meta)
  return chunk_.meta_;
}
inline ::import_sstpb::SSTMeta* UploadRequest::release_meta() {
  // @@protoc_insertion_point(field_release:import_sstpb.UploadRequest.meta)
  if (has_meta()) {
    clear_has_chunk();
    ::import_sstpb::SSTMeta* temp = chunk_.meta_;
    chunk_.meta_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void UploadRequest::set_allocated_meta(::import_sstpb::SSTMeta* meta) {
  clear_chunk();
  if (meta) {
    set_has_meta();
    chunk_.meta_ = meta;
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.UploadRequest.meta)
}

// optional bytes data = 2;
inline bool UploadRequest::has_data() const {
  return chunk_case() == kData;
}
inline void UploadRequest::set_has_data() {
  _oneof_case_[0] = kData;
}
inline void UploadRequest::clear_data() {
  if (has_data()) {
    chunk_.data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_chunk();
  }
}
inline const ::std::string& UploadRequest::data() const {
  // @@protoc_insertion_point(field_get:import_sstpb.UploadRequest.data)
  if (has_data()) {
    return chunk_.data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void UploadRequest::set_data(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:import_sstpb.UploadRequest.data)
}
inline void UploadRequest::set_data(const char* value) {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:import_sstpb.UploadRequest.data)
}
inline void UploadRequest::set_data(const void* value, size_t size) {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  chunk_.data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:import_sstpb.UploadRequest.data)
}
inline ::std::string* UploadRequest::mutable_data() {
  if (!has_data()) {
    clear_chunk();
    set_has_data();
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.UploadRequest.data)
  return chunk_.data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadRequest::release_data() {
  // @@protoc_insertion_point(field_release:import_sstpb.UploadRequest.data)
  if (has_data()) {
    clear_has_chunk();
    return chunk_.data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void UploadRequest::set_allocated_data(::std::string* data) {
  if (!has_data()) {
    chunk_.data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_chunk();
  if (data != NULL) {
    set_has_data();
    chunk_.data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        data);
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.UploadRequest.data)
}

inline bool UploadRequest::has_chunk() const {
  return chunk_case() != CHUNK_NOT_SET;
}
inline void UploadRequest::clear_has_chunk() {
  _oneof_case_[0] = CHUNK_NOT_SET;
}
inline UploadRequest::ChunkCase UploadRequest::chunk_case() const {
  return UploadRequest::ChunkCase(_oneof_case_[0]);
}
inline const UploadRequest* UploadRequest::internal_default_instance() {
  return &UploadRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UploadResponse

inline const UploadResponse* UploadResponse::internal_default_instance() {
  return &UploadResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// IngestRequest

// optional .kvrpcpb.Context context = 1;
inline bool IngestRequest::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline void IngestRequest::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) delete context_;
  context_ = NULL;
}
inline const ::kvrpcpb::Context& IngestRequest::context() const {
  // @@protoc_insertion_point(field_get:import_sstpb.IngestRequest.context)
  return context_ != NULL ? *context_
                         : *::kvrpcpb::Context::internal_default_instance();
}
inline ::kvrpcpb::Context* IngestRequest::mutable_context() {
  
  if (context_ == NULL) {
    context_ = new ::kvrpcpb::Context;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestRequest.context)
  return context_;
}
inline ::kvrpcpb::Context* IngestRequest::release_context() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestRequest.context)
  
  ::kvrpcpb::Context* temp = context_;
  context_ = NULL;
  return temp;
}
inline void IngestRequest::set_allocated_context(::kvrpcpb::Context* context) {
  delete context_;
  context_ = context;
  if (context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestRequest.context)
}

// optional .import_sstpb.SSTMeta sst = 2;
inline bool IngestRequest::has_sst() const {
  return this != internal_default_instance() && sst_ != NULL;
}
inline void IngestRequest::clear_sst() {
  if (GetArenaNoVirtual() == NULL && sst_ != NULL) delete sst_;
  sst_ = NULL;
}
inline const ::import_sstpb::SSTMeta& IngestRequest::sst() const {
  // @@protoc_insertion_point(field_get:import_sstpb.IngestRequest.sst)
  return sst_ != NULL ? *sst_
                         : *::import_sstpb::SSTMeta::internal_default_instance();
}
inline ::import_sstpb::SSTMeta* IngestRequest::mutable_sst() {
  
  if (sst_ == NULL) {
    sst_ = new ::import_sstpb::SSTMeta;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestRequest.sst)
  return sst_;
}
inline ::import_sstpb::SSTMeta* IngestRequest::release_sst() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestRequest.sst)
  
  ::import_sstpb::SSTMeta* temp = sst_;
  sst_ = NULL;
  return temp;
}
inline void IngestRequest::set_allocated_sst(::import_sstpb::SSTMeta* sst) {
  delete sst_;
  sst_ = sst;
  if (sst) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestRequest.sst)
}

inline const IngestRequest* IngestRequest::internal_default_instance() {
  return &IngestRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// IngestResponse

// optional .errorpb.Error error = 1;
inline bool IngestResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void IngestResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::errorpb::Error& IngestResponse::error() const {
  // @@protoc_insertion_point(field_get:import_sstpb.IngestResponse.error)
  return error_ != NULL ? *error_
                         : *::errorpb::Error::internal_default_instance();
}
inline ::errorpb::Error* IngestResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::errorpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.IngestResponse.error)
  return error_;
}
inline ::errorpb::Error* IngestResponse::release_error() {
  // @@protoc_insertion_point(field_release:import_sstpb.IngestResponse.error)
  
  ::errorpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void IngestResponse::set_allocated_error(::errorpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.IngestResponse.error)
}

inline const IngestResponse* IngestResponse::internal_default_instance() {
  return &IngestResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CompactRequest

// optional .import_sstpb.Range range = 1;
inline bool CompactRequest::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void CompactRequest::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::import_sstpb::Range& CompactRequest::range() const {
  // @@protoc_insertion_point(field_get:import_sstpb.CompactRequest.range)
  return range_ != NULL ? *range_
                         : *::import_sstpb::Range::internal_default_instance();
}
inline ::import_sstpb::Range* CompactRequest::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::import_sstpb::Range;
  }
  // @@protoc_insertion_point(field_mutable:import_sstpb.CompactRequest.range)
  return range_;
}
inline ::import_sstpb::Range* CompactRequest::release_range() {
  // @@protoc_insertion_point(field_release:import_sstpb.CompactRequest.range)
  
  ::import_sstpb::Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline void CompactRequest::set_allocated_range(::import_sstpb::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:import_sstpb.CompactRequest.range)
}

// optional int32 output_level = 2;
inline void CompactRequest::clear_output_level() {
  output_level_ = 0;
}
inline ::google::protobuf::int32 CompactRequest::output_level() const {
  // @@protoc_insertion_point(field_get:import_sstpb.CompactRequest.output_level)
  return output_level_;
}
inline void CompactRequest::set_output_level(::google::protobuf::int32 value) {
  
  output_level_ = value;
  // @@protoc_insertion_point(field_set:import_sstpb.CompactRequest.output_level)
}

inline const CompactRequest* CompactRequest::internal_default_instance() {
  return &CompactRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CompactResponse

inline const CompactResponse* CompactResponse::internal_default_instance() {
  return &CompactResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace import_sstpb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::import_sstpb::SwitchMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::import_sstpb::SwitchMode>() {
  return ::import_sstpb::SwitchMode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_import_5fsstpb_2eproto__INCLUDED
